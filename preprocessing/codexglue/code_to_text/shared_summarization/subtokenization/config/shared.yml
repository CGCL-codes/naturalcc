preprocess:
  task: summarization # task', metavar='TASK', default="translation", choices=TASK_REGISTRY.keys(), help='task'
  source_lang: code_tokens
  target_lang: docstring_tokens

  only_source: 0

  trainpref: ~/codexglue/code_to_text/attributes/*/train #", metavar="FP", default=None, help="train file prefix"
  validpref: ~/codexglue/code_to_text/attributes/*/valid #", metavar="FP", default=None, help="comma separated, valid file prefixes"
  testpref: ~/codexglue/code_to_text/attributes/*/test  #", metavar="FP", default=None, help="comma separated, test file prefixes"

  # bin dataset
  dataset_impl: mmap #', metavar='FORMAT', default='mmap', choices=get_available_dataset_impl(), help='output dataset implementation'
  destdir: ~/codexglue/code_to_text/summarization/subtokenization/data-mmap #", metavar="DIR", default="data-bin", help="destination dir"

  only_train: 0 # if set false, generate dictionaries with additional validation datasets. e.g. neural-transformer

  joined_dictionary: 0

  thresholdsrc: 0
  thresholdtgt: 0

  nwordssrc: 50000
  nwordstgt: 50000

  srcdict: ~
  tgtdict: ~

  alignfile: ~ #", metavar="ALIGN", default=None, help="an alignment file (optional)"
  padding_factor: 1 #", metavar="N", default=8, type=int, help="Pad dictionary size to be multiple of N"
  workers: 50 # ", metavar="N", default=1, type=int, help="number of parallel workers"