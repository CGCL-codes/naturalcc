# -*- coding: utf-8 -*-

STATEMENTS = {
    'cpp': {
        'preproc_include',
        'using_declaration',
        'declaration',
        'expression_statement',
        'preproc_def',
    },
    'java': {
        'import_declaration',
        'local_variable_declaration',
        'expression_statement',
    },
    'python': {
        'import_statement',
        'expression_statement',
        'return_statement',
    },
    'csharp': {
        'using_directive',
        'expression_statement',
        'local_declaration_statement',
    },
}

OPERATORS = {
    'AddANDOp': ['▁+='],
    'AddOp': ['▁+'],
    'AmpAsgnOp': ['▁&', '='],
    'AmpOp': ['▁&'],
    'AsgnOp': ['▁='],
    'AtOp': ['▁@'],
    'ColonOp': ['▁:'],
    'CommaOp': ['▁,'],
    'DblAmpOp': ['▁&&'],
    'DblOrOp': ['▁||'],
    'DblQuoteOp': ['▁"'],
    'DivANDOp': ['▁/', '='],
    'DivOp': ['▁/'],
    'DncOp': ['▁++'],
    'DotOp': ['▁.'],
    'EllipsisOp': ['▁...'],
    'EqualOp': ['▁=='],
    'ExclmOp': ['▁!'],
    'ExpOp': ['▁**'],
    'FloorDivANDOp': ['▁//', '='],
    'GEOp': ['▁>='],
    'GTOp': ['▁>'],
    'IncOp': ['▁--'],
    'InequalOp': ['▁!='],
    'LEOp': ['▁<='],
    'LambdaOp': ['▁=>'],
    'LeftBracketOp': ['▁['],
    'LeftCurlyOp': ['▁{'],
    'LeftParenOp': ['▁('],
    'LeftShitAsgnOp': ['▁<<', '='],
    'LeftShitOp': ['▁<<'],
    'LessOp': ['▁<'],
    'ModANDOp': ['▁%', '='],
    'ModOp': ['▁%'],
    'MulANDOp': ['▁*', '='],
    'MulOp': ['▁*'],
    'OrAsgnOp': ['▁|'],
    'Pntr2MembOp': ['▁->'],
    'QuestionOp': ['▁?'],
    'RightBracketOp': ['▁]'],
    'RightCurlyOp': ['▁}'],
    'RightShiftOp': ['▁>>'],
    'RightShitAsgnOp': ['▁>>', '='],
    'ScopeResOp': ['▁::'],
    'SemicolonOp': ['▁;'],
    'SglQuoteOp': ["▁'"],
    'SubANDOp': ['▁-='],
    'SubOp': ['▁-'],
    'TildeOp': ['▁~'],
    'XORAsgnOp': ['▁^', '='],
    'XOROp': ['▁^'],
}
