preprocess:
  task: summarization # task', metavar='TASK', default="translation", choices=TASK_REGISTRY.keys(), help='task'
  source_lang: code_tokens
  target_lang: docstring_tokens
  only_source: 0
  trainpref: ~/code_search_net_feng/proj/flatten/ruby/train #", metavar="FP", default=None, help="train file prefix"
  validpref: ~/code_search_net_feng/proj/flatten/ruby/valid #", metavar="FP", default=None, help="comma separated, valid file prefixes"
  testpref:  ~/code_search_net_feng/proj/flatten/ruby/test  #", metavar="FP", default=None, help="comma separated, test file prefixes"

  # bin dataset
  dataset_impl: mmap #', metavar='FORMAT', default='mmap', choices=get_available_dataset_impl(), help='output dataset implementation'
  destdir: ~/code_search_net_feng/proj/meta_sum/ruby/data-mmap #", metavar="DIR", default="data-bin", help="destination dir"

  only_train: 1 # if set false, generate dictionaries with additional validation datasets. e.g. neural-transformer

#  align_suffix: ~ # ", metavar="FP", default=None, help="alignment file suffix"
  thresholdsrc: 2 #", metavar="N", default=0, type=int, help="map words appearing less than threshold times to unknown"
  srcdict: ~
  tgtdict: ~
#  srcdict: ~/code_search_net_feng/proj/meta_sum/ruby/data-mmap/code_tokens.dict.json
#  tgtdict: ~/code_search_net_feng/proj/meta_sum/ruby/data-mmap/docstring_tokens.dict.json
  nwordssrc: 50000 #", metavar="N", default=-1, type=int, help="number of source words to retain"
  nwordstgt: 30000
  alignfile: ~ #", metavar="ALIGN", default=None, help="an alignment file (optional)"
  joined_dictionary: 0 # ", action="store_true", help="Generate joined dictionary"
  padding_factor: 8 #", metavar="N", default=8, type=int, help="Pad dictionary size to be multiple of N"
  workers: 40 # ", metavar="N", default=1, type=int, help="number of parallel workers"