[{"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart, and could you list in asc by the y-axis?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the average age for male and female students with a bar chart, and could you list bar from high to low order?", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , avg(age) FROM Student GROUP BY sex ORDER BY Sex DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , avg(age) FROM Student GROUP BY sex ORDER BY Sex DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of  name and the sum of manufacturer , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name"}, "hardness": "Medium"}, {"nl_queries": "Create a pie chart showing how many away team across away team.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Away_team", "binning": ""}, "VQL": "Visualize PIE SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Away_team"}, "hardness": "Easy"}, {"nl_queries": "Show the number of names of high school students with a bar chart, and sort by the total number in desc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Select the name of the products with a price less than or equal to $200, and count them by a bar chart, and rank by the y axis in ascending.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, I want to list in desc by the names.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the headquarter , and group by attribute headquarter by a bar chart, and show in desc by the x-axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter by a bar chart, and list by the x axis in descending please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC"}, "hardness": "Hard"}, {"nl_queries": "Scatter plot to show department id on x axis and sum salary on y axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT DEPARTMENT_ID , SUM(salary) FROM employees GROUP BY department_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT DEPARTMENT_ID , SUM(salary) FROM employees GROUP BY department_id"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for how many people are there of each nationality?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "How many games has each stadium held. Show scatter chart.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.id , count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.id , count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the number of schools in each county, order X in ascending order.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY County ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and salary , and visualize them by a bar chart, and list in ascending by the bars.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMAIL ASC", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMAIL ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of counties for all appellations?, and I want to order bars from high to low order please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, visualize a scatter chart about the correlation between  commission_pct and  department_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": ""}, "VQL": "Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'"}, "hardness": "Hard"}, {"nl_queries": "List the genre name and genre id using a bar chart, and sort by the x axis in descending.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T2.name DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of  hire_date and the average of manager_id bin hire_date by time in a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and order in asc by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of manufacturer , and group by attribute founder, and list from high to low by the Y-axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Manufacturer) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Manufacturer) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what are the different classes of races, and how many races correspond to each?, sort from high to low by the names please.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "How many documents for different location code? Plot a pie chart to show the proportion.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code", "binning": ""}, "VQL": "Visualize PIE SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code"}, "hardness": "Easy"}, {"nl_queries": "Find the name and account balance of the customer whose name includes the letter \u2018a\u2019 Visualize them using a bar chart, show y-axis in descending order.", "db_id": "loan_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY acc_bal DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY acc_bal DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute name by a bar chart, and sort from low to high by the bar please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "For those products with a price between 60 and 120, visualize the relationship between  price and  manufacturer , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "List all singer names in concerts in year 2014, and count them by a bar chart, list from high to low by the the number of name.", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar chart x axis year y axis the number of year, sort y-axis in descending order.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM home_game  ORDER BY COUNT(year) DESC", "binning": "BIN year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT year , COUNT(year) FROM home_game  ORDER BY COUNT(year) DESC BIN year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Find  date_address_from and the sum of monthly_rental bin date_address_from by time, and visualize them by a bar chart.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC", "binning": "BIN date_address_from BY YEAR"}, "VQL": "Visualize BAR SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Neutral by a bar chart, and order by the x axis in asc please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of price , and group by attribute name, sort in desc by the x-axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and commission_pct , and list y axis in desc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT DESC", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, I want to order by the bar in descending.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of countries for all people whose age is smaller than the average, could you rank in descending by the names?", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the card type codes and the number of transactions Visualize by bar chart, and rank by the X-axis in descending please.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all template type codes and the number of documents using each type with a bar chart.", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code", "binning": ""}, "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, show me about the change of employee_id over hire_date in a line chart, list from high to low by the x-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "How many musicals has each nominee been nominated for. Plot them as bar chart.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, show me about the distribution of  hire_date and the average of department_id bin hire_date by weekday in a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, show X-axis from high to low order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and manager_id , and visualize them by a bar chart, could you rank total number in ascending order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of members living in each address. Plot them as pie chart.", "db_id": "coffee_shop", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Address , count(*) FROM member GROUP BY address", "binning": ""}, "VQL": "Visualize PIE SELECT Address , count(*) FROM member GROUP BY address"}, "hardness": "Easy"}, {"nl_queries": "How many students are in each department Plot them as bar chart, and show by the total number from low to high please.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of total number of credits from each dept name", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , sum(credits) FROM course GROUP BY dept_name", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , sum(credits) FROM course GROUP BY dept_name"}, "hardness": "Easy"}, {"nl_queries": "Show different occupations along with the number of players in each occupation with a bar chart, could you order by the names from high to low?", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_500 and ID , and rank in ascending by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis team name y axis school_id, and list in ascending by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "how many entrepreneurs correspond to each investor?, and sort Y in asc order.", "db_id": "entrepreneur", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, and order bars in descending order.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title DESC", "binning": ""}, "VQL": "Visualize BAR SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar chart of sum amount payment from each payment method code, and could you sort in asc by the Y?", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY SUM(Amount_Payment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY SUM(Amount_Payment) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of revenue , and group by attribute name, show x axis in descending order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart, I want to show by the y axis in desc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex, and order by the X-axis from high to low please.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY Sex DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY Sex DESC"}, "hardness": "Medium"}, {"nl_queries": "For each origin, how many flights came from there Show bar chart, and sort bar from low to high order please.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM Flight GROUP BY origin ORDER BY origin ASC", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM Flight GROUP BY origin ORDER BY origin ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many wines are there for each grape?, sort in ascending by the Grape.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and order by the x axis in desc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me a bar chart for what are the different transaction types, and how many transactions of each have taken place?", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what are the names and their total grades for each high schooler?, could you display in asc by the Y-axis?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how old is each gender, on average?, and could you show bars in asc order please?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the dates with a maximum temperature higher than 85, and count them by a bar chart", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85", "binning": "BIN date BY YEAR"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the last_name , sort by the Y in asc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT ASC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of  date_address_from and the sum of monthly_rental bin date_address_from by time.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC", "binning": "BIN date_address_from BY YEAR"}, "VQL": "Visualize BAR SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, for manager_id, hire_date, visualize the trend, show by the x-axis in descending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and commission_pct , order in ascending by the total number.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, I want to show by the Y in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many wines are there for each grape?, list from low to high by the Grape please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC"}, "hardness": "Medium"}, {"nl_queries": ", rank from high to low by the bars.", "db_id": "company_office", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Industry , COUNT(*) FROM Companies GROUP BY Industry ORDER BY Industry DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Industry , COUNT(*) FROM Companies GROUP BY Industry ORDER BY Industry DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose first name is ending with the letter m, compute their average salary for visualizing a bar chart, and could you order mean salary in asc order please?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY AVG(SALARY) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , AVG(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY AVG(SALARY) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar chart of mean stu gpa from each dept code, sort in descending by the total number.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , avg(stu_gpa) FROM student GROUP BY dept_code ORDER BY avg(stu_gpa) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , avg(stu_gpa) FROM student GROUP BY dept_code ORDER BY avg(stu_gpa) DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a pie chart showing how many description across description.", "db_id": "aircraft", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description", "binning": ""}, "VQL": "Visualize PIE SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description"}, "hardness": "Easy"}, {"nl_queries": "Please give me a bar chart to show the number of players in each years played, show in ascending by the bars.", "db_id": "match_season", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY Years_Played ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY Years_Played ASC"}, "hardness": "Medium"}, {"nl_queries": "How many flights in each destination city? Return a bar chart.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT destination , COUNT(destination) FROM Flight GROUP BY destination", "binning": ""}, "VQL": "Visualize BAR SELECT destination , COUNT(destination) FROM Flight GROUP BY destination"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart to show the revenue of the company that earns the highest revenue in each headquarter city.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , max(revenue) FROM manufacturers GROUP BY Headquarter", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , max(revenue) FROM manufacturers GROUP BY Headquarter"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis nationality y axis mean meter 100, and could you list X in desc order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the names of all the playlists?, and could you sort by the Y in descending please?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, I want to show in desc by the y axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of minimal price from each name, and order by the y-axis from high to low.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , min(price) FROM products GROUP BY Name ORDER BY min(price) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , min(price) FROM products GROUP BY Name ORDER BY min(price) DESC"}, "hardness": "Easy"}, {"nl_queries": "For each user, find their name and the number of reviews written by them Show bar chart, and I want to list by the names from low to high.", "db_id": "epinions_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY name ASC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a scatter chart on what are the ids and durations of the trips with the top 3 durations?", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3", "binning": ""}, "VQL": "Visualize SCATTER SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the dates of the assessment notes?, and order in asc by the y-axis.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes  ORDER BY COUNT(date_of_notes) ASC", "binning": "BIN date_of_notes BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes  ORDER BY COUNT(date_of_notes) ASC BIN date_of_notes BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different job titles for all those jobs in department 80 using a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, sort x-axis in descending order please.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type. ", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation", "binning": ""}, "VQL": "Visualize PIE SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of  middle_name and  author_tutor_ATB .", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT middle_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize BAR SELECT middle_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "Plot year by mean price as a line chart, rank from high to low by the x axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of code , and group by attribute headquarter in a bar chart, and show from high to low by the x axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the email , and I want to list by the x-axis in desc please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMAIL DESC", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMAIL DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart showing the number of films each cinema has, display names in desc order please.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of booking start date for the apartments that have more than two bedrooms for each year with a bar chart, and order total number in desc order.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2  ORDER BY COUNT(booking_start_date) DESC", "binning": "BIN booking_start_date BY YEAR"}, "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Just list the name and price of its most expensive product in a bar chart, I want to rank X in descending order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , max(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , max(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names of all the physicians who took appointments, and count them by a bar chart", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name, display in descending by the X.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the names of the technicians that are assigned to repair machines with more point values than 70?", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the founder , and group by attribute founder, rank from high to low by the x-axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and the amount of name , and group by attribute name in a bar chart, sort y axis from low to high order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by weekday with a bar chart.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Date , COUNT(Document_Date) FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'", "binning": "BIN Document_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Document_Date , COUNT(Document_Date) FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project' BIN Document_Date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show the product name and total order quantity for each product. Show bar chart.", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.product_name , AVG(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.product_name , AVG(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name"}, "hardness": "Medium"}, {"nl_queries": "How many patients do each physician take care of? List their names and number of patients they take care of in a bar chart, and order in ascending by the y-axis.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many events are there for each party. ", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of  hire_date and the sum of salary bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each budget type code, and rank from high to low by the X please.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY Budget_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY Budget_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of courses for each subject in a bar chart, could you rank X from high to low order?", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY subject_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY subject_name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, give me the comparison about the sum of salary over the hire_date bin hire_date by time by a bar chart, order by the y axis in descending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Show the name and age for all drivers with a bar chart, and display by the total number from low to high.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Age ASC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the trend about employee_id over hire_date , show X in descending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE DESC"}, "hardness": "Medium"}, {"nl_queries": "A pie chart for what are the number of the countries of all airlines whose names start with Orbit?", "db_id": "flight_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country", "binning": ""}, "VQL": "Visualize PIE SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country"}, "hardness": "Hard"}, {"nl_queries": "What are the ids and durations of the trips with the top 3 durations. Visualize by scatter chart.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3", "binning": ""}, "VQL": "Visualize SCATTER SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "Show the number of purchases for each coffee shop address in a bar chart.", "db_id": "coffee_shop", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Address , COUNT(Address) FROM member GROUP BY Address ORDER BY Time_of_purchase", "binning": ""}, "VQL": "Visualize BAR SELECT Address , COUNT(Address) FROM member GROUP BY Address ORDER BY Time_of_purchase"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the age and hometown of teachers?, could you show from low to high by the Hometown?", "db_id": "course_teach", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , Age FROM teacher ORDER BY Hometown ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , Age FROM teacher ORDER BY Hometown ASC"}, "hardness": "Easy"}, {"nl_queries": "Plot a scatter chart, sum(population) by mean lifeexpectancy.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "Among all the claims, which claims have a claimed amount larger than the average? Please Bin date the claim was made into week day interval and count them to show a bar chart, and could you show in desc by the y axis?", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC", "binning": "BIN Date_Claim_Made BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC BIN Date_Claim_Made BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Give me the trend about Shop_ID over Start_from , and rank Start_from from low to high order.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , Shop_ID FROM hiring ORDER BY Start_from ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring ORDER BY Start_from ASC"}, "hardness": "Easy"}, {"nl_queries": "How many rooms in each building have a capacity of over 50 Visualize by bar chart, order by the the total number in desc.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the technicians by ascending order of age, and count them by a bar chart", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM technician GROUP BY Name ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM technician GROUP BY Name ORDER BY Age ASC"}, "hardness": "Medium"}, {"nl_queries": "How many courses for each subject? Plot a pie chart.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id", "binning": ""}, "VQL": "Visualize PIE SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, return a scatter chart about the correlation between  employee_id and  commission_pct .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": ""}, "VQL": "Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'"}, "hardness": "Hard"}, {"nl_queries": "Show the number of courses each instructor taught with a bar chart grouping by course code, could you display by the bars from high to low please?", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CRS_CODE , COUNT(CRS_CODE) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY CRS_CODE ORDER BY CRS_CODE DESC", "binning": ""}, "VQL": "Visualize BAR SELECT CRS_CODE , COUNT(CRS_CODE) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY CRS_CODE ORDER BY CRS_CODE DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize the relationship between  Team_ID and  ACC_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of manufacturer , and group by attribute founder, and display by the y-axis from high to low.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY SUM(Manufacturer) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY SUM(Manufacturer) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, and sort by the y-axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a scatter chart about the correlation between  CID and  Instructor .", "db_id": "college_3", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT CID , Instructor FROM COURSE ORDER BY Credits", "binning": ""}, "VQL": "Visualize SCATTER SELECT CID , Instructor FROM COURSE ORDER BY Credits"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Road , and group by attribute All_Home, list in ascending by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of  hire_date and the average of manager_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, draw a line chart about the change of  employee_id over  hire_date .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'"}, "hardness": "Hard"}, {"nl_queries": "Return the name of each physician and the number of patients he or she treats in a bar chart, and list Name from high to low order.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of documents for each receipt date and bin by year with a line chart, sort by the x-axis in desc please.", "db_id": "cre_Doc_Control_Systems", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date DESC", "binning": "BIN receipt_date BY YEAR"}, "VQL": "Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date DESC BIN receipt_date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "For those appellations whose score is higher than 93, return a stacked to group them by appellation, count appellation, and ordered by Name", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Grape ,  Appelation ORDER BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Grape ,  Appelation ORDER BY Name"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, draw a bar chart about the distribution of  job_id and the sum of manager_id , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID"}, "hardness": "Medium"}, {"nl_queries": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'. Visualize by bar chart.", "db_id": "department_management", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , AVG(Num_Employees) FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes' GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , AVG(Num_Employees) FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes' GROUP BY Name"}, "hardness": "Hard"}, {"nl_queries": "what are the event details of the services that have the type code 'Marriage', and count them by a bar chart, I want to rank by the x axis in ascending.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Event_Details , COUNT(Event_Details) FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_Type_Code = 'Marriage' GROUP BY Event_Details ORDER BY Event_Details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_Type_Code = 'Marriage' GROUP BY Event_Details ORDER BY Event_Details ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize the relationship between  price and  revenue .", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code", "binning": ""}, "VQL": "Visualize SCATTER SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, return a line chart about the change of salary over hire_date , and I want to sort by the X-axis in ascending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many rooms have king beds? Report the number for each decor type.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor", "binning": ""}, "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor"}, "hardness": "Medium"}, {"nl_queries": "How many document type for different document type description? Visualize with a bar chart.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description"}, "hardness": "Easy"}, {"nl_queries": "What are the number of the dates that have an average sea level pressure between 303 and 31?, and sort the number of date in descending order.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC", "binning": "BIN date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Give me a pie chart about the proportion of the number of countries in the artist table", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Find Sex and the sum of Weight , and group by attribute Sex, and visualize them by a bar chart, could you rank y axis from low to high order?", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , SUM(Weight) FROM people GROUP BY Sex ORDER BY SUM(Weight) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , SUM(Weight) FROM people GROUP BY Sex ORDER BY SUM(Weight) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name"}, "hardness": "Hard"}, {"nl_queries": "Show the relationship between average age and maximum age in a scatter chart.", "db_id": "game_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(age) , max(age) FROM Student GROUP BY major", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(age) , max(age) FROM Student GROUP BY major"}, "hardness": "Easy"}, {"nl_queries": "Plot the number of county by grouped by county as a bar graph", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the Time by a bar chart, sort X from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Compute the average of the number of matches that happened each year Plot them as a bar chart, sort Y-axis in asc order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches ORDER BY count(year) ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches ORDER BY count(year) ASC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, a bar chart shows the distribution of  name and the average of revenue , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and sort in ascending by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of names of products?, and show in ascending by the x axis.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and distances for all airplanes Visualize by bar chart, display distance in asc order.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , distance FROM Aircraft ORDER BY distance ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , distance FROM Aircraft ORDER BY distance ASC"}, "hardness": "Easy"}, {"nl_queries": "What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart, and order in desc by the y axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the total number of ships with different nationalities and ship types?, I want to order x-axis from low to high order please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the amount of name , and group by attribute name, and I want to rank by the x-axis from low to high.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what are the ids and names of the architects who built at least 3 bridges ?, sort by the names in ascending.", "db_id": "architecture", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.id FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id ORDER BY T1.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.id FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id ORDER BY T1.name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show minimal enr from each state, and could you show by the x-axis in ascending?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Scatter plot to show acc percent on x axis and all_games_percent on y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find the average age of journalists working on different role type, show the result with a bar chart, sort y axis in ascending order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(t1.age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(t1.age) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return the average price for each product type by a bar chart, order by the total number in ascending please.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY avg(product_price) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY avg(product_price) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare all train names' total numbers, and display from high to low by the how many name.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday, and show Y in descending order please.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) DESC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) DESC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality in a bar chart, and could you list in ascending by the y axis?", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of different types of codes of products?, rank by the bars in desc.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of  date_address_from and the average of monthly_rental bin date_address_from by time.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC", "binning": "BIN date_address_from BY YEAR"}, "VQL": "Visualize BAR SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show me trends of the average weight change over year, and could you sort binning year in asc order?", "db_id": "car_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Weight) FROM CARS_DATA ORDER BY Year ASC", "binning": "BIN Year BY YEAR"}, "VQL": "Visualize LINE SELECT Year , avg(Weight) FROM CARS_DATA ORDER BY Year ASC BIN Year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for room_count of each apt number, and order from low to high by the apt_number.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT apt_number , room_count FROM Apartments ORDER BY apt_number ASC", "binning": ""}, "VQL": "Visualize BAR SELECT apt_number , room_count FROM Apartments ORDER BY apt_number ASC"}, "hardness": "Easy"}, {"nl_queries": "Find the dates of assessment notes for students with first name \"Fanny\", and count them by a bar chart", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = \"Fanny\"", "binning": "BIN date_of_notes BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = \"Fanny\" BIN date_of_notes BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?, and I want to display X-axis from low to high order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who did not have any job in the past, give me the comparison about the sum of department_id over the  hire_date bin hire_date by time by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Show the name of track and the number of races in each track by a bar chart, rank from low to high by the bar.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart showing the total number of ships' classes that do not have a captain, show Y in descending order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY COUNT(Class) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many storms occured in each region?, I want to rank the total number from low to high order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show all cities along with the number of drama workshop groups in each city with a bar chart, and rank by the X in ascending.", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY City_Town ASC", "binning": ""}, "VQL": "Visualize BAR SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY City_Town ASC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis role code y axis the total number, and show in ascending by the Y-axis please.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many parties of the time they left office, binning the left office time into Year interval, and then split by the minister's name, sort in desc by the y-axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC", "binning": "BIN Left_office BY YEAR"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC BIN Left_office BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "I want to compare the number of the names of phones by a bar chart, could you rank by the the number of name in desc?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the workshop groups that have bookings with status code \"stop\", and count them by a bar chart, sort Store_Name in desc order.", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Store_Name , COUNT(Store_Name) FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = \"stop\" GROUP BY Store_Name ORDER BY Store_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Store_Name , COUNT(Store_Name) FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = \"stop\" GROUP BY Store_Name ORDER BY Store_Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar graph to show total number of population from different governmentform, and list from high to low by the Y-axis.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, find name and the sum of code , and group by attribute name, and visualize them by a bar chart, and could you rank by the y axis in asc?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Code ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of matches in different competitions Visualize by bar chart, and show in descending by the bars.", "db_id": "city_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition , count(*) FROM MATCH GROUP BY Competition ORDER BY Competition DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition , count(*) FROM MATCH GROUP BY Competition ORDER BY Competition DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of revenue , and group by attribute name, could you show bar from low to high order?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Please give me a pie chart to show the number of home cities of all drivers, show by the x axis from low to high.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart comparing the total number of captains in each rank, sort by the Rank in descending please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the total number of students for each department with a bar chart, list X-axis in ascending order please.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY T1.dept_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY T1.dept_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a line chart about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and show by the Start_from in asc.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me about the distribution of All_Games and Team_ID in a bar chart, display in desc by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "What are the names and number of hours spent training for each player who trains for less than 1500 hours. Visualize by pie chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500", "binning": ""}, "VQL": "Visualize PIE SELECT pName , HS FROM Player WHERE HS < 1500"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between customer id and account id? Show me a scatter chart.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT account_id , customer_id FROM Accounts", "binning": ""}, "VQL": "Visualize SCATTER SELECT account_id , customer_id FROM Accounts"}, "hardness": "Easy"}, {"nl_queries": "What are the name and population of each county. Visualize by pie chart.", "db_id": "election", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT County_name , Population FROM county", "binning": ""}, "VQL": "Visualize PIE SELECT County_name , Population FROM county"}, "hardness": "Easy"}, {"nl_queries": "In which years cars were produced weighing no less than 3000 and no more than 4000 , and count them by a bar chart", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000 BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Return the low and high estimates for all film markets. Show scatter chart.", "db_id": "film_rank", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation", "binning": ""}, "VQL": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and price , and group by attribute name, rank Name from high to low order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, show me the trend about  manager_id over  hire_date  with a line chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'"}, "hardness": "Easy"}, {"nl_queries": "How many dogs each owner has? Return a bar chart that groups by owner's last name, display x axis from high to low order.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name ORDER BY last_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name ORDER BY last_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart showing each location's total number of passengers, and rank total number in asc order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of  manager_id over  hire_date .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many documents are there of each type?, could you sort from high to low by the Document_Type_Code?", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code ORDER BY Document_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code ORDER BY Document_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "How many documents are created in each day? Bin the document date by year interval and group by document type description with a group line chart, and list in desc by the x axis.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY Document_Date DESC", "binning": "BIN Document_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY Document_Date DESC BIN Document_Date BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "How many companies in each headquarter? Plot a pie chart.", "db_id": "gas_company", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters", "binning": ""}, "VQL": "Visualize PIE SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters"}, "hardness": "Easy"}, {"nl_queries": "Stacked bar chart of how many date in location from for with each Location_Code in each date in location from, and order by the y axis in descending.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) DESC", "binning": "BIN Date_in_Location_From BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) DESC BIN Date_in_Location_From BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, find name and code , and group by attribute name, and visualize them by a bar chart, and I want to order in asc by the x axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "How many departments for each building? Draw a bar chart, and rank in asc by the how many building.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT building , COUNT(building) FROM department GROUP BY building ORDER BY COUNT(building) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT building , COUNT(building) FROM department GROUP BY building ORDER BY COUNT(building) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the ids and names of all start stations that were the beginning of at least 200 trips Show bar chart, sort in asc by the Y.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_id ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me the trend about the maximum price of wines for each year, order by the x-axis in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for the average of salary of each hire date, and sort Y-axis in ascending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the names and budgets of departments with budgets greater than the average?, could you rank X-axis from high to low order?", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY dept_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY dept_name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart, and display in desc by the Y.", "db_id": "customers_and_addresses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) DESC", "binning": "BIN date_became_customer BY MONTH"}, "VQL": "Visualize BAR SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) DESC BIN date_became_customer BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for what is the average weight for each type of pet?, could you show y axis from high to low order?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each product type code", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "Please give me a bar chart to show the total number of singers who sang the top 3 most highly rated songs from different countries.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the total number of students in each department Show bar chart, and I want to show by the X-axis from low to high.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY dept_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY dept_name ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, show me about the distribution of  hire_date and the sum of employee_id bin hire_date by weekday in a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder, and sort Y in desc order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY SUM(Revenue) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY SUM(Revenue) DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar graph to show meter_100 from different meter 400, and could you display by the y axis in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what are the ids and details of events that have more than one participants?, and sort by the X in asc.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Event_Details , T1.Event_ID FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_Details ORDER BY T1.Event_Details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Event_Details , T1.Event_ID FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_Details ORDER BY T1.Event_Details ASC"}, "hardness": "Hard"}, {"nl_queries": "Plot the number of payment method code by grouped by payment method code as a bar graph, order in descending by the Payment_Method_Code.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Find Name and Height , and visualize them by a bar chart, and could you order x-axis from high to low order please?", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height FROM people ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height FROM people ORDER BY Name DESC"}, "hardness": "Easy"}, {"nl_queries": "What is the proportion of types of every competition?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize PIE SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, show me about the distribution of  job_id and the average of salary , and group by attribute job_id in a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID"}, "hardness": "Extra Hard"}, {"nl_queries": "How many students are in each department? Show me a bar chart, and sort in desc by the total number.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY count(DISTINCT T2.id) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T2.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY count(DISTINCT T2.id) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of Sex and the average of Weight , and group by attribute Sex in a bar chart, and list y axis from high to low order.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY AVG(Weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY AVG(Weight) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of record company versus the total number, I want to show by the names from high to low.", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, for employee_id, hire_date, visualize the trend, and I want to show by the HIRE_DATE from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and Team_ID , and I want to rank X in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and manufacturer , and group by attribute founder, sort by the bar in desc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of  founder and the sum of code , and group by attribute founder.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and School_ID , and group by attribute ACC_Home in a bar chart, and could you rank by the bars from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize the number of grape of the wines whose price is bigger than 100 with a bar chart, ordered the x-axis by year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and rank in ascending by the names.", "db_id": "browser_web", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart, display by the Y in desc.", "db_id": "chinook_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = \"Astrid\" AND LastName = \"Gruber\"  ORDER BY COUNT(InvoiceDate) DESC", "binning": "BIN InvoiceDate BY WEEKDAY"}, "VQL": "Visualize BAR SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = \"Astrid\" AND LastName = \"Gruber\"  ORDER BY COUNT(InvoiceDate) DESC BIN InvoiceDate BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa'", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the last name of female (sex is F) students in the descending order of age.", "db_id": "college_3", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LName , COUNT(LName) FROM STUDENT WHERE Sex = \"F\" GROUP BY LName ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LName , COUNT(LName) FROM STUDENT WHERE Sex = \"F\" GROUP BY LName ORDER BY Age DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar graph to show the total number from different formats", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats"}, "hardness": "Easy"}, {"nl_queries": "List the states of all votes, compute the total number of states, and sum their vote id with a bar chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and could you display in ascending by the y-axis?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize the average experience working length of journalists working on different role type using a bar chart, and sort X from high to low order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the shortest duration and lowest rating of songs grouped by genre using a bar chart, could you rank in asc by the bar please?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T1.duration) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T1.duration) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Team_Name and All_Games_Percent , and sort Y in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show the number of apartment bookings in each year and bin booking end date by year with a bar chart, and could you list in desc by the how many booking end date?", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) DESC", "binning": "BIN booking_end_date BY YEAR"}, "VQL": "Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) DESC BIN booking_end_date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what is the total revenue of each manufacturer?, could you list Y-axis in descending order?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(revenue) FROM manufacturers GROUP BY name ORDER BY sum(revenue) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(revenue) FROM manufacturers GROUP BY name ORDER BY sum(revenue) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the number of counties for all appellations?, I want to order bars from high to low order please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC"}, "hardness": "Medium"}, {"nl_queries": "How many counties correspond to each police force. ", "db_id": "county_public_safety", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force", "binning": ""}, "VQL": "Visualize BAR SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force"}, "hardness": "Easy"}, {"nl_queries": "Show the names of people and the number of times they have been on the affirmative side of debates. Show a pie chart.", "db_id": "debate", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize PIE SELECT Name , COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name"}, "hardness": "Medium"}, {"nl_queries": "Show the name and age for all male people who don't have a wedding with a bar chart, and I want to show from low to high by the names.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Neutral , I want to order by the x axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, and order from low to high by the y axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Manufacturer) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Manufacturer) ASC"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, order y-axis in asc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the names and ids of tourist attractions that are visited at least two times Visualize by bar chart, I want to list in descending by the bars.", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Name DESC"}, "hardness": "Medium"}, {"nl_queries": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges Show bar chart, I want to display x axis from low to high order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, order by the x axis in ascending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart about the distribution of  ACC_Road and  School_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the name and partition id for users who tweeted less than twice. Show a pie chart.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid", "binning": ""}, "VQL": "Visualize PIE SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid"}, "hardness": "Easy"}, {"nl_queries": "How many documents correspond with each project id. ", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Project_ID , count(*) FROM Documents GROUP BY project_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT Project_ID , count(*) FROM Documents GROUP BY project_id"}, "hardness": "Easy"}, {"nl_queries": " List the number of games in each season with a line chart.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Season , COUNT(Season) FROM game", "binning": "BIN Season BY YEAR"}, "VQL": "Visualize LINE SELECT Season , COUNT(Season) FROM game BIN Season BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "What are the number of the countries of all airlines whose names start with Orbit?", "db_id": "flight_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country", "binning": ""}, "VQL": "Visualize BAR SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country"}, "hardness": "Hard"}, {"nl_queries": "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart, rank by the y-axis in asc.", "db_id": "mountain_photos", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, rank in ascending by the y-axis.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar chart x axis publication date y axis how many publication date, rank in desc by the X-axis.", "db_id": "book_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Publication_Date , COUNT(Publication_Date) FROM publication GROUP BY Publication_Date ORDER BY Publication_Date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Publication_Date , COUNT(Publication_Date) FROM publication GROUP BY Publication_Date ORDER BY Publication_Date DESC"}, "hardness": "Medium"}, {"nl_queries": "For each language, list the number of TV Channels that use it. Show a pie chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE", "binning": ""}, "VQL": "Visualize PIE SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, draw a scatter chart about the correlation between  salary and  department_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT SALARY , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'", "binning": ""}, "VQL": "Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  meter_600 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, give me the trend about  manager_id over  hire_date .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'"}, "hardness": "Hard"}, {"nl_queries": "A bar chart shows the distribution of meter_600 and ID , and show by the X from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show the capacity for each cinema in a bar chart.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Capacity FROM cinema", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Capacity FROM cinema"}, "hardness": "Easy"}, {"nl_queries": "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a bar chart, and I want to order Y-axis in ascending order.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY COUNT(roomName) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY COUNT(roomName) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Show the names and ids of tourist attractions that are visited at least two times with a bar chart.", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID"}, "hardness": "Easy"}, {"nl_queries": "For those payments processed with Visa, show me the number of payments of each year using a bar chart, and sort y-axis in asc order.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) ASC", "binning": "BIN Date_Payment_Made BY YEAR"}, "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) ASC BIN Date_Payment_Made BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Find Name and Height , and visualize them by a bar chart, I want to sort bars in asc order.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height FROM people ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height FROM people ORDER BY Name ASC"}, "hardness": "Easy"}, {"nl_queries": "List singer names and number of concerts for each singer. ", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id"}, "hardness": "Medium"}, {"nl_queries": "How many total credits are offered by each department Show bar chart, and rank bars in asc order.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY dept_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY dept_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all card type codes and the number of cards in each type by a bar chart, I want to sort Y in descending order.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart to show the revenue of the company that earns the highest revenue in each headquarter city, and I want to display by the maximal revenue in descending please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , max(revenue) FROM manufacturers GROUP BY Headquarter ORDER BY max(revenue) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , max(revenue) FROM manufacturers GROUP BY Headquarter ORDER BY max(revenue) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each project id, how many staff does it have? List them in increasing order. Show scatter chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "I prefer a pie chart to understand how many flights from each origin city. ", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT origin , COUNT(origin) FROM Flight GROUP BY origin", "binning": ""}, "VQL": "Visualize PIE SELECT origin , COUNT(origin) FROM Flight GROUP BY origin"}, "hardness": "Easy"}, {"nl_queries": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa'", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "I want to know the proportion of the total number for each role code.", "db_id": "document_management", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT role_code , count(*) FROM users GROUP BY role_code", "binning": ""}, "VQL": "Visualize PIE SELECT role_code , count(*) FROM users GROUP BY role_code"}, "hardness": "Easy"}, {"nl_queries": "Compute the total the total number across policy type code as a pie chart.", "db_id": "insurance_and_eClaims", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Policy_Type_Code , count(*) FROM policies GROUP BY policy_type_code", "binning": ""}, "VQL": "Visualize PIE SELECT Policy_Type_Code , count(*) FROM policies GROUP BY policy_type_code"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, list Y in descending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "A pie chart shows the proportion of  Is_full_time and the sum of Shop_ID.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time", "binning": ""}, "VQL": "Visualize PIE SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time"}, "hardness": "Easy"}, {"nl_queries": "Give me the trend about the average of Shop_ID over  Start_from , and group by attribute Is_full_time and bin start_from by time.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "How many courses are in the Psychology department for each year? Return a line chart.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY year", "binning": ""}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY year"}, "hardness": "Hard"}, {"nl_queries": "Show the names and sum grades of each high schooler Plot them as bar graph, could you order from high to low by the x-axis?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday, and could you list in descending by the y-axis please?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(DEPARTMENT_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of revenue , and group by attribute founder, I want to show X-axis from high to low order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name, order in descending by the y axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Code DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a scatter plot of order id and total number of product quantity for .", "db_id": "customers_and_invoices", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT order_id , sum(product_quantity) FROM Order_items GROUP BY order_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT order_id , sum(product_quantity) FROM Order_items GROUP BY order_id"}, "hardness": "Easy"}, {"nl_queries": "Show the facility codes of apartments with more than 4 bedrooms, and count them by a bar chart, and list by the y axis in asc.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY COUNT(facility_code) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY COUNT(facility_code) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find All_Games and Team_ID , and visualize them by a bar chart, and I want to list by the y-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of how many date of completion from each date of completion, I want to sort by the y axis in ascending please.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC", "binning": "BIN date_of_completion BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many entrepreneurs correspond to each investor?", "db_id": "entrepreneur", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor", "binning": ""}, "VQL": "Visualize BAR SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor"}, "hardness": "Easy"}, {"nl_queries": "A bar graph listing the local authorities and how many local authorities provided by all stations, order in ascending by the y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) ASC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of  hire_date and the sum of department_id bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and salary , and order by the X in descending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of employee_id bin hire_date by time in a bar chart, and list Y-axis in descending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of price , and group by attribute name, could you sort in ascending by the y axis?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Price ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Price ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the average of age from each country, I want to list from low to high by the total number.", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the nationalities and their average ages of journalists?, show in asc by the total number please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of people of each sex who have a weight higher than 85, display x-axis from low to high order.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex ORDER BY Sex ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex ORDER BY Sex ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the average base price of rooms, for each bed type Plot them as bar chart, and display total number in asc order.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY avg(basePrice) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY avg(basePrice) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of manager_id over hire_date , list from low to high by the X.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 ORDER BY HIRE_DATE ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, list from high to low by the Y-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Compare the frequency of each payment method code using a bar chart, and could you display x-axis in descending order please?", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Show id from each meter 400, and list by the X from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code, show x axis in asc order please.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To ASC", "binning": "BIN Date_in_Locaton_To BY YEAR"}, "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To ASC BIN Date_in_Locaton_To BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart for what are the names of different tracks, and how many races has each had?, sort Name in asc order please.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted in a bar chart, and rank x-axis in descending order please.", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT staff_name , count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name ORDER BY staff_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT staff_name , count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name ORDER BY staff_name DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what is average age for different job title?, and rank y axis in ascending order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, list Y in descending order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, and display by the total number in ascending please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, list total number in desc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the number of players who have points less than 30 for each position Plot them as bar chart, list in asc by the x axis please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC"}, "hardness": "Hard"}, {"nl_queries": "When are the birthdays of customer who are classified as 'Good Customer' status, and count them by a bar chart, could you order y-axis in ascending order?", "db_id": "driving_school", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) ASC", "binning": "BIN date_of_birth BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show me about the proportion of the amount of Sex and the amount of Sex in a pie chart.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Sex , COUNT(Sex) FROM people GROUP BY Sex", "binning": ""}, "VQL": "Visualize PIE SELECT Sex , COUNT(Sex) FROM people GROUP BY Sex"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and School_ID , and rank total number from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "List the number of enginners in a stacked bar chart The x-axis is last name and group by skill description, display y axis from high to low order.", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ,  last_name ORDER BY COUNT(last_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ,  last_name ORDER BY COUNT(last_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the numbers of wines for different grapes Plot them as bar chart, show by the the total number in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_300 and ID , and order y axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show id and location of railways that are associated with more than one train by a bar chart, and could you sort bars from low to high order?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the number of teachers of each course, and order from high to low by the x-axis.", "db_id": "course_teach", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Course , COUNT(Course) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Course ORDER BY Course DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Course , COUNT(Course) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Course ORDER BY Course DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, and could you show by the X in descending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "A pie chart shows the proportion of the number of teams in elimination.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 400, and sort y-axis in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of code , and group by attribute founder, order in desc by the total number please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code DESC"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, show by the total number from low to high please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, and list from high to low by the y-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "What are the names and number of hours spent training for each player who trains for less than 1500 hours Visualize by bar chart, and could you list by the total number from low to high?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart, and list from low to high by the Y.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show weight from each name, and rank by the y-axis in asc.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Weight FROM people ORDER BY Weight ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Weight FROM people ORDER BY Weight ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, show by the x-axis from low to high.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY name ASC"}, "hardness": "Hard"}, {"nl_queries": "Find All_Home and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and list in desc by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "For the average of Employee_ID, Start_from, visualize the trend, rank by the Start_from from low to high.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Just show the first name and the manager id with a bar chart, and sort total number from high to low order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.FIRST_NAME , T1.MANAGER_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id ORDER BY T1.MANAGER_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.FIRST_NAME , T1.MANAGER_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id ORDER BY T1.MANAGER_ID DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the average age of drivers from the same home city using a bar graph, could you rank X from high to low order?", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city DESC"}, "hardness": "Medium"}, {"nl_queries": "Show employee_id from each email", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , EMPLOYEE_ID FROM employees", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , EMPLOYEE_ID FROM employees"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by time.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC", "binning": "BIN date_address_from BY YEAR"}, "VQL": "Visualize BAR SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For all the claims whose claimed amount is larger than the average, bin the claim date into day of week interval and count them for visualizing a bar chart.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )", "binning": "BIN Date_Claim_Made BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims ) BIN Date_Claim_Made BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": " Does it have something interesting about the manager id and the salary? Show me a scatter chart first.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.SALARY , T1.MANAGER_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.SALARY , T1.MANAGER_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id"}, "hardness": "Medium"}, {"nl_queries": "Show me the average of baseprice by bedtype in a histogram, and order in asc by the Y-axis.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY avg(basePrice) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY avg(basePrice) ASC"}, "hardness": "Medium"}, {"nl_queries": "how many exhibitions has each artist had?, and rank in descending by the Y.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the order dates of the orders with price above 1000, and count them by a line chart", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Order_Date , COUNT(Order_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000 GROUP BY Order_Date", "binning": ""}, "VQL": "Visualize LINE SELECT Order_Date , COUNT(Order_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000 GROUP BY Order_Date"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, show by the X in descending please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Home and the average of Team_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart that the street address as the X-axis, and the number of floors for all buildings as Y-axis, and ordered by the number of floors.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Street_address , Floors FROM building ORDER BY floors", "binning": ""}, "VQL": "Visualize BAR SELECT Street_address , Floors FROM building ORDER BY floors"}, "hardness": "Easy"}, {"nl_queries": "Show the proportion of the number of countries for all people whose age is smaller than the average.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country"}, "hardness": "Medium"}, {"nl_queries": "Show the company name with the number of gas station by a bar chart, display Company in asc order.", "db_id": "gas_company", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, and list from high to low by the year.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\" GROUP BY year ORDER BY year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\" GROUP BY year ORDER BY year DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "what is the total number of last names of all candidates?, and order x-axis in ascending order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find  hire_date and the average of manager_id bin hire_date by time, and visualize them by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the names and ids of all countries with at least one car maker?, I want to list by the x axis from high to low.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryName DESC", "binning": ""}, "VQL": "Visualize BAR SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryName DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc regular season y axis acc_percent", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of  hire_date and the sum of employee_id bin hire_date by weekday in a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Scatter chart. what are the numbers of races for each constructor id?", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , constructorId FROM constructorStandings GROUP BY constructorid", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , constructorId FROM constructorStandings GROUP BY constructorid"}, "hardness": "Easy"}, {"nl_queries": "How many movie reviews does each director get Show bar chart, and order x axis from low to high order.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director ASC", "binning": ""}, "VQL": "Visualize BAR SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of orders in each weekday and show in a bar chart.", "db_id": "customers_and_addresses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\"", "binning": "BIN order_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" BIN order_date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880"}, "hardness": "Medium"}, {"nl_queries": "For employees with first names that end with the letter m, give me a bar chart to show their total salary, and sort in desc by the X.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the number of car models that are produced by each maker? Show the id and number in a scatter chart.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Count(*) , Id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id GROUP BY T2.id", "binning": ""}, "VQL": "Visualize SCATTER SELECT Count(*) , Id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id GROUP BY T2.id"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id, and could you list in asc by the y axis please?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many car makers are there in each continents? List the continent name and the count by a bar chart, and show by the X-axis in descending.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent ORDER BY T1.Continent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent ORDER BY T1.Continent DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, show from low to high by the total number.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Is_full_time) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Is_full_time) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and price , and group by attribute name, and sort Y in descending order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Price DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Price DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time, could you order total number in asc order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(SALARY) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "For each manufacturer, what are the names and prices of their most expensive product?, and order y axis in descending order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , max(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY max(T1.Price) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , max(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY max(T1.Price) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give a bar chart that bins year into weekday interval, group by year and count them, and I want to sort in asc by the Y-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and manufacturer , and could you order in ascending by the x-axis?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "How many accounts are opened in each year? Show a group line chart that group by other account details, and could you display X-axis in ascending order?", "db_id": "customers_and_invoices", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened ASC", "binning": "BIN date_account_opened BY YEAR"}, "VQL": "Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened ASC BIN date_account_opened BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, draw a bar chart about the distribution of  hire_date and the average of department_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, display y axis in desc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(DEPARTMENT_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What is the average base price of different bed type? List bed type and average base price. Visualize by pie chart.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType", "binning": ""}, "VQL": "Visualize PIE SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and commission_pct , I want to show total number in ascending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT ASC", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for simply displaying the email address of the employee and the corresponding salary, and order x-axis in ascending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , SALARY FROM employees ORDER BY EMAIL ASC", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , SALARY FROM employees ORDER BY EMAIL ASC"}, "hardness": "Easy"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time, and could you list by the total number in asc?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "How many courses have two prerequisites? Show me a bar chart grouping by title, and sort y-axis in desc order.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, I want to order x axis in ascending order please.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find  last_name and  employee_id , and visualize them by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart on how many stores are headquarted in each city?, and order in desc by the bars.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC"}, "hardness": "Hard"}, {"nl_queries": "A scatter chart shows the correlation between  student_id and  address_id .", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT student_id , address_id FROM Student_Addresses ORDER BY monthly_rental DESC", "binning": ""}, "VQL": "Visualize SCATTER SELECT student_id , address_id FROM Student_Addresses ORDER BY monthly_rental DESC"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, find hire_date and the sum of salary bin hire_date by weekday, and visualize them by a bar chart, list total number of salary from low to high order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Display a bar chart for what is the name of each aircraft and how many flights does each one complete?", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis product name y axis how many product name, I want to order by the Y in ascending.", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY COUNT(product_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY COUNT(product_name) ASC"}, "hardness": "Medium"}, {"nl_queries": "List the position of players and the average number of points of players of each position Visualize by bar chart, and order by the names in ascending.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC"}, "hardness": "Medium"}, {"nl_queries": "For each year, bin the year into day of the week interval, and return the average of the number of times the team Boston Red Stockings won in the postseasons using a line chart.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , AVG(count(*)) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , AVG(count(*)) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' BIN year BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show the name of each party and the corresponding number of delegates from that party with a bar chart, I want to order in desc by the bars.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Party , SUM(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY T2.Party DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Party , SUM(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY T2.Party DESC"}, "hardness": "Hard"}, {"nl_queries": "For those products with a price between 60 and 120, visualize a scatter chart about the correlation between  code and  price , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many movie reviews does each director get?", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director", "binning": ""}, "VQL": "Visualize BAR SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of job_id and salary , display from low to high by the total number.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of manufacturer , and group by attribute founder, could you sort y axis in asc order?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Manufacturer) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Manufacturer) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the name and primarily affiliated department name of each physician?, and I want to show in descending by the Name.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY T3.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY T3.Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of  hire_date and the sum of department_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart about the distribution of  date_address_to and the average of monthly_rental , and group by attribute other_details and bin date_address_to by time.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC", "binning": "BIN date_address_to BY MONTH"}, "VQL": "Visualize BAR SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_to BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all card type codes and the number of cards in each type by a bar chart, and I want to rank names in ascending order.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of  date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by weekday.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC", "binning": "BIN date_address_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar chart x axis venue y axis how many venue, display y-axis from low to high order.", "db_id": "debate", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM debate GROUP BY Venue ORDER BY COUNT(Venue) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM debate GROUP BY Venue ORDER BY COUNT(Venue) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many races are held in each year after 2014? Show me a bar chart.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year", "binning": ""}, "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year"}, "hardness": "Hard"}, {"nl_queries": "Show the trend about the number of attendance at home games change over the years, bin year into year interval.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , SUM(attendance) FROM home_game", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , SUM(attendance) FROM home_game BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Find the name and credit score of the customers who have some loans, sort in descending by the cust_name.", "db_id": "loan_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cust_name , credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id ORDER BY cust_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cust_name , credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id ORDER BY cust_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  People_ID and  Snatch .", "db_id": "body_builder", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT People_ID , Snatch FROM body_builder", "binning": ""}, "VQL": "Visualize SCATTER SELECT People_ID , Snatch FROM body_builder"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on how many singers are from each country?", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM singer GROUP BY country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM singer GROUP BY country"}, "hardness": "Easy"}, {"nl_queries": "What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart, and could you rank by the the number of date became customer in desc please?", "db_id": "customers_and_addresses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) DESC", "binning": "BIN date_became_customer BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) DESC BIN date_became_customer BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of songs each singer has.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of  founder and the sum of code , and group by attribute founder.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder"}, "hardness": "Medium"}, {"nl_queries": "List the description of the outcomes for all projects, and count them by a bar chart, and display in descending by the bars.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC"}, "hardness": "Hard"}, {"nl_queries": "Group and count details for the events using a bar chart, order bar from low to high order please.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY Event_Details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY Event_Details ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_700 and meter_100 , and visualize them by a bar chart, I want to show meter_100 in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Display a bar chart for what are the names and ids of the tourist attractions that are visited at most once?, and list by the X in asc.", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Name ASC"}, "hardness": "Medium"}, {"nl_queries": "what is the number of players who have points less than 30 for each position?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION", "binning": ""}, "VQL": "Visualize PIE SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the Team_Name , and sort by the x axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Please tell me the total star ratings of each movie title using a bar chart, I want to show in descending by the X.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC", "binning": ""}, "VQL": "Visualize BAR SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, list by the y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of  date_address_to and the amount of date_address_to bin date_address_to by weekday.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses  ORDER BY monthly_rental DESC", "binning": "BIN date_address_to BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_to BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "What is the number of companies for each headquarter? Visualize by bar chart, sort by the total number in desc.", "db_id": "company_employee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of  email and  employee_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the names of members and the location of the performances they attended. Compute the total number of each location using a pie chart.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID GROUP BY Location"}, "hardness": "Medium"}, {"nl_queries": "Compute the total total number of crs credit across dept code as a pie chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code", "binning": ""}, "VQL": "Visualize PIE SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code"}, "hardness": "Easy"}, {"nl_queries": "Show sum team id from each all home, sort bars from low to high order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "A pie chart about how many regions were affected by each storm?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about  author_tutor_ATB over the  family_name .", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT family_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize BAR SELECT family_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of  hire_date and the sum of salary bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show me about the correlation between  People_ID and  Weight , and group by attribute Sex in a scatter chart.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT People_ID , Weight FROM people GROUP BY Sex", "binning": ""}, "VQL": "Visualize SCATTER SELECT People_ID , Weight FROM people GROUP BY Sex"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart, and could you list from high to low by the Y-axis?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the number of each allergie the girl named Lisa has? Plot them as bar chart, and sort by the total number in asc.", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Allergy , COUNT(T1.Allergy) FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" GROUP BY T1.Allergy ORDER BY T1.Allergy ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Allergy , COUNT(T1.Allergy) FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" GROUP BY T1.Allergy ORDER BY T1.Allergy ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the name of each party and the corresponding number of delegates from that party in a bar chart, order by the bars from high to low.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Party , AVG(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY T2.Party DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Party , AVG(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY T2.Party DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and sort mean employee id in ascending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, list in asc by the y axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about  enr over the  state .", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  other_details and the average of monthly_rental , and group by attribute other_details.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT other_details , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC", "binning": ""}, "VQL": "Visualize BAR SELECT other_details , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the total number across team, sort from high to low by the y axis.", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM technician GROUP BY Team ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM technician GROUP BY Team ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and employee_id , and could you list in descending by the y-axis?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMPLOYEE_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMPLOYEE_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the facility codes of apartments with more than 4 bedrooms, and count them by a pie chart", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code", "binning": ""}, "VQL": "Visualize PIE SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code"}, "hardness": "Hard"}, {"nl_queries": "Let the shortest duration as bar chart's X-axis and the most poorly rated song for each genre as the Y, could you list in asc by the total number?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter by a bar chart, and could you display total number in desc order?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Price) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Price) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Show the title and the lowest rating among all movies in a pie chart.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title", "binning": ""}, "VQL": "Visualize PIE SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute founder in a bar chart, and could you show in asc by the Name?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Scatterplot of weight vs people id by Sex", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT People_ID , Weight FROM people GROUP BY Sex", "binning": ""}, "VQL": "Visualize SCATTER SELECT People_ID , Weight FROM people GROUP BY Sex"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, show by the names in asc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute headquarter, and list from high to low by the Code please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Code DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me about the distribution of All_Games and ACC_Percent in a bar chart, could you show in desc by the X-axis?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_700 and  meter_100 , and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for how many stadiums does each country have?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on what are the first names and ids for customers who have two or more accounts?, and show in ascending by the x axis.", "db_id": "customers_and_invoices", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T2.customer_first_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T2.customer_first_name ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, give me the trend about commission_pct over hire_date , display in desc by the X-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the average of age from different gender, and could you list total number in asc order?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of  middle_name and  author_id .", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT middle_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize BAR SELECT middle_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "Display the proportion of the job title for all those jobs in department 80 using a pie chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE", "binning": ""}, "VQL": "Visualize PIE SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE"}, "hardness": "Hard"}, {"nl_queries": "Plot the average of age by grouped by home city as a bar graph, and show X in asc order please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city ASC"}, "hardness": "Medium"}, {"nl_queries": "How many faculty members do we have for each rank? Give me a proportion.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM Faculty GROUP BY Rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM Faculty GROUP BY Rank"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, for commission_pct, hire_date, visualize the trend, and order from low to high by the X-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for finding the number of the country of the airlines whose name starts with 'Orbit', display y-axis in asc order please.", "db_id": "flight_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country ORDER BY COUNT(country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country ORDER BY COUNT(country) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of documents for each receipt date and bin by year with a line chart, show in asc by the receipt_date.", "db_id": "cre_Doc_Control_Systems", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date ASC", "binning": "BIN receipt_date BY YEAR"}, "VQL": "Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date ASC BIN receipt_date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show me about the correlation between  Team_ID and  School_ID  in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find the student ID and personal name of the student with at least two enrollments. ", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id", "binning": ""}, "VQL": "Visualize BAR SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id"}, "hardness": "Easy"}, {"nl_queries": "Display a bar chart for how many orchestras does each record company manage?, could you sort by the y-axis in descending please?", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of manufacturer , and group by attribute founder, and could you sort y axis in asc order?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Manufacturer) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Manufacturer) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship. Plot them as bar chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "What are the average ages for male and female students Plot them as bar chart, and list by the bars from low to high.", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , avg(age) FROM Student GROUP BY sex ORDER BY Sex ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , avg(age) FROM Student GROUP BY sex ORDER BY Sex ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the country names and the corresponding number of players in a bar chart.", "db_id": "match_season", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name", "binning": ""}, "VQL": "Visualize BAR SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10, list by the x axis in desc.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of price , and group by attribute name in a bar chart, show x axis in asc order please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "How many classes are held in each department Visualize by bar chart, and order Y in ascending order.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , count(*) FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , count(*) FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Scatter plot to show body builder id on x axis and snatch on y axis.", "db_id": "body_builder", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Body_Builder_ID , Snatch FROM body_builder", "binning": ""}, "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Snatch FROM body_builder"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what is the average account balance of customers with credit score below 50 for the different account types?, could you list by the X-axis in ascending?", "db_id": "loan_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT acc_type , avg(acc_bal) FROM customer WHERE credit_score < 50 GROUP BY acc_type ORDER BY acc_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT acc_type , avg(acc_bal) FROM customer WHERE credit_score < 50 GROUP BY acc_type ORDER BY acc_type ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what are the different ship flags, and how many ships have each?, order from high to low by the X.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 Visualize by bar chart, sort names in ascending order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart, rank by the Y from low to high please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the enrollment dates of all the tests that have result \"Pass\"?", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment", "binning": ""}, "VQL": "Visualize LINE SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment"}, "hardness": "Hard"}, {"nl_queries": "Visualize a scatter chart about the correlation between  student_id and  address_id .", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT student_id , address_id FROM Student_Addresses ORDER BY monthly_rental DESC", "binning": ""}, "VQL": "Visualize SCATTER SELECT student_id , address_id FROM Student_Addresses ORDER BY monthly_rental DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of minimal salary from each dept name, and list in descending by the X-axis please.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name DESC"}, "hardness": "Easy"}, {"nl_queries": "List the number of games for each home team and group by away team in a stacked bar chart The x-axis is home team, and could you rank in asc by the how many home team?", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_team , COUNT(Home_team) FROM game GROUP BY Away_team ,  Home_team ORDER BY COUNT(Home_team) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_team , COUNT(Home_team) FROM game GROUP BY Away_team ,  Home_team ORDER BY COUNT(Home_team) ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"", "binning": "BIN date_of_completion BY MONTH"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" BIN date_of_completion BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and order by the ACC_Road in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of courses for each course description in a stacked bar chart The x-axis is course description and group by instructor's first name, show in ascending by the y axis please.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY EMP_FNAME ,  CRS_DESCRIPTION ORDER BY COUNT(CRS_DESCRIPTION) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY EMP_FNAME ,  CRS_DESCRIPTION ORDER BY COUNT(CRS_DESCRIPTION) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and display from low to high by the y axis please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the amount of name , and group by attribute name, show total number in descending order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , COUNT(T1.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart shows the distribution of All_Games and School_ID , show in ascending by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL Could you plot the result with a bar chart?, and could you display by the Y in ascending?", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director ORDER BY max(T1.stars) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director ORDER BY max(T1.stars) ASC"}, "hardness": "Hard"}, {"nl_queries": "I want to see trend of the number of date in locaton to by date in locaton to", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations", "binning": "BIN Date_in_Locaton_To BY YEAR"}, "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations BIN Date_in_Locaton_To BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "How many dogs of the rarest breed in each treatment day? Draw a bar chart that groups by date of treatment.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "binning": ""}, "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the parties associated with the delegates from district 1 or 2 Who served as comptrollers of the parties, and count them by a bar chart, and rank the number of comptroller from low to high order.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller ORDER BY COUNT(Comptroller) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller ORDER BY COUNT(Comptroller) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart showing the number of start date of the apartment bookings made by female guests (gender code \"Female\") for each weekday.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = \"Female\"", "binning": "BIN booking_start_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = \"Female\" BIN booking_start_date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": " what is the maximum accelerate for all the different cylinders?", "db_id": "car_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT max(Accelerate) , Cylinders FROM CARS_DATA", "binning": ""}, "VQL": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA"}, "hardness": "Easy"}, {"nl_queries": "How many faculty members do we have for each gender? Draw a bar chart, order by the Y-axis in descending.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , count(*) FROM Faculty GROUP BY Sex ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , count(*) FROM Faculty GROUP BY Sex ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show age from different name, and display from low to high by the y-axis please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Age ASC"}, "hardness": "Easy"}, {"nl_queries": "Bin the claim date into the Day of Week interval and count them for visualizing a bar chart.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements", "binning": "BIN Date_Claim_Made BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements BIN Date_Claim_Made BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for listing the number of the name of technicians whose team is not \"NYY\", order by the y axis in desc please.", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM technician WHERE Team != \"NYY\" GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != \"NYY\" GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "List all the log entry descriptions and count them using a bar chart, show in descending by the X-axis.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC"}, "hardness": "Medium"}, {"nl_queries": "I want to know the proportion of the number of counties for each police force.", "db_id": "county_public_safety", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force", "binning": ""}, "VQL": "Visualize PIE SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force"}, "hardness": "Easy"}, {"nl_queries": "When do all the researcher role staff stop working? Bin the time into weekday interval and count them with a bar chart, and I want to show y-axis in descending order please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) DESC", "binning": "BIN date_to BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) DESC BIN date_to BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those products with a price between 60 and 120, return a bar chart about the distribution of  name and  manufacturer .", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120"}, "hardness": "Easy"}, {"nl_queries": "Can you give a histogram to compare the number of flights to each destination city?, order bars in descending order.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT destination , COUNT(destination) FROM Flight GROUP BY destination ORDER BY destination DESC", "binning": ""}, "VQL": "Visualize BAR SELECT destination , COUNT(destination) FROM Flight GROUP BY destination ORDER BY destination DESC"}, "hardness": "Medium"}, {"nl_queries": "For each year, bin the year into day of the week interval, and return the average of the number of times the team Boston Red Stockings won in the postseasons using a line chart, and I want to show by the x-axis from low to high.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , AVG(count(*)) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ORDER BY year ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , AVG(count(*)) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ORDER BY year ASC BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the average of age from each country, and rank by the x-axis in descending.", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all template type codes and the number of documents using each type Visualize by bar chart, rank Template_Type_Code in asc order.", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of  salary over  hire_date .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "Compare the number of services by services with a bar graph, and could you display x-axis in desc order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about  School_ID over the  All_Home , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the max gpa of all students in each department with a bar chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , max(stu_gpa) FROM student GROUP BY DEPT_CODE", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , max(stu_gpa) FROM student GROUP BY DEPT_CODE"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, return a scatter chart about the correlation between  employee_id and  salary .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT EMPLOYEE_ID , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": ""}, "VQL": "Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'"}, "hardness": "Hard"}, {"nl_queries": "Bar graph to show minimal room count from different apt type code, and I want to display from high to low by the y-axis.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT apt_type_code , min(room_count) FROM Apartments GROUP BY apt_type_code ORDER BY min(room_count) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT apt_type_code , min(room_count) FROM Apartments GROUP BY apt_type_code ORDER BY min(room_count) DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the cost and treatment type description of each treatment?, and could you rank from high to low by the x-axis?", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY treatment_type_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY treatment_type_description DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, order by the names from high to low.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For each continent, list its name, and how many countries it has with a bar chart, and rank from high to low by the total number.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday, could you rank total number of manager id in desc order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "List all payment methods and number of payments using each payment methods with a pie chart.", "db_id": "driving_school", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code", "binning": ""}, "VQL": "Visualize PIE SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code"}, "hardness": "Easy"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, and list y axis in asc order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of manufacturer , and group by attribute name in a bar chart, list y-axis in ascending order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Manufacturer ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Manufacturer ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and manager_id , and show in descending by the Y-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "A line chart for what are the number of the dates that have an average sea level pressure between 30.3 and 31?", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date", "binning": ""}, "VQL": "Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and I want to list from high to low by the y axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of apartment bookings in each year and bin booking start date by year with a bar chart, could you sort in desc by the Y-axis please?", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) DESC", "binning": "BIN booking_start_date BY YEAR"}, "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many country name from different country name", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT COUNTRY_NAME , COUNT(COUNTRY_NAME) FROM countries GROUP BY COUNTRY_NAME", "binning": ""}, "VQL": "Visualize BAR SELECT COUNTRY_NAME , COUNT(COUNTRY_NAME) FROM countries GROUP BY COUNTRY_NAME"}, "hardness": "Easy"}, {"nl_queries": "Bin the claim date into the Year interval and count them for visualizing a bar chart, could you list Y-axis in ascending order please?", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements  ORDER BY COUNT(Date_Claim_Made) ASC", "binning": "BIN Date_Claim_Made BY YEAR"}, "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements  ORDER BY COUNT(Date_Claim_Made) ASC BIN Date_Claim_Made BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "List the number of dogs arrived in each day with a bar chart that bins arrived date by weekday, order by the Y in descending.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC", "binning": "BIN date_arrived BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC BIN date_arrived BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show me the average of capacity by openning year in a histogram, and order in ascending by the the average of capacity.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Openning_year , AVG(Capacity) FROM cinema GROUP BY Openning_year ORDER BY AVG(Capacity) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Openning_year , AVG(Capacity) FROM cinema GROUP BY Openning_year ORDER BY AVG(Capacity) ASC"}, "hardness": "Medium"}, {"nl_queries": "when is the hire date for those employees whose first name does not containing the letter M, and count them by a bar chart, rank from high to low by the total number.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all countries and the number of people from each country, I want to display in asc by the y axis please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of price , and group by attribute founder, and order by the x-axis in asc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC"}, "hardness": "Hard"}, {"nl_queries": "Which Payments were processed with Visa? Get the payment Id, the date and the amount for visualizing a scatter chart.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Payment_ID , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'", "binning": ""}, "VQL": "Visualize SCATTER SELECT Payment_ID , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'"}, "hardness": "Easy"}, {"nl_queries": "Visualize a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time, and show by the X-axis in asc.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of documents for different document name in a bar chart, rank Document_Name in desc order please.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Name , COUNT(Document_Name) FROM Documents GROUP BY Document_Name ORDER BY Document_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Name , COUNT(Document_Name) FROM Documents GROUP BY Document_Name ORDER BY Document_Name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart", "db_id": "chinook_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = \"Astrid\" AND LastName = \"Gruber\"", "binning": "BIN InvoiceDate BY WEEKDAY"}, "VQL": "Visualize BAR SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = \"Astrid\" AND LastName = \"Gruber\" BIN InvoiceDate BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "How films are produced by each studio Show bar chart, and rank x-axis from high to low order.", "db_id": "film_rank", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and average salaries for departments with average salary higher than 42000?, list x axis in descending order.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder, list names from high to low order please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T2.Founder DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T2.Founder DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart, and sort bar in ascending order.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the Team_Name , and order from low to high by the Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Return the number of music festivals of each category in a bar chart.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category"}, "hardness": "Easy"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, I want to sort from high to low by the sum department id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of  name and  revenue , and group by attribute headquarter.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name"}, "hardness": "Medium"}, {"nl_queries": "Show different type codes of products and the number of products with each type code in a bar chart, and I want to order Y in asc order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Please return a scatter chart to show each start station's longitude and the corresponding average duration of trips started there.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT long , avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT long , avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id"}, "hardness": "Medium"}, {"nl_queries": "How many enrolment students in each day? Return a bar chart binning date of enrolment by weekday, and list y axis from low to high order.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC", "binning": "BIN date_of_enrolment BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "List singer names and number of concerts for each singer, and could you show total number in desc order?", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what are the names and seatings for all tracks opened after 2000, ordered by seating?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis card type code y axis the total number, and rank X-axis in descending order.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many documents are there of each type?, and sort from low to high by the Y.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, order by the Y in descending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the amount of name , and group by attribute name, and I want to sort X-axis from high to low order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , COUNT(T1.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name by a bar chart, I want to order in ascending by the X.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, order in ascending by the total number of salary.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(SALARY) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "What are the statuses and average populations of each city. ", "db_id": "farm", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Status , avg(Population) FROM city GROUP BY Status", "binning": ""}, "VQL": "Visualize PIE SELECT Status , avg(Population) FROM city GROUP BY Status"}, "hardness": "Easy"}, {"nl_queries": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type Show bar chart, and could you rank Affiliation from high to low order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC"}, "hardness": "Hard"}, {"nl_queries": "A pie chart for finding the number of the name of rooms booked by some customers whose first name contains ROY.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName", "binning": ""}, "VQL": "Visualize PIE SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart on what is the average age for each gender?, and sort X in descending order please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_300 , I want to show by the X from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of salary over the hire_date bin hire_date by time, and I want to sort y-axis in desc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(SALARY) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me the total number by outcome code in a histogram, order in ascending by the Y.", "db_id": "customers_campaigns_ecommerce", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the name of the technician whose team is not 'NYY', and count them by a bar chart, show by the y-axis in ascending.", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM technician WHERE Team != \"NYY\" GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != \"NYY\" GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many medications are prescribed for each brand. Visualize by bar chart.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of  login_name and  author_id  in a bar chart.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT login_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize BAR SELECT login_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about what are the average prices of products, grouped by manufacturer name?, and show by the bars in asc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the average age of all students living in the each city Show bar chart, display by the total number from low to high.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of the claim start date for the claims whose claimed amount is no more than the average", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )", "binning": "BIN Date_Claim_Made BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims ) BIN Date_Claim_Made BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by studio in a histogram, I want to rank by the bar in asc.", "db_id": "film_rank", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart to show how many players in each occupation, and I want to list names in ascending order.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average base price of rooms, for each bed type?, and list mean baseprice in descending order.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY avg(basePrice) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY avg(basePrice) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the completion dates of all the tests that have result \"Fail\"?", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"", "binning": "BIN date_of_completion BY MONTH"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" BIN date_of_completion BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about  Team_ID over the  All_Games .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of name and ID , I want to order by the Y-axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, display in descending by the x-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, and list by the X in descending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about the sum of monthly_rental over the  date_address_from , and group by attribute other_details and bin date_address_from by weekday.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC", "binning": "BIN date_address_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Please tell me how many employees in the department 80 on each type of job titles using a bar chart, list total number in asc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE ORDER BY COUNT(JOB_TITLE) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE ORDER BY COUNT(JOB_TITLE) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A pie chart shows the proportion of  All_Home and the sum of Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Compute the total the average of product price across product name as a pie chart.", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Product_Name , avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize PIE SELECT Product_Name , avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"}, "hardness": "Easy"}, {"nl_queries": "Stacked bar of class and the number of class colored by Rank, and order in ascending by the Y-axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the descriptions of all the project outcomes, and count them by a pie chart", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize PIE SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "Find the number of the \"date became customers\" of the customers whose ID is between 10 and 20.", "db_id": "customers_and_addresses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20", "binning": "BIN date_became_customer BY MONTH"}, "VQL": "Visualize BAR SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20 BIN date_became_customer BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many documents are there of each type?, list by the Y from high to low.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the code of each role and the number of employees in each role Show bar chart, and order by the y axis in desc please.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id, and I want to sort in asc by the JOB_ID.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, could you sort bars in desc order?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a scatter chart about the correlation between  CID and  Credits .", "db_id": "college_3", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT CID , Credits FROM COURSE ORDER BY Credits", "binning": ""}, "VQL": "Visualize SCATTER SELECT CID , Credits FROM COURSE ORDER BY Credits"}, "hardness": "Easy"}, {"nl_queries": "A pie chart for finding the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, find  hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Draw a scatterplot of team id vs all_games_percent where team id is on the x-axis and points are colored by All_Neutral", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Show me a line chart for how many players enter hall of fame each year?, and display yearid from high to low order please.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT yearid , count(*) FROM hall_of_fame GROUP BY yearid ORDER BY yearid DESC", "binning": ""}, "VQL": "Visualize LINE SELECT yearid , count(*) FROM hall_of_fame GROUP BY yearid ORDER BY yearid DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute founder, could you show by the Code from high to low?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Code DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the id and trade name of the medicines can interact with at least 3 enzymes, I want to list in desc by the Trade_Name.", "db_id": "medicine_enzyme_interaction", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY Trade_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY Trade_Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the government form name and total population for each government form whose average life expectancy is longer than 72, and sort names in ascending order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of classes in each department. Visualize by bar chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , count(*) FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , count(*) FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code"}, "hardness": "Medium"}, {"nl_queries": "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, and sort by the X-axis in asc please.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"  ORDER BY year ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"  ORDER BY year ASC BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the averag weights for people of each sex? Show a bar chart, I want to sort by the X from low to high.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , avg(weight) FROM people GROUP BY sex ORDER BY Sex ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , avg(weight) FROM people GROUP BY sex ORDER BY Sex ASC"}, "hardness": "Medium"}, {"nl_queries": "What are all the calendar dates and day Numbers Show the trend, sort X-axis from low to high order.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date ASC"}, "hardness": "Easy"}, {"nl_queries": "Show the average age of singers for each country with a bar chart, and I want to show in descending by the X please.", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of male students (with sex M) from each city in a bar chart.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code", "binning": ""}, "VQL": "Visualize BAR SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code"}, "hardness": "Medium"}, {"nl_queries": "Show each premise type and the number of premises in that type. Visualize by bar chart.", "db_id": "customers_campaigns_ecommerce", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT premises_type , count(*) FROM premises GROUP BY premises_type", "binning": ""}, "VQL": "Visualize BAR SELECT premises_type , count(*) FROM premises GROUP BY premises_type"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between  code and  revenue , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, draw a scatter chart about the correlation between  commission_pct and  manager_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": ""}, "VQL": "Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)"}, "hardness": "Easy"}, {"nl_queries": "what are the different software platforms for devices, and how many devices have each?, sort by the Y-axis from high to low.", "db_id": "device", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the state names and the number of customers living in each state, I want to list Y-axis in descending order.", "db_id": "customer_deliveries", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state_province_county , count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id = t2.address_id GROUP BY t2.state_province_county ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id = t2.address_id GROUP BY t2.state_province_county ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for finding the number of the physicians who are trained in a procedure that costs more than 5000.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, and could you rank from high to low by the x axis?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the allergy types and how many allergies correspond to each one, and order Y in asc order.", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, and I want to show in asc by the X-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, I want to sort by the x-axis in descending.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and I want to sort by the y-axis in desc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order in asc by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by competition type as a bar graph, and I want to show from low to high by the the total number .", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis competition y axis the total number, could you display by the bar in descending?", "db_id": "city_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition , count(*) FROM MATCH GROUP BY Competition ORDER BY Competition DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition , count(*) FROM MATCH GROUP BY Competition ORDER BY Competition DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute founder, and show Y in asc order please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Code ASC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis time y axis id, could you list ID from high to low order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Bin all date of transactions into the weekday interval, and the total number of each bin, and then show me the trend, and list in asc by the X.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and School_ID , and list by the X in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "How many courses are provided in each year? Visualize with a group line chart grouping by semester, I want to order X from in desc order.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , count(*) FROM SECTION GROUP BY semester ORDER BY year DESC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY semester ORDER BY year DESC BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of  hire_date and the amount of hire_date bin hire_date by weekday in a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For all players, give me the proportion of the club name they come from.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name", "binning": ""}, "VQL": "Visualize PIE SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, sort by the X-axis from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Please compare the number of the church by open date (bin into the weekday) using a bar chart.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart on what are each physician's employee id and department id primarily affiliated.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Physician , Department FROM affiliated_with WHERE primaryaffiliation = 1", "binning": ""}, "VQL": "Visualize SCATTER SELECT Physician , Department FROM affiliated_with WHERE primaryaffiliation = 1"}, "hardness": "Easy"}, {"nl_queries": "List the number of the phone numbers of all employees, I want to show in descending by the y axis.", "db_id": "chinook_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number of platforms of locations in each location in a bar chart, could you order by the names from high to low?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the All_Neutral , and list by the All_Neutral in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on what are the names and budgets of departments with budgets greater than the average?, display by the bars from low to high.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY dept_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY dept_name ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and department_id , and I want to list in descending by the X please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the date and id of the transcript with at least 2 courses listed?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id"}, "hardness": "Easy"}, {"nl_queries": "Return the number of the lot details of lots that belong to investors with details \"l\"?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details"}, "hardness": "Hard"}, {"nl_queries": "A line chart shows how many churches open each year?, I want to sort by the X-axis from low to high.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date ASC"}, "hardness": "Easy"}, {"nl_queries": "What are the name and primarily affiliated department name of each physician?, sort in descending by the y-axis please.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY COUNT(T3.Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY COUNT(T3.Name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me a bar chart for what are all the employee ids and the names of the countries in which they work?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT COUNTRY_NAME , SUM(EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id GROUP BY COUNTRY_NAME", "binning": ""}, "VQL": "Visualize BAR SELECT COUNTRY_NAME , SUM(EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id GROUP BY COUNTRY_NAME"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the age and hometown of teachers?, could you display by the Y-axis in descending?", "db_id": "course_teach", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , Age FROM teacher ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , Age FROM teacher ORDER BY Age DESC"}, "hardness": "Easy"}, {"nl_queries": "What are the names and ids of every course with less than 2 sections Visualize by bar chart, and order by the x axis in desc please.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis location y axis how many location, I want to display names from high to low order please.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "For each continent, list its name, and how many countries it has with a bar chart, and rank by the Continent in desc.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId ORDER BY T1.Continent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId ORDER BY T1.Continent DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of  phone_number and  manager_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all calendar dates and bin by year in a line chart.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar", "binning": "BIN Calendar_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar BIN Calendar_Date BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Show institution names along with the number of proteins for each institution in a bar chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id", "binning": ""}, "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis the total number, could you sort x-axis in asc order please?", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "For the attribute  ACC_Regular_Season and  All_Games_Percent, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find the number of the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties?", "db_id": "election", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller", "binning": ""}, "VQL": "Visualize PIE SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller"}, "hardness": "Extra Hard"}, {"nl_queries": "List the studios of each film and the number of films produced by that studio. Show bar chart.", "db_id": "film_rank", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Studio , COUNT(*) FROM film GROUP BY Studio", "binning": ""}, "VQL": "Visualize BAR SELECT Studio , COUNT(*) FROM film GROUP BY Studio"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, I want to rank from low to high by the Y please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show me about the distribution of meter_300 and meter_100 in a bar chart, rank by the bars in descending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "How many actors have appeared in each musical Plot them as bar chart, and order x axis in asc order please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the countries of mountains with height bigger than 5000?", "db_id": "climbing", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of  hire_date and the average of manager_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, and order by the y axis in asc.", "db_id": "browser_web", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY id ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find  first_name and  commission_pct , and visualize them by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "For each position, what is the average number of points for players in that position Plot them as bar chart, sort the average of points in desc order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all branch names with the number of members in each branch registered after 2015 with a bar chart, and could you show Name from high to low order?", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each weekday using a bar chart.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)", "binning": "BIN date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107) BIN date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the names of catalog entries with level number 8?, rank from high to low by the X-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart shows the distribution of meter_400 and ID , I want to show by the names in ascending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, draw a bar chart about the distribution of  hire_date and the sum of salary bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, and I want to rank by the Y from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, for commission_pct, hire_date, visualize the trend, and sort by the x-axis in desc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE DESC"}, "hardness": "Medium"}, {"nl_queries": "Use a group line chart to show how many competitions are held in each year, group by official name and bin by year, and display from low to high by the X.", "db_id": "farm", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY Official_Name ORDER BY Year ASC", "binning": "BIN Year BY YEAR"}, "VQL": "Visualize LINE SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY Official_Name ORDER BY Year ASC BIN Year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, list by the Y-axis from high to low please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, display in ascending by the total number.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart showing the number of documents for each document type description.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute headquarter, and order in ascending by the Y-axis please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Manufacturer ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Manufacturer ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, find name and revenue , and group by attribute headquarter, and visualize them by a bar chart, and could you rank in descending by the y-axis?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T2.Revenue DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T2.Revenue DESC"}, "hardness": "Hard"}, {"nl_queries": "Show avg(baseprice) vs minimal baseprice as scatter plot use a different color for each decor", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(basePrice) , min(basePrice) FROM Rooms GROUP BY decor", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(basePrice) , min(basePrice) FROM Rooms GROUP BY decor"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for team_id of each all neutral, and order total number in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "How many locations? Draw a bar chart, sort total number from low to high order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the dates of the tests taken with result \"Pass\", and count them by a line chart, and order by the x-axis from low to high.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY date_test_taken ASC", "binning": "BIN date_test_taken BY DAY"}, "VQL": "Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY date_test_taken ASC BIN date_test_taken BY DAY"}, "hardness": "Hard"}, {"nl_queries": "Return me a line chart to show the frequency of the year attribute by binning into a weekday interval, list by the x-axis in desc.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM home_game  ORDER BY year DESC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM home_game  ORDER BY year DESC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Give me the descriptions of the service types that cost more than 100, and count them by a bar chart, and sort by the total number from high to low.", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description ORDER BY COUNT(Service_Type_Description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description ORDER BY COUNT(Service_Type_Description) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the types of competition and number of competitions for that type Show bar chart, and I want to order the total number from high to low order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of revenue , and group by attribute name, display in desc by the the average of revenue.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Revenue DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Revenue DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for listing the number of the phone numbers of all employees, sort names from high to low order.", "db_id": "chinook_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Home?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, find  hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Give the proportion of what is the total credit does each department offer?", "db_id": "college_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code", "binning": ""}, "VQL": "Visualize PIE SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road in a bar chart, and order Y-axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC"}, "hardness": "Medium"}, {"nl_queries": "In zip code 94107, on which day neither Fog nor Rain was not observed, and count them by a bar chart, sort by the y axis in desc.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"  ORDER BY COUNT(date) DESC", "binning": "BIN date BY YEAR"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"  ORDER BY COUNT(date) DESC BIN date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show the location codes and the number of documents in each location. Visualize by bar chart.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code", "binning": ""}, "VQL": "Visualize BAR SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the name , and group by attribute name by a bar chart, and sort y-axis in ascending order please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Manufacturer ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Manufacturer ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the  name , and group by attribute name by a bar chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different classes of races, and how many races correspond to each?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of  hire_date and the sum of salary bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "what are total transaction amounts for each transaction type?, and show by the Y-axis from low to high.", "db_id": "customers_and_invoices", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of trains starting from each origin Plot them as bar chart, and sort bar in ascending order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM train GROUP BY origin ORDER BY origin ASC", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin ORDER BY origin ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the nationalities and total ages of journalists?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Among all the claims, which claims have a claimed amount larger than the average? Please Bin the date it was settled into weekday interval and count them to show a bar chart, and display by the y axis from high to low.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Settled) DESC", "binning": "BIN Date_Claim_Settled BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Settled) DESC BIN Date_Claim_Settled BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Find the ids and first names of the 3 teachers that have the most number of assessment notes. Show bar chart.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.first_name , T1.teacher_id FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id ORDER BY count(*) DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT T2.first_name , T1.teacher_id FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id ORDER BY count(*) DESC LIMIT 3"}, "hardness": "Hard"}, {"nl_queries": "Return a pie on how many music festivals have had each kind of result, ordered descending by count?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart showing the total number of each minister, I want to list in asc by the total number.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC"}, "hardness": "Medium"}, {"nl_queries": "Please draw a histogram to show the total number of participants in each type code.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code", "binning": ""}, "VQL": "Visualize BAR SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of department_id over hire_date , and show in desc by the X-axis please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the headquarter , and group by attribute headquarter by a bar chart, display by the total number in desc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY SUM(Price) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY SUM(Price) DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for how many people are there of each nationality?, list in descending by the bars.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the average of age by grouped by home city as a bar graph, and sort total number from low to high order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each record in schedule, show average of the price for each day in a bar chart, and show in desc by the X.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , AVG(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date ORDER BY Date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , AVG(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date ORDER BY Date DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me the number of country by country in a histogram, sort by the bar in asc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Show weight from each date of birth, and display in descending by the total number.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_of_Birth , Weight FROM people ORDER BY Weight DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Date_of_Birth , Weight FROM people ORDER BY Weight DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me how many destination by destination in a histogram, sort y-axis in ascending order.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT destination , COUNT(destination) FROM Flight GROUP BY destination ORDER BY COUNT(destination) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT destination , COUNT(destination) FROM Flight GROUP BY destination ORDER BY COUNT(destination) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart, and I want to display by the total number of department id in desc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Show how many installation date from each installation date, and rank by the Y in ascending.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC", "binning": "BIN installation_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC BIN installation_date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Count the number of players who enter hall of fame for each year with a line chart, order by the x-axis from high to low.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT yearid , count(*) FROM hall_of_fame GROUP BY yearid ORDER BY yearid DESC", "binning": ""}, "VQL": "Visualize LINE SELECT yearid , count(*) FROM hall_of_fame GROUP BY yearid ORDER BY yearid DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart, and could you display y-axis in desc order please?", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC", "binning": "BIN Date_Claim_Made BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC BIN Date_Claim_Made BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Just list the resident id and details in a bar chart, rank in descending by the bars.", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT other_details , resident_id FROM Residents ORDER BY other_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT other_details , resident_id FROM Residents ORDER BY other_details DESC"}, "hardness": "Easy"}, {"nl_queries": "Show all countries and the number of people from each country, order Y in descending order please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Name and Height , and list by the Name from high to low.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height FROM people ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height FROM people ORDER BY Name DESC"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter, and could you order by the bar in descending?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart of department_id from each first name", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , DEPARTMENT_ID FROM employees", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for what are the number of the dates with a maximum temperature higher than 85?, and show total number in descending order.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC", "binning": "BIN date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For each phone, show its names and total number of stocks Visualize by bar chart, rank by the Y-axis in ascending please.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY sum(T1.Num_of_stock) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY sum(T1.Num_of_stock) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and display by the x-axis from high to low.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For each headquarter, what are the headquarter and how many companies are centered there. Show the proportion.", "db_id": "gas_company", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Headquarters , count(*) FROM company GROUP BY headquarters", "binning": ""}, "VQL": "Visualize PIE SELECT Headquarters , count(*) FROM company GROUP BY headquarters"}, "hardness": "Easy"}, {"nl_queries": "Show the hometown of all members, rank in ascending by the y-axis.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me school_id by all road in a histogram, rank Y in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "List the number of the name of technicians whose team is not \"NYY\", and I want to order from low to high by the y-axis please.", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM technician WHERE Team != \"NYY\" GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != \"NYY\" GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a scatter chart about the correlation between  People_ID and  Weight .", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT People_ID , Weight FROM people", "binning": ""}, "VQL": "Visualize SCATTER SELECT People_ID , Weight FROM people"}, "hardness": "Easy"}, {"nl_queries": "For each bed type, find the average base price of different bed type. Plot them as pie chart.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType", "binning": ""}, "VQL": "Visualize PIE SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType"}, "hardness": "Easy"}, {"nl_queries": "What is the code of each location and the number of documents in that location. Show bar chart.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code", "binning": ""}, "VQL": "Visualize BAR SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, return a line chart about the change of  department_id over  hire_date .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of ships with different nationalities and ship types?, and sort X in desc order please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of  job_id and the sum of salary , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar of class and the number of class colored by Rank, and display in asc by the x axis please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a pie chart about the proportion of  cName and  enr.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize PIE SELECT cName , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "List the types of competition and the number of competitions of each type by a pie chart.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize PIE SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart to show the number of names of high schoolers who have likes, list y axis from high to low order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis meter 500 y axis meter_100, and list by the bars in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )", "binning": "BIN Date_Claim_Made BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims ) BIN Date_Claim_Made BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show all party names and the number of members in each party with a bar chart, and list in desc by the bars.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?, and display X-axis in desc order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC"}, "hardness": "Hard"}, {"nl_queries": "Please draw a histogram to show the total number of participants in each type code, and I want to show by the y-axis from low to high please.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code ORDER BY COUNT(Participant_Type_Code) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code ORDER BY COUNT(Participant_Type_Code) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the total revenue of each manufacturer?, and order y-axis from high to low order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(revenue) FROM manufacturers GROUP BY name ORDER BY sum(revenue) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(revenue) FROM manufacturers GROUP BY name ORDER BY sum(revenue) DESC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of the number of type vs Nationality based on type, could you order by the y-axis from high to low?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) DESC"}, "hardness": "Hard"}, {"nl_queries": "Which directors had a movie in either 1999 or 2000, and count them by a bar chart, I want to order Y from low to high order.", "db_id": "culture_company", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY COUNT(Director) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY COUNT(Director) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart about the distribution of Name and Weight , and display y-axis in descending order.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Weight FROM people ORDER BY Weight DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Weight FROM people ORDER BY Weight DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis type y axis the total number ", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, and order in descending by the Date_in_Location_From please.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From DESC", "binning": "BIN Date_in_Location_From BY YEAR"}, "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From DESC BIN Date_in_Location_From BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 in a pie chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the distinct visit dates?", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS", "binning": "BIN Visit_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS BIN Visit_Date BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of transaction type versus the total number, and list transaction_type in descending order please.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of the parties associated with the delegates from district 1 or 2 Who served as comptrollers of the parties?, could you order by the y axis from high to low?", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller ORDER BY COUNT(Comptroller) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller ORDER BY COUNT(Comptroller) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart about what are the different template type codes, and how many documents use each type?, and could you display in asc by the y-axis?", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the number of counties for all appellations?, and list by the Y-axis in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC"}, "hardness": "Medium"}, {"nl_queries": "When are the birthdays of customer who are classified as 'Good Customer' status, and count them by a line chart, and list from high to low by the X-axis please.", "db_id": "driving_school", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth DESC", "binning": "BIN date_of_birth BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY date_of_birth DESC BIN date_of_birth BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "What are the different template type codes, and how many templates correspond to each Plot them as bar chart, and order from high to low by the x-axis please.", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what is the number of players who have points less than 30 for each position?, list by the y axis in desc please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Neutral and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Plot the average of salary by grouped by hire date as a bar graph", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, return a line chart about the change of  commission_pct over  hire_date .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'"}, "hardness": "Easy"}, {"nl_queries": "Show the outcome code of mailshots along with the number of mailshots in each outcome code Plot them as bar chart, display bar in asc order.", "db_id": "customers_campaigns_ecommerce", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code ORDER BY outcome_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code ORDER BY outcome_code ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the headquarter , and group by attribute headquarter by a bar chart, I want to order by the y axis from low to high please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of manufacturer , and group by attribute name, I want to show in desc by the x axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what is the number of professors for different school?, could you order in asc by the x axis?", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY SCHOOL_CODE ASC", "binning": ""}, "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY SCHOOL_CODE ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me the total number by citizenship in a histogram, rank by the x axis in descending.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the headquarter , and group by attribute headquarter by a bar chart, rank in ascending by the y-axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY SUM(Revenue) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY SUM(Revenue) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about Weight over the Date_of_Birth by a bar chart, and display by the x axis in desc please.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_of_Birth , Weight FROM people ORDER BY Date_of_Birth DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Date_of_Birth , Weight FROM people ORDER BY Date_of_Birth DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the number of the descriptions of the service types that cost more than 100.", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description", "binning": ""}, "VQL": "Visualize PIE SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of  phone_number and  employee_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "Show how many date departed from each date departed, and show from low to high by the y-axis.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY COUNT(date_departed) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY COUNT(date_departed) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, return a bar chart about the distribution of  job_id and the sum of employee_id , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID"}, "hardness": "Medium"}, {"nl_queries": "List the name of physicians who took some appointment, and count them by a bar chart, could you sort from low to high by the names?", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of phone_number and salary , and list y axis in ascending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC"}, "hardness": "Medium"}, {"nl_queries": "For each continent, list its name, and how many countries it has with a bar chart.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and revenue , and group by attribute headquarter in a bar chart, list Y from low to high order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T2.Revenue ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T2.Revenue ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and commission_pct , and sort names in descending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME DESC"}, "hardness": "Medium"}, {"nl_queries": "Can you show a bar chart to visualize the number of carriers?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Show me manager_id by last name in a histogram, show LAST_NAME in descending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , MANAGER_ID FROM employees ORDER BY LAST_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees ORDER BY LAST_NAME DESC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and All_Games_Percent , and visualize them by a bar chart, and list total number in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "How many courses each teacher taught? Show me a bar chart grouping by instructor's first name, and rank by the names in ascending.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY EMP_FNAME ORDER BY EMP_FNAME ASC", "binning": ""}, "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY EMP_FNAME ORDER BY EMP_FNAME ASC"}, "hardness": "Hard"}, {"nl_queries": "Show employee_id from each email, could you show x axis in ascending order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , EMPLOYEE_ID FROM employees ORDER BY EMAIL ASC", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , EMPLOYEE_ID FROM employees ORDER BY EMAIL ASC"}, "hardness": "Easy"}, {"nl_queries": "What is the number of films of each director? Return a bar chart, order in ascending by the names.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Directed_by , COUNT(Directed_by) FROM film GROUP BY Directed_by ORDER BY Directed_by ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Directed_by , COUNT(Directed_by) FROM film GROUP BY Directed_by ORDER BY Directed_by ASC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, list in descending by the X-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist in a bar chart, and show from low to high by the Y.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, and could you show x axis in desc order?", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code ,  organization_details ORDER BY organization_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY Type_of_Thing_Code ,  organization_details ORDER BY organization_details DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a bar chart", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the descriptions of the service types with product price above 100?, order by the X-axis in ascending.", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description ORDER BY Service_Type_Description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description ORDER BY Service_Type_Description ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a scatter chart about the correlation between  salary and  manager_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT SALARY , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": ""}, "VQL": "Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40"}, "hardness": "Medium"}, {"nl_queries": "Show me the number of booking start date by booking start date in a histogram", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings", "binning": "BIN booking_start_date BY YEAR"}, "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings BIN booking_start_date BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, sort total number in ascending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(SALARY) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "How many students taking a course who received an A or C? Group by students' last name with a bar chart, and could you show in desc by the the number of stu lname?", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT STU_LNAME , COUNT(STU_LNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_LNAME ORDER BY COUNT(STU_LNAME) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT STU_LNAME , COUNT(STU_LNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_LNAME ORDER BY COUNT(STU_LNAME) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me distance by name in a histogram, display X in descending order.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , distance FROM Aircraft ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , distance FROM Aircraft ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and I want to sort y-axis from low to high order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar graph showing the total number of different product names.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name"}, "hardness": "Easy"}, {"nl_queries": "List each language and the number of TV Channels using it with a pie chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE", "binning": ""}, "VQL": "Visualize PIE SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart, and rank in asc by the sum employee id please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(EMPLOYEE_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are the nationalities and total ages of journalists?, and display from low to high by the total number.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, draw a line chart about the change of commission_pct over hire_date , could you list by the X in descending?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis the total number ", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "For all employees in the same department and with the first name Clara, please give me a bar chart that bins hire date into the Month interval, and count how many employees in each month.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = \"Clara\")", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = \"Clara\") BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "What is the minimum weights for people of each sex? Show a bar chart, and I want to show minimal weight from high to low order.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , min(weight) FROM people GROUP BY Sex ORDER BY min(weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , min(weight) FROM people GROUP BY Sex ORDER BY min(weight) DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21', and sort y-axis from low to high order please.", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return each apartment type code with the number of apartments having that apartment type, in ascending order of the number of apartments. Plot them as bar chart.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT apt_type_code , COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT apt_type_code , COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Can you list the employee's last name and the corresponding department id using a bar chart?, rank in ascending by the y-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , DEPARTMENT_ID FROM employees ORDER BY DEPARTMENT_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees ORDER BY DEPARTMENT_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by time.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC", "binning": "BIN date_address_from BY YEAR"}, "VQL": "Visualize BAR SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and department_id , and list by the DEPARTMENT_ID in desc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Sex and the average of Height , and group by attribute Sex, could you list in desc by the bar?", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , AVG(Height) FROM people GROUP BY Sex ORDER BY Sex DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , AVG(Height) FROM people GROUP BY Sex ORDER BY Sex DESC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time, sort from high to low by the y axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about  ID over the  meter_700  by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Group and count the durations for each actor with a bar graph, order in asc by the total number.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of price , and group by attribute name, show in desc by the y axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Price DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Price DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of opening years for three churches that opened most recently in a bar chart.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church GROUP BY Open_Date ORDER BY open_date DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church GROUP BY Open_Date ORDER BY open_date DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "Find the data about the sale details and dates of transactions with amount smaller than 3000? Bin the date of the transaction into a weekday interval and compute the total number of each day with a bar chart, and sort y axis in desc order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, find name and the average of code , and group by attribute name, and visualize them by a bar chart, rank by the Y-axis in asc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code ASC"}, "hardness": "Hard"}, {"nl_queries": "Group and count the job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN for visualizing a bar chart, and could you rank by the y axis in ascending please?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary < ( SELECT min(salary) FROM employees WHERE job_id = 'MK_MAN' ) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary < ( SELECT min(salary) FROM employees WHERE job_id = 'MK_MAN' ) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the names and budgets of departments with budgets greater than the average Plot them as bar chart, could you display by the budget from low to high?", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY budget ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY budget ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the distinct visit dates?, and show Y from low to high order.", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) ASC", "binning": "BIN Visit_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) ASC BIN Visit_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose first name is ending with the letter m, sum their salary for visualizing a bar chart, and I want to display in descending by the bars please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For each manufacturer, what are the names and prices of their most expensive product?, and could you sort by the X-axis from high to low?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , max(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , max(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Please list the proportion number of each winning aircraft.", "db_id": "aircraft", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Aircraft , COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft", "binning": ""}, "VQL": "Visualize PIE SELECT Aircraft , COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft"}, "hardness": "Medium"}, {"nl_queries": "Find the number of courses provided in each year with a line chart.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , count(*) FROM SECTION GROUP BY year", "binning": ""}, "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY year"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find  hire_date and the sum of department_id bin hire_date by time, and visualize them by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the names and distances for all airplanes?, and I want to sort names from low to high order.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , distance FROM Aircraft ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , distance FROM Aircraft ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "How many delegates in each committee? Return a bar chart, and display by the y-axis in descending.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Committee , COUNT(Committee) FROM election GROUP BY Committee ORDER BY COUNT(Committee) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Committee , COUNT(Committee) FROM election GROUP BY Committee ORDER BY COUNT(Committee) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of country of each country, sort names in desc order.", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the names and ids of customers who have TN in their address Show bar chart, and show bar in descending order.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE \"%TN%\" ORDER BY customer_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE \"%TN%\" ORDER BY customer_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of games in each season and group by home team in a group line chart The x-axis is season, list by the Season from high to low.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ORDER BY Season DESC", "binning": "BIN Season BY YEAR"}, "VQL": "Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ORDER BY Season DESC BIN Season BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of departments created in different year and bin creation time by year in a line chart, list x axis in descending order.", "db_id": "department_management", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Creation , COUNT(Creation) FROM department  ORDER BY Creation DESC", "binning": "BIN Creation BY YEAR"}, "VQL": "Visualize LINE SELECT Creation , COUNT(Creation) FROM department  ORDER BY Creation DESC BIN Creation BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for how many faculty members participate in each activity? Return the activity names and the number of faculty members, sort Y in descending order.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "For each city, what is the highest latitude for its stations Visualize by bar chart, show in descending by the names.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city , max(lat) FROM station GROUP BY city ORDER BY city DESC", "binning": ""}, "VQL": "Visualize BAR SELECT city , max(lat) FROM station GROUP BY city ORDER BY city DESC"}, "hardness": "Easy"}, {"nl_queries": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a pie chart", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize PIE SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and employee_id , and visualize them by a bar chart, and order total number from high to low order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMPLOYEE_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMPLOYEE_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how much does each charge type costs? List both charge type and amount, and could you order names from high to low order?", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT charge_type , charge_amount FROM Charges ORDER BY charge_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges ORDER BY charge_type DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  date_address_from and the average of monthly_rental bin date_address_from by time.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC", "binning": "BIN date_address_from BY YEAR"}, "VQL": "Visualize BAR SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "List the number of the name of physicians who took some appointment.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name", "binning": ""}, "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of  meter_400 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and revenue , and group by attribute founder, sort by the X-axis in descending.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the correlation between  code and  revenue , and group by attribute headquarter in a scatter chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different nationality, sort total number in desc order.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot meter_100 by grouped by meter 300 as a bar graph, I want to order by the names in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_300 and meter_100 , and visualize them by a bar chart, and sort by the names from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show the number of competitions held in each city with a bar chart, and rank x axis in ascending order.", "db_id": "farm", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Official_Name , COUNT(Official_Name) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY Official_Name ORDER BY Official_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Official_Name , COUNT(Official_Name) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY Official_Name ORDER BY Official_Name ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about how many classes are held in each department?, and sort from low to high by the Y-axis.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , count(*) FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , count(*) FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are all the employee ids and the names of the countries in which they work Visualize by bar chart, I want to order in asc by the X-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT COUNTRY_NAME , SUM(EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id GROUP BY COUNTRY_NAME ORDER BY COUNTRY_NAME ASC", "binning": ""}, "VQL": "Visualize BAR SELECT COUNTRY_NAME , SUM(EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id GROUP BY COUNTRY_NAME ORDER BY COUNTRY_NAME ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, find  hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many hours do the students spend studying in each department?, and I want to sort by the y axis in ascending.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code ORDER BY sum(stu_hrs) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code ORDER BY sum(stu_hrs) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of code , and group by attribute founder, and sort from low to high by the total number of code.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of the treatments for each dog of the rarest breed in a bar chart.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me line charts of worldwide gross total number of shop id over year start from by major genres Is_full_time, I want to list by the x-axis from low to high.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, and sort total number in desc order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart shows the distribution of All_Games and School_ID , I want to show by the total number in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of Team_ID over the All_Home , and group by attribute All_Home by a bar chart, list Y in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between  price and  code , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Price , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Price , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id, rank in desc by the Y-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC"}, "hardness": "Hard"}, {"nl_queries": "how many registed students do each course have? List course name and the number of their registered students?, and list y axis from high to low order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many rooms have king beds? Report the number for each decor type, and rank from high to low by the the total number .", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis is full time y axis mean employee id, show in descending by the bar.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time DESC"}, "hardness": "Medium"}, {"nl_queries": "How many countries does each continent have? Return a bar chart listing the continent name and the number of countries, and I want to display the total number from high to low order.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, and order by the bars from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "For the days with the 3 largest maximum gust speeds, calculate the total mean humidity of each month (bin date into month level).", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , SUM(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3", "binning": "BIN date BY MONTH"}, "VQL": "Visualize BAR SELECT date , SUM(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each. ", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name"}, "hardness": "Hard"}, {"nl_queries": "Visualize the general trend of maximal price over the year, I want to sort X-axis in asc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC"}, "hardness": "Easy"}, {"nl_queries": "Display a bar chart for what is the code of each location and the number of documents in that location?, list by the total number in ascending.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "List the name and the number of stations for all the cities that have at least 15 stations. Show bar chart.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city , COUNT(*) FROM station GROUP BY city", "binning": ""}, "VQL": "Visualize BAR SELECT city , COUNT(*) FROM station GROUP BY city"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?, display by the x-axis in descending please.", "db_id": "chinook_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.FirstName DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.FirstName DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the names and publication dates of all catalogs that have catalog level numbers greater than 5 Bin publication dates into Year interval, and count catalog as a bar chart, and could you order Y-axis from high to low order?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5  ORDER BY COUNT(date_of_publication) DESC", "binning": "BIN date_of_publication BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5  ORDER BY COUNT(date_of_publication) DESC BIN date_of_publication BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart for what is average age for different job title?, and display by the Y-axis from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, sort total number from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a pie chart about the proportion of All_Home and the sum of School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "What are the number of names of patients who made an appointment?, and could you order by the y axis from low to high?", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, sort Y-axis from high to low order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(SALARY) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show project ids and the number of documents in each project in a scatter chart", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Project_ID , count(*) FROM Documents GROUP BY project_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT Project_ID , count(*) FROM Documents GROUP BY project_id"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, visualize a bar chart about the distribution of  job_id and the amount of job_id , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID"}, "hardness": "Medium"}, {"nl_queries": "Just show the id and name of each editor using a bar chart.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday, and sort Y-axis in desc order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id, and rank from high to low by the names.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of users in each role Plot them as bar chart, and could you display bar from high to low order?", "db_id": "document_management", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY role_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY role_code DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of manufacturer , and group by attribute name in a bar chart, and rank by the bars in desc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me the average of capacity by openning year in a histogram, order by the y-axis in descending.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Openning_year , AVG(Capacity) FROM cinema GROUP BY Openning_year ORDER BY AVG(Capacity) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Openning_year , AVG(Capacity) FROM cinema GROUP BY Openning_year ORDER BY AVG(Capacity) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a scatter chart on how many assets does each third party company supply? List the count and the company id.", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id GROUP BY T1.company_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id GROUP BY T1.company_id"}, "hardness": "Medium"}, {"nl_queries": "For each citizenship, how many singers are from that country, and rank by the x axis in descending.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC"}, "hardness": "Medium"}, {"nl_queries": "Show names of teachers and the number of courses they teach with a bar chart, and I want to sort x axis from high to low order.", "db_id": "course_teach", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the relationship between support and oppose rates of each candidate?", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Support_rate , Oppose_rate FROM candidate", "binning": ""}, "VQL": "Visualize SCATTER SELECT Support_rate , Oppose_rate FROM candidate"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and commission_pct , and could you sort by the COMMISSION_PCT in descending?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the name for regions and the number of storms for each region in a pie chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "binning": ""}, "VQL": "Visualize PIE SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}, "hardness": "Medium"}, {"nl_queries": "Who has friends that are older than the average age? Print their friends and their ages as well using a bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)", "binning": ""}, "VQL": "Visualize BAR SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)"}, "hardness": "Medium"}, {"nl_queries": "Show a bar chart about how many employees does each role have?, I want to order by the the total number in descending.", "db_id": "cre_Doc_Control_Systems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of customers that use email as the contact channel for each year Visualize with a bar chart, display by the the number of active from date in desc.", "db_id": "customers_and_addresses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) DESC", "binning": "BIN active_from_date BY YEAR"}, "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) DESC BIN active_from_date BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of male and female assistant professors with a bar chart, and sort from high to low by the y-axis.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , count(*) FROM Faculty WHERE rank = \"AsstProf\" GROUP BY sex ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = \"AsstProf\" GROUP BY sex ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the average salary by each hire date of employees, and please bin the hire date into the day of week interval for showing a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, draw a bar chart about the distribution of  job_id and the sum of salary , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID"}, "hardness": "Medium"}, {"nl_queries": "A pie chart for listing the number of the names of patients who have made appointments.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name", "binning": ""}, "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for how many date of transaction of each date of transaction, and display by the the number of date of transaction in ascending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Visualize a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, display by the x-axis in asc.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of orders in each day and show in a line chart.", "db_id": "customers_and_addresses", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\"", "binning": "BIN order_date BY DAY"}, "VQL": "Visualize LINE SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" BIN order_date BY DAY"}, "hardness": "Hard"}, {"nl_queries": "Bar graph to show mean school id from different all home, sort y-axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Can you draw the trend of shop_id over the start from?, sort in ascending by the x axis.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , Shop_ID FROM hiring ORDER BY Start_from ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring ORDER BY Start_from ASC"}, "hardness": "Easy"}, {"nl_queries": "plot scatter on what is the total amount of grant money given to each organization and what is its id?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id"}, "hardness": "Easy"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm, I want to list in asc by the X-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Create a bar chart showing how many arrival across arrival, I want to display by the names from high to low.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival DESC"}, "hardness": "Medium"}, {"nl_queries": "How many apartment bookings in each year? Show me a bar chart binning booking end date by year, I want to rank in descending by the how many booking end date.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) DESC", "binning": "BIN booking_end_date BY YEAR"}, "VQL": "Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) DESC BIN booking_end_date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Return the results of all music festivals using a bar chart, I want to sort Y in ascending order.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many competitions for each country?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing total number of meter 100 across meter 200, and could you order from low to high by the Y-axis please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the type of school and the number of buses for each type. ", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type"}, "hardness": "Medium"}, {"nl_queries": "Tell me the proportion of the total number of different ranks using a bar graph.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank"}, "hardness": "Easy"}, {"nl_queries": "Show me the frequency of names of high schoolers who have likes with a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, a line chart shows the change of commission_pct over hire_date, list X-axis in asc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the first and last name of the students who are not in the largest major?", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , COUNT(Fname) FROM student WHERE major != (SELECT major FROM student) GROUP BY Fname", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM student WHERE major != (SELECT major FROM student) GROUP BY Fname"}, "hardness": "Medium"}, {"nl_queries": "What are the nationalities and their average ages of journalists Show me a bar chart, order total number in desc order please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compute the total the total number across investor as a pie chart.", "db_id": "entrepreneur", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor", "binning": ""}, "VQL": "Visualize PIE SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor"}, "hardness": "Easy"}, {"nl_queries": "Find the number of students who took some course and got A or C and group by first name in a bar chart, and I want to show by the how many stu fname in ascending.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT STU_FNAME , COUNT(STU_FNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_FNAME ORDER BY COUNT(STU_FNAME) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT STU_FNAME , COUNT(STU_FNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_FNAME ORDER BY COUNT(STU_FNAME) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, sort total number of salary from high to low order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(SALARY) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for returning the number of the categories of music festivals that have the result \"Awarded\", and I want to rank y-axis in desc order please.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC"}, "hardness": "Hard"}, {"nl_queries": "For employees with first names that end with the letter 'm', groups and counts the first name to visualize a pie graph.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME", "binning": ""}, "VQL": "Visualize PIE SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME"}, "hardness": "Hard"}, {"nl_queries": "How many different locations does each school have Show bar chart, and order from low to high by the y-axis.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY count(DISTINCT dept_address) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY count(DISTINCT dept_address) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the cost and treatment type description of each treatment?, display Y from high to low order please.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, a bar chart shows the distribution of  name and the sum of manufacturer , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name"}, "hardness": "Medium"}, {"nl_queries": "Find all types of store and number of them Visualize by bar chart, order by the y axis in asc please.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all calendar dates and bin by year in a line chart, and order by the x-axis in desc.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date DESC", "binning": "BIN Calendar_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date DESC BIN Calendar_Date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show the price of each product supplied by supplier id 3 in a bar chart, sort by the X-axis in descending please.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_name , product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 ORDER BY product_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_name , product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 ORDER BY product_name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter, order by the Headquarter from high to low.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for how many members are in each party?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many wines are there for each grape?, rank by the bars from high to low.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "Does it have something interesting about the manager id and the department id?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.MANAGER_ID , T1.DEPARTMENT_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.MANAGER_ID , T1.DEPARTMENT_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id"}, "hardness": "Medium"}, {"nl_queries": "Return the name of each physician and the number of patients he or she treats, I want to sort by the bars in ascending.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Find All_Road and All_Games_Percent , and visualize them by a bar chart, display bar in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Home and the sum of School_ID , and group by attribute All_Home, and visualize them by a bar chart, display X-axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the dates when the max temperature was higher than 85, and count them by a bar chart", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85", "binning": "BIN date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show me about the proportion of the sum of Team_ID and the sum of Team_ID in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and list names in asc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the  Nationality , and group by attribute Nationality by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, could you list by the Y-axis from low to high?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id, and display in desc by the bar please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Hard"}, {"nl_queries": "Display a bar chart for how many rooms in each building have a capacity of over 50?, could you list from low to high by the X?", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY building ASC", "binning": ""}, "VQL": "Visualize BAR SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY building ASC"}, "hardness": "Hard"}, {"nl_queries": "How many stadiums does each country have Show bar chart, and rank by the Y-axis in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of  hire_date and the average of manager_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show the names and the total grades of each high schooler by a bar chart, sort in desc by the name.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and their total grades for each high schooler? Show me the result using a bar chart, and display by the bar in desc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the id and weight of all pets whose age is older than 1 Visualize by bar chart, sort in descending by the names.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC"}, "hardness": "Medium"}, {"nl_queries": "A line chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31?, and I want to display date from low to high order.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the category of music festivals with result \"Awarded\"?, rank by the Y in descending.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart about the distribution of  Days and the sum of Credits , and group by attribute Days.", "db_id": "college_3", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Days , SUM(Credits) FROM COURSE GROUP BY Days ORDER BY Credits", "binning": ""}, "VQL": "Visualize BAR SELECT Days , SUM(Credits) FROM COURSE GROUP BY Days ORDER BY Credits"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, and sort by the y axis from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return the number of the countries of the mountains that have a height larger than 5000, and could you show y axis in desc order?", "db_id": "climbing", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose first name does not contain the letter M, give me a line chart to show the hire date and the corresponding salaries, show in asc by the x-axis please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Games , could you show by the total number from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what are the titles and ids for albums containing tracks with unit price greater than 1?, and rank in desc by the x axis.", "db_id": "chinook_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title DESC"}, "hardness": "Hard"}, {"nl_queries": "Find All_Road and School_ID , and visualize them by a bar chart, and list by the x axis in descending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me the average of weight by sex in a histogram", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , AVG(Weight) FROM people GROUP BY Sex", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , AVG(Weight) FROM people GROUP BY Sex"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of  name and the sum of code , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list y axis from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the number of date in locaton to across date in locaton to, could you display by the y axis from low to high?", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) ASC", "binning": "BIN Date_in_Locaton_To BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) ASC BIN Date_in_Locaton_To BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of salary over the job_id , and group by attribute job_id, I want to order in descending by the JOB_ID please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Who were the governors of the parties associated with delegates from district 1, and count them by a bar chart, and order bar from high to low order.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Governor , COUNT(Governor) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 GROUP BY Governor ORDER BY Governor DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Governor , COUNT(Governor) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 GROUP BY Governor ORDER BY Governor DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find  Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "How many patients do each physician take care of? List their names and number of patients they take care of Show bar chart, and could you rank in descending by the bar?", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id by a bar chart, and list x axis in descending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Hard"}, {"nl_queries": "How many patients do each physician take care of? List their names and number of patients they take care of in a bar chart, and could you show by the Name in descending?", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of climbers and the corresponding heights of the mountains that they climb Show bar chart, display from low to high by the bars please.", "db_id": "climbing", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, return a line chart about the change of department_id over hire_date , order by the X in ascending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of job_id and manager_id , list in desc by the x axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of the names of editors that are on the committee of journals with sales bigger than 3000.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name"}, "hardness": "Hard"}, {"nl_queries": "For those employees who did not have any job in the past, visualize a bar chart about the distribution of  hire_date and the sum of department_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, order from low to high by the X-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the relationship between oldest age and average age and group by sex in a group scatter chart.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(age) , max(age) FROM student GROUP BY Sex", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(age) , max(age) FROM student GROUP BY Sex"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average, and display the number of date claim made in ascending order please.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) ASC", "binning": "BIN Date_Claim_Made BY YEAR"}, "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) ASC BIN Date_Claim_Made BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are all the employee ids and the names of the countries in which they work?, sort by the total number from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT COUNTRY_NAME , SUM(EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id GROUP BY COUNTRY_NAME ORDER BY SUM(EMPLOYEE_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT COUNTRY_NAME , SUM(EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id GROUP BY COUNTRY_NAME ORDER BY SUM(EMPLOYEE_ID) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on what are the different role codes for users, and how many users have each?, and order from low to high by the x axis.", "db_id": "document_management", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY role_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY role_code ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a scatter plot of team id and acc_percent for .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "How many the artists who produced the top three highly rated songs of each country? Show the result using a bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3"}, "hardness": "Extra Hard"}, {"nl_queries": "Plot how many name by grouped by name as a bar graph, order in ascending by the x-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the number of appellations whose score is higher than 93, and ordered by Name.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Appelation ORDER BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Appelation ORDER BY Name"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what is the number of professors for different school?, I want to display the total number from low to high order.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return the lot details of lots that belong to investors with details \"l\", and count them by a bar chart, and I want to rank by the bar in descending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the average gpa of all students in each department with a bar chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , avg(stu_gpa) FROM student GROUP BY dept_code", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , avg(stu_gpa) FROM student GROUP BY dept_code"}, "hardness": "Easy"}, {"nl_queries": "What are all the employee ids and the names of the countries in which they work Visualize by bar chart, and show Y from high to low order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT COUNTRY_NAME , SUM(EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id GROUP BY COUNTRY_NAME ORDER BY SUM(EMPLOYEE_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT COUNTRY_NAME , SUM(EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id GROUP BY COUNTRY_NAME ORDER BY SUM(EMPLOYEE_ID) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of different tracks, and how many races has each had Plot them as bar chart, could you list in asc by the Y-axis?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the headquarter , and group by attribute headquarter, and sort in descending by the bar.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, sort by the sum population in asc.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the ids and locations of all circuits in France or Belgium Show bar chart, and order in asc by the Y.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT location , circuitId FROM circuits WHERE country = \"France\" OR country = \"Belgium\" ORDER BY circuitId ASC", "binning": ""}, "VQL": "Visualize BAR SELECT location , circuitId FROM circuits WHERE country = \"France\" OR country = \"Belgium\" ORDER BY circuitId ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the name , and group by attribute name by a bar chart, and rank by the bars in desc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, list total number in ascending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart, could you rank y axis from low to high order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY COUNT(HIRE_DATE) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, what is the relationship between  employee_id and  salary ?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT EMPLOYEE_ID , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": ""}, "VQL": "Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40"}, "hardness": "Medium"}, {"nl_queries": "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, and rank in descending by the x-axis.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name DESC"}, "hardness": "Hard"}, {"nl_queries": "Compare the lowest rating among all movies by each director using a bar chart, and display y axis from high to low order.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY min(T1.stars) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY min(T1.stars) DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart to show the average age for each type of pet, and order from low to high by the bar please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by citizenship in a histogram, and display bars in asc order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC"}, "hardness": "Medium"}, {"nl_queries": "For those ships that do not have a captain, tell me the total number of their classes using a pie chart, display from low to high by the bars please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY Class ASC"}, "hardness": "Hard"}, {"nl_queries": "A line chart shows the trend of the amount of Start_from over Start_from bin start_from by time, could you display Start_from in descending order?", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Find the average of credits of courses that have more than one prerequisite for each department with a bar chart, list by the bar in descending please.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, display from low to high by the x-axis please.", "db_id": "browser_web", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "How many templates with version number later than 5 for each template type code? Show me a bar chart, and order by the y axis in descending.", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of the countries that have managers of age above 50 or below 46, list in descending by the bars.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find  hire_date and the average of manager_id bin hire_date by weekday, and visualize them by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Give me a tendency forwhat is the average weight of cars each year?, and I want to rank by the x-axis in asc please.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Weight) FROM CARS_DATA GROUP BY YEAR ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Weight) FROM CARS_DATA GROUP BY YEAR ORDER BY Year ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex, could you sort by the x axis in descending?", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY Sex DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY Sex DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the average of baseprice by bedtype in a histogram, and sort by the bars from high to low.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the total student enrollment for different affiliation type schools. Plot them as bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation"}, "hardness": "Easy"}, {"nl_queries": "how many products are there for each manufacturer?, and rank in ascending by the Y.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many different locations does each school have Show bar chart, and I want to sort by the X-axis in asc please.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY SCHOOL_CODE ASC", "binning": ""}, "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY SCHOOL_CODE ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about meter_100 over the Time by a bar chart, and could you rank from high to low by the total number?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart, and show by the total number in ascending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the phone_number , display by the x axis in asc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY PHONE_NUMBER ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY PHONE_NUMBER ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of  founder and the average of revenue , and group by attribute founder in a bar chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder"}, "hardness": "Medium"}, {"nl_queries": "I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each year, and I want to sort Y-axis in asc order.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC", "binning": "BIN date BY YEAR"}, "VQL": "Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC BIN date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Which parts have more than 2 faults? Show the part name and id. Plot them as bar chart.", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id", "binning": ""}, "VQL": "Visualize BAR SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id"}, "hardness": "Easy"}, {"nl_queries": "Plot the total number by grouped by competition type as a bar graph", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "What are the names of the different bank branches, and what are their total loan amounts Show bar chart, list bars from low to high order please.", "db_id": "loan_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY bname ASC", "binning": ""}, "VQL": "Visualize BAR SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY bname ASC"}, "hardness": "Hard"}, {"nl_queries": "I want to see trend the number of season over season by Away_team, list by the x axis in ascending.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ORDER BY Season ASC", "binning": "BIN Season BY YEAR"}, "VQL": "Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ORDER BY Season ASC BIN Season BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute headquarter in a bar chart, could you show bar from high to low order please?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many storms occured in each region?, and order total number from high to low order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Create a pie chart showing school_id across all neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  other_details and the sum of monthly_rental , and group by attribute other_details.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC", "binning": ""}, "VQL": "Visualize BAR SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the average of age by grouped by home city as a bar graph, show from high to low by the total number.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many dogs departed in each day? Visualize with a bar chart that groups by departed date, order how many date departed in ascending order.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY COUNT(date_departed) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY COUNT(date_departed) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of revenue , and group by attribute name in a bar chart, and show by the y-axis in asc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Revenue ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Revenue ASC"}, "hardness": "Hard"}, {"nl_queries": "For those payments processed with Visa, bin the payment day into Year interval and count them for a bar chart, sort by the how many date payment made in asc.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) ASC", "binning": "BIN Date_Payment_Made BY YEAR"}, "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) ASC BIN Date_Payment_Made BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "What is the weekday of birthdates of the professors in charge of ACCT-211? Visualize with a bar chart, I want to sort in asc by the y-axis.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMP_DOB , COUNT(EMP_DOB) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = \"ACCT-211\"  ORDER BY COUNT(EMP_DOB) ASC", "binning": "BIN EMP_DOB BY WEEKDAY"}, "VQL": "Visualize BAR SELECT EMP_DOB , COUNT(EMP_DOB) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = \"ACCT-211\"  ORDER BY COUNT(EMP_DOB) ASC BIN EMP_DOB BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are different nationalities of people and the corresponding number of people from each nation. Visualize by bar chart.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of price , and group by attribute founder in a bar chart, could you order names from low to high order?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, and rank by the Y-axis in asc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Scatter. how many settlements does each claim correspond to? List the claim id and the number of settlements.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Claim_ID , count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Claim_ID , count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of  headquarter and the sum of price , and group by attribute headquarter.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter"}, "hardness": "Medium"}, {"nl_queries": "Show me a scatter plot of people id and total for .", "db_id": "body_builder", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT People_ID , Total FROM body_builder", "binning": ""}, "VQL": "Visualize SCATTER SELECT People_ID , Total FROM body_builder"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing total number of stu hrs across dept code, and list by the X in descending please.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code ORDER BY DEPT_CODE DESC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code ORDER BY DEPT_CODE DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute founder by a bar chart, rank by the Name from low to high.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart, and sort y axis in ascending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Find the sum of credits of courses that have more than one prerequisite for each title with a bar chart, list by the y axis in ascending.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY SUM(credits) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY SUM(credits) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the name and the number of stations for all the cities that have at least 15 stations. Visualize by pie chart.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT city , COUNT(*) FROM station GROUP BY city", "binning": ""}, "VQL": "Visualize PIE SELECT city , COUNT(*) FROM station GROUP BY city"}, "hardness": "Easy"}, {"nl_queries": "Stacked bar chart of the average of shop id for with each Is_full_time in each start from, display y axis from low to high order.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way Plot them as bar chart, and display from low to high by the X-axis.", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY How_to_Get_There ASC", "binning": ""}, "VQL": "Visualize BAR SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY How_to_Get_There ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the last names and ages of the students who are allergic to milk and cat? Plot them as bar chart, and could you rank Y in desc order please?", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LName , Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = \"Cat\") ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LName , Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = \"Cat\") ORDER BY Age DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of department_id over the  job_id , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID"}, "hardness": "Hard"}, {"nl_queries": "What is the number of carriers of phones? Give me a bar chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"", "binning": "BIN date_of_completion BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" BIN date_of_completion BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, and sort by the sum department id in ascending please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of each allergie type in a bar chart, and display by the X in desc.", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type GROUP BY AllergyType ORDER BY AllergyType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type GROUP BY AllergyType ORDER BY AllergyType DESC"}, "hardness": "Medium"}, {"nl_queries": "Give the number of each course name with at least five enrollments Return a bar chart, list y axis from high to low order.", "db_id": "college_3", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.CName , COUNT(T1.CName) FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T1.CName T2.CID HAVING COUNT(*) >= 5 ORDER BY COUNT(T1.CName) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.CName , COUNT(T1.CName) FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T1.CName T2.CID HAVING COUNT(*) >= 5 ORDER BY COUNT(T1.CName) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the facility codes of the apartments with more than four bedrooms?, and order by the total number in ascending please.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY COUNT(facility_code) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY COUNT(facility_code) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar graph to show the number of last name from different last name, list X-axis in desc order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name DESC"}, "hardness": "Medium"}, {"nl_queries": "how many sections does each course has?, and could you list x axis in descending order?", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CRS_CODE , count(*) FROM CLASS GROUP BY crs_code ORDER BY CRS_CODE DESC", "binning": ""}, "VQL": "Visualize BAR SELECT CRS_CODE , count(*) FROM CLASS GROUP BY crs_code ORDER BY CRS_CODE DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way in a bar chart, and show by the bars from high to low.", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY How_to_Get_There DESC", "binning": ""}, "VQL": "Visualize BAR SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY How_to_Get_There DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the county name and population of all counties with a bar chart.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County_name , Population FROM county", "binning": ""}, "VQL": "Visualize BAR SELECT County_name , Population FROM county"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road in a bar chart, show names in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of  Days and the sum of Credits , and group by attribute Days.", "db_id": "college_3", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Days , SUM(Credits) FROM COURSE GROUP BY Days ORDER BY Credits", "binning": ""}, "VQL": "Visualize BAR SELECT Days , SUM(Credits) FROM COURSE GROUP BY Days ORDER BY Credits"}, "hardness": "Medium"}, {"nl_queries": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id. Plot them as scatter chart.", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Document_ID , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT Document_ID , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id"}, "hardness": "Medium"}, {"nl_queries": "Count the number of employees for each city with a bar chart, display x axis from high to low order.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT City , count(*) FROM employee GROUP BY city ORDER BY City DESC", "binning": ""}, "VQL": "Visualize BAR SELECT City , count(*) FROM employee GROUP BY city ORDER BY City DESC"}, "hardness": "Medium"}, {"nl_queries": "How many students are advised by each rank of faculty? List the rank and the number of students Plot them as bar chart, and could you show by the Rank from high to low?", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank ORDER BY Rank DESC"}, "hardness": "Hard"}, {"nl_queries": "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, list from high to low by the x axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me a line chart of how the number of open date change over the open date, list by the Open_Date in desc please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and Team_ID in a bar chart, could you show by the y-axis from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing the total number across city code, rank from high to low by the X-axis.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city_code , count(*) FROM student GROUP BY city_code ORDER BY city_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT city_code , count(*) FROM student GROUP BY city_code ORDER BY city_code DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of professionals in a bar chart that groups by professional's first name.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the id and weight of every pet who is older than 1?, could you list by the names in descending?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give the minimum product price for each product type in a bar chart.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_type_code , min(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code", "binning": ""}, "VQL": "Visualize BAR SELECT product_type_code , min(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code"}, "hardness": "Easy"}, {"nl_queries": "Show the shortest duration and lowest rating of songs grouped by genre using a bar chart, and display y axis in desc order.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Neutral and All_Games_Percent , and visualize them by a bar chart, and I want to rank by the names from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Show average of budget in each year and bin creation time by year in a line chart, and could you rank in descending by the Creation?", "db_id": "department_management", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Creation , AVG(Budget_in_Billions) FROM department  ORDER BY Creation DESC", "binning": "BIN Creation BY YEAR"}, "VQL": "Visualize LINE SELECT Creation , AVG(Budget_in_Billions) FROM department  ORDER BY Creation DESC BIN Creation BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "What is average age for different job title. Show the proportion.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Find the sum of credits of courses that have more than one prerequisites for each department with a bar chart, and rank from high to low by the bar.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\", and count them by a bar chart, list in descending by the y-axis.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"  ORDER BY COUNT(date_of_latest_logon) DESC", "binning": "BIN date_of_latest_logon BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"  ORDER BY COUNT(date_of_latest_logon) DESC BIN date_of_latest_logon BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of  phone_number and  department_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart that counts the number of venues of each workshop, order from high to low by the x-axis please.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC"}, "hardness": "Medium"}, {"nl_queries": "How many apartment bookings for each weekday? Draw a bar chart binning booking start date by weekday interval.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id", "binning": "BIN booking_start_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id BIN booking_start_date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, order in asc by the x-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC"}, "hardness": "Medium"}, {"nl_queries": "A pie chart for listing the number of the names of products that are not in any event.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize PIE SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis product type code y axis the number of product type code, rank in descending by the Y-axis.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Games and ACC_Percent , rank by the total number in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show the date and id of the transcript with at least 2 course results Visualize by bar chart, and could you rank by the x-axis in descending?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart showing the average of capacity of cinemas open for each year, sort Openning_year in descending order.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Openning_year , AVG(Capacity) FROM cinema GROUP BY Openning_year ORDER BY Openning_year DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Openning_year , AVG(Capacity) FROM cinema GROUP BY Openning_year ORDER BY Openning_year DESC"}, "hardness": "Medium"}, {"nl_queries": "Group and count the name attribute for visualizing a bar chart, and display in descending by the names.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what is the lowest salary in departments with average salary greater than the overall average, and show in descending by the minimal salary.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY min(salary) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY min(salary) DESC"}, "hardness": "Easy"}, {"nl_queries": "Show the product name and total order quantity for each product with a bar chart.", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.product_name , AVG(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.product_name , AVG(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name"}, "hardness": "Medium"}, {"nl_queries": "Show me the trend about the average of Shop_ID over Start_from bin start_from by time with a line chart, rank in desc by the x axis.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from DESC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the job_id , rank by the Y-axis in ascending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, and could you sort by the total number of cloud cover in asc?", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC", "binning": "BIN date BY YEAR"}, "VQL": "Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC BIN date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday, display Y-axis in desc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me the number of country by country in a histogram, and I want to sort in desc by the x axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Ignore movies whose director is NULL. For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a pie chart.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\"", "binning": ""}, "VQL": "Visualize PIE SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\""}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, and could you display by the y axis from low to high?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(SALARY) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart about the distribution of Time and meter_100 , could you display in descending by the x-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Find the average gpa of all students in each department with a pie chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT DEPT_CODE , avg(stu_gpa) FROM student GROUP BY dept_code", "binning": ""}, "VQL": "Visualize PIE SELECT DEPT_CODE , avg(stu_gpa) FROM student GROUP BY dept_code"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, could you order by the total number of manager id from low to high?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the date of birth of every customer whose status code is 'Good Customer', and count them by a bar chart, and order by the Y-axis from high to low please.", "db_id": "driving_school", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) DESC", "binning": "BIN date_of_birth BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for how many rooms cost more than 120, for each different decor?, and list by the Y in descending.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me the average of baseprice by bedtype in a histogram, and could you sort in ascending by the bars?", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType ASC"}, "hardness": "Medium"}, {"nl_queries": "List the number of dogs departed in each day with a bar chart that bins departed date by day interval.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs", "binning": "BIN date_departed BY DAY"}, "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs BIN date_departed BY DAY"}, "hardness": "Easy"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday, and order Y in desc order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "For all artist names who are not from the United States, show the total number of each year with a bar chart, I want to display Y-axis from low to high order please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted in a bar chart, sort by the the total number from high to low.", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT staff_name , count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT staff_name , count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many entrepreneurs correspond to each investor, could you display Y in asc order?", "db_id": "entrepreneur", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday, and display by the Y in ascending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(MANAGER_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show the party and the number of drivers in each party Plot them as bar chart, show bar in descending order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the average prices of products, grouped by manufacturer name?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "What is the highest student GPA for every department? Return a pie chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT DEPT_CODE , max(stu_gpa) FROM student GROUP BY DEPT_CODE", "binning": ""}, "VQL": "Visualize PIE SELECT DEPT_CODE , max(stu_gpa) FROM student GROUP BY DEPT_CODE"}, "hardness": "Easy"}, {"nl_queries": "List the number of invoices from the US, grouped by state Visualize by bar chart, I want to order in descending by the y-axis.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis state y axis the number of state, I want to sort in descending by the bars please.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all calendar dates and bin by weekday in a bar chart, I want to rank y axis in desc order.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC", "binning": "BIN Calendar_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC BIN Calendar_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Games and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "what is the average weight for each type of pet?, and display by the PetType from low to high.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, list from low to high by the y axis please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "what is the id and trade name of the medicines can interact with at least 3 enzymes?, I want to list in descending by the y axis.", "db_id": "medicine_enzyme_interaction", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id DESC"}, "hardness": "Medium"}, {"nl_queries": "For each product, show its proportion of the name with a pie chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_name , COUNT(product_name) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY product_name", "binning": ""}, "VQL": "Visualize PIE SELECT product_name , COUNT(product_name) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY product_name"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart, could you order by the y axis in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, order by the total number from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Plot the id and the number of journal committees they are on in a scatter chart.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Editor_ID , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Editor_ID , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the first_name , order by the y-axis in descending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY DESC", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names of the singers and number of concerts for each person. Show the proportion.", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id"}, "hardness": "Medium"}, {"nl_queries": "Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart, and list Y from high to low order.", "db_id": "match_season", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\" ORDER BY Draft_Pick_Number DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\" ORDER BY Draft_Pick_Number DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the average age for students with different sex in a bar chart, rank x axis in descending order.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , avg(age) FROM student GROUP BY sex ORDER BY Sex DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , avg(age) FROM student GROUP BY sex ORDER BY Sex DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of members living in each address Show bar chart, and I want to show x-axis from low to high order.", "db_id": "coffee_shop", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Address , count(*) FROM member GROUP BY address ORDER BY Address ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Address , count(*) FROM member GROUP BY address ORDER BY Address ASC"}, "hardness": "Medium"}, {"nl_queries": "How many courses each teacher taught? Show me a bar chart, sort X in desc order.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY EMP_FNAME ORDER BY EMP_FNAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY EMP_FNAME ORDER BY EMP_FNAME DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what are the names and prices of all products in the store?, and order names in desc order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , AVG(Price) FROM products GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , AVG(Price) FROM products GROUP BY Name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the name and rank of every company ordered by descending number of sales. Show bar chart.", "db_id": "gas_company", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company , Rank FROM company ORDER BY Sales_billion DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Company , Rank FROM company ORDER BY Sales_billion DESC"}, "hardness": "Easy"}, {"nl_queries": "Show the trend about the total average number of attendance at home games change over the years, bin year into year interval.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , avg(attendance) FROM home_game GROUP BY YEAR", "binning": ""}, "VQL": "Visualize LINE SELECT year , avg(attendance) FROM home_game GROUP BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of monthly_rental over the  date_address_from bin date_address_from by time.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC", "binning": "BIN date_address_from BY YEAR"}, "VQL": "Visualize BAR SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "What are the age and hometown of teachers. Visualize by bar chart.", "db_id": "course_teach", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , Age FROM teacher", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , Age FROM teacher"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on what is the total credit does each department offer?, I want to show from low to high by the DEPT_CODE please.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code ORDER BY DEPT_CODE ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code ORDER BY DEPT_CODE ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday, could you show in desc by the Y?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "count services by services, and split by local authorities with a stacked bar chart, and list in desc by the Y.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis away team y axis the number of away team, I want to rank by the y-axis from high to low.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Away_team ORDER BY COUNT(Away_team) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Away_team ORDER BY COUNT(Away_team) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" Plot them as bar chart, and list in desc by the Investor_details please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.Investor_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.Investor_details DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis participant details y axis participant_id, and sort by the y axis in ascending.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Participant_Details , Participant_ID FROM Participants ORDER BY Participant_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Participant_Details , Participant_ID FROM Participants ORDER BY Participant_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  cName and  enr .", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT cName , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Body_Builder_ID and  Total .", "db_id": "body_builder", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Body_Builder_ID , Total FROM body_builder", "binning": ""}, "VQL": "Visualize SCATTER SELECT Body_Builder_ID , Total FROM body_builder"}, "hardness": "Easy"}, {"nl_queries": "A bar graph listing the services and how many services provided by all stations.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services"}, "hardness": "Easy"}, {"nl_queries": "List the number of dogs departed in each day with a bar chart that groups by departed date, and could you show bars in ascending order?", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY date_departed ASC", "binning": ""}, "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY date_departed ASC"}, "hardness": "Medium"}, {"nl_queries": "For players whose occupation is not \"Researcher\", tell me the distribution of their residences with a bar chart, and order bars in desc order.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence ORDER BY Residence DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence ORDER BY Residence DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of manager_id over the  hire_date bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Show the names and the total grades of each high schooler by a bar chart, and could you show by the name in asc?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith', and count them by a bar chart, I want to order in asc by the total number.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are dates of birth of all the guests whose gender is \"Male\", and count them by a bar chart, and list by the y axis in descending.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = \"Male\"  ORDER BY COUNT(date_of_birth) DESC", "binning": "BIN date_of_birth BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = \"Male\"  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What are the names and average prices of products for manufacturers whose products cost on average 150 or more. Show a pie chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the average age for each city and what are those cities?, and order from high to low by the x axis.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY city_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY city_code DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, and show total number in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many different locations does each school have?, order from low to high by the y-axis.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY count(DISTINCT dept_address) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY count(DISTINCT dept_address) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday, and order in desc by the the average of department id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar graph to show minimal enr from different cname, could you display by the X in desc?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart, and could you rank in descending by the total number?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY COUNT(HIRE_DATE) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "List the maximum weight and type for each type of pet. ", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Show me about the change of the average of Employee_ID over  Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, and rank from low to high by the bars.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and order Y in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of department_id bin hire_date by time, and visualize them by a bar chart, show by the Y-axis in ascending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar chart x axis name y axis how many name, and could you sort in ascending by the Y?", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average capacity for rooms in each building? Draw a bar chart, and display bars in asc order.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY building ASC", "binning": ""}, "VQL": "Visualize BAR SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY building ASC"}, "hardness": "Medium"}, {"nl_queries": "A pie chart groups and counts the years played for players from team \"Columbus Crew\".", "db_id": "match_season", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played", "binning": ""}, "VQL": "Visualize PIE SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played"}, "hardness": "Hard"}, {"nl_queries": "For each shop, return the number of employees working there and the name of the shop Plot them as bar chart, list the total number in desc order.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart showing the number of last name for all female students Their sex is F, and sort in asc by the y-axis please.", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY COUNT(LName) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY COUNT(LName) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and department_id in a bar chart, could you rank by the total number in ascending?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "For each record in schedule, show average of the price for each day in a bar chart, and could you order in ascending by the y-axis?", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , AVG(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date ORDER BY AVG(Price) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , AVG(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date ORDER BY AVG(Price) ASC"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, show me about the change of manager_id over hire_date in a line chart, sort by the X-axis in ascending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee", "binning": ""}, "VQL": "Visualize PIE SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and employee_id , list bars from high to low order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and I want to order y-axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "A pie chart shows the proportion of  All_Games and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of name and ID , and rank Y from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "How many dogs each owner has? Return a bar chart that groups by owner's last name, and rank from high to low by the y-axis please.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name ORDER BY COUNT(last_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name ORDER BY COUNT(last_name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for what is the age and hometown of every teacher?, and rank Hometown in asc order.", "db_id": "course_teach", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , Age FROM teacher ORDER BY Hometown ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , Age FROM teacher ORDER BY Hometown ASC"}, "hardness": "Easy"}, {"nl_queries": "Show weight from each name, and list by the y-axis in descending.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Weight FROM people ORDER BY Weight DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Weight FROM people ORDER BY Weight DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for what are the number of the names of the technicians that are assigned to repair machines with more point values than 70?, and sort total number from high to low order please.", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of students who took some course and got A or C and group by last name in a bar chart, I want to show by the y axis in desc.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT STU_LNAME , COUNT(STU_LNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_LNAME ORDER BY COUNT(STU_LNAME) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT STU_LNAME , COUNT(STU_LNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_LNAME ORDER BY COUNT(STU_LNAME) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, find  hire_date and the average of manager_id bin hire_date by weekday, and visualize them by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart about the number of races held in each year after 2014, and rank from low to high by the names.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of  name and the average of code , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name"}, "hardness": "Medium"}, {"nl_queries": "List the dates and vote percents of elections Show bar chart, order by the names in ascending.", "db_id": "election_representative", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , Vote_Percent FROM election ORDER BY Date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , Vote_Percent FROM election ORDER BY Date ASC"}, "hardness": "Easy"}, {"nl_queries": "How many documents are created in each day? Bin the document date by year interval and group by document type description with a group line chart, and show in asc by the X.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY Document_Date ASC", "binning": "BIN Document_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY Document_Date ASC BIN Document_Date BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about the average of Employee_ID over the Is_full_time , and group by attribute Is_full_time, and sort by the Y in desc.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of manufacturer , and group by attribute name in a bar chart, and display from high to low by the x axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of manufacturer , and group by attribute name in a bar chart, and order Y in descending order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Manufacturer DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Manufacturer DESC"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, for manager_id, hire_date, visualize the trend, sort X-axis in asc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart about the distribution of All_Neutral and All_Games_Percent , and could you sort by the x axis in descending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "A pie chart showing the number of companies for each industry.", "db_id": "company_employee", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Industry , COUNT(Industry) FROM company GROUP BY Industry", "binning": ""}, "VQL": "Visualize PIE SELECT Industry , COUNT(Industry) FROM company GROUP BY Industry"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis venue y axis how many venue", "db_id": "debate", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM debate GROUP BY Venue", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM debate GROUP BY Venue"}, "hardness": "Easy"}, {"nl_queries": "Show the names and ids of tourist attractions that are visited at most once, I want to order by the y-axis from high to low.", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Tourist_Attraction_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Tourist_Attraction_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, sort Y-axis in descending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC"}, "hardness": "Hard"}, {"nl_queries": "Scatter. what is the average salary of employees who have a commission percentage that is not null?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT DEPARTMENT_ID , AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT DEPARTMENT_ID , AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id"}, "hardness": "Medium"}, {"nl_queries": "How many races are held in each year after 2014? Show me a bar chart, and list X-axis from low to high order.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For each record in schedule, show sum of price for each day in a bar chart, and I want to order from low to high by the X-axis.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , SUM(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date ORDER BY Date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , SUM(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date ORDER BY Date ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a scatter chart about the correlation between  Credits and  Instructor .", "db_id": "college_3", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Credits , Instructor FROM COURSE ORDER BY Credits", "binning": ""}, "VQL": "Visualize SCATTER SELECT Credits , Instructor FROM COURSE ORDER BY Credits"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, could you display in ascending by the bar please?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart on how many members are in each party?, and display by the X in desc.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Which parts have more than 2 faults? Show the part name and id Plot them as bar chart, and could you sort in desc by the y axis?", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id ORDER BY T1.part_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id ORDER BY T1.part_id DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of the name of rooms booked by some customers whose first name contains ROY.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName", "binning": ""}, "VQL": "Visualize BAR SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName"}, "hardness": "Extra Hard"}, {"nl_queries": "List the names of patients who have made appointments, and count them by a pie chart", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name", "binning": ""}, "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Show the trend about the average of the number of attendance at home games change over the years, bin year into year interval, list by the X-axis in asc please.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , avg(attendance) FROM home_game ORDER BY year ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , avg(attendance) FROM home_game ORDER BY year ASC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions, and could you rank in descending by the X?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a pie chart for what are the proportion of the teams in elimination? ", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show the total number from different address, I want to display names from low to high order.", "db_id": "coffee_shop", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Address , count(*) FROM member GROUP BY address ORDER BY Address ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Address , count(*) FROM member GROUP BY address ORDER BY Address ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of each ship type? Give me a bar chart, and list Type in desc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the names of the singers who performed in a concert in 2014?, could you sort by the bar in descending please?", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart about the distribution of meter_500 and ID , rank by the ID in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, order by the bar in descending.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_300 and ID in a bar chart, and show in descending by the meter_300.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Compute the total population across county name as a pie chart.", "db_id": "election", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT County_name , Population FROM county", "binning": ""}, "VQL": "Visualize PIE SELECT County_name , Population FROM county"}, "hardness": "Easy"}, {"nl_queries": "How many captains are in each rank. Visualize by pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "Show each state and the number of addresses in each state by a bar chart.", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county", "binning": ""}, "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart on how many students participated in tryouts for each college by descennding count?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize PIE SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show how many professionals in a bar chart grouping by professional's first name, and could you show y axis in ascending order please?", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name ORDER BY COUNT(first_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name ORDER BY COUNT(first_name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Just show the employee's last name and their department's id using a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , DEPARTMENT_ID FROM employees", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees"}, "hardness": "Easy"}, {"nl_queries": "Show different builders of railways, along with the corresponding number of railways using each builder by a bar chart.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder"}, "hardness": "Easy"}, {"nl_queries": "For continents that have an average life expectancy less than 72, shows their average life expectancy with a pie chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize PIE SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "Show all origins and the number of flights from each origin. Plot them as pie chart.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT origin , count(*) FROM Flight GROUP BY origin", "binning": ""}, "VQL": "Visualize PIE SELECT origin , count(*) FROM Flight GROUP BY origin"}, "hardness": "Easy"}, {"nl_queries": "For those products with a price between 60 and 120, draw a bar chart about the distribution of name and manufacturer , and I want to sort from high to low by the total number.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?, and could you order in ascending by the Y?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "I want to see trend of the number of date of notes by date of notes, order X in descending order.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes  ORDER BY date_of_notes DESC", "binning": "BIN date_of_notes BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes  ORDER BY date_of_notes DESC BIN date_of_notes BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Time and meter_100 , list bars in descending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and could you list in descending by the x axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of the description of all aircrafts.", "db_id": "aircraft", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description", "binning": ""}, "VQL": "Visualize PIE SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description"}, "hardness": "Easy"}, {"nl_queries": "Show me about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart, and display in ascending by the X.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Sum the average prices of wines for different years, and bin year attribute into weekday interval for a bar chart, I want to list by the total number from high to low.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many regions were affected by each storm?, and I want to list in asc by the y-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what are the apartment number and the room count of each apartment?", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT apt_number , room_count FROM Apartments", "binning": ""}, "VQL": "Visualize BAR SELECT apt_number , room_count FROM Apartments"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart about the number of races held in each year after 2014, and I want to list y axis from low to high order please.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY COUNT(year) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY COUNT(year) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and calculate the average the share count for each bin. Visualize the result using a trend line.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, and I want to sort x axis from high to low order.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"  ORDER BY year DESC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"  ORDER BY year DESC BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart for how many orchestras does each record company manage?, could you list by the x-axis in desc please?", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, a line chart shows the trend of salary over hire_date , and rank from high to low by the x axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a pie chart with what are the nationalities and the total ages of journalists?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, display total number from high to low order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(EMPLOYEE_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Show the total number from each payment method code, and I want to show y-axis in ascending order.", "db_id": "driving_school", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of professors with a PhD degree in each department Show bar chart, I want to display by the Y from low to high.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between  code and  price , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Code , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Code , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday, rank by the y-axis in asc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(EMPLOYEE_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show the card type codes and the number of transactions with a bar chart, could you order Y in ascending order?", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis away team y axis the number of away team, and show by the X-axis in desc.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Away_team ORDER BY Away_team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Away_team ORDER BY Away_team DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the names and account balances of customers with the letter 'a' in their names?, and list y axis in ascending order.", "db_id": "loan_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY acc_bal ASC", "binning": ""}, "VQL": "Visualize BAR SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY acc_bal ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of enrolment students in each day and bin date of enrolment by weekday with a bar chart, and could you show Y-axis in descending order?", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC", "binning": "BIN date_of_enrolment BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For all artist names who are not from the United States, show the total number of each year, show in asc by the Y.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and show by the JOB_ID in descending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the smallest enrollment of each state using a bar chart, order in ascending by the X-axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "How many players are injured in each day? Show a bar chart.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id GROUP BY Date", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id GROUP BY Date"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the average of weight of each pettype, I want to order from low to high by the Y-axis.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of  hire_date and the average of department_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Please use a bar chart to show the average price of the rooms in a different decor, and sort from low to high by the X please.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC", "binning": ""}, "VQL": "Visualize BAR SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex, and I want to order by the total number from high to low.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY AVG(Weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY AVG(Weight) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many document type for different document type description? Visualize with a pie chart.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description", "binning": ""}, "VQL": "Visualize PIE SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description"}, "hardness": "Easy"}, {"nl_queries": "Visualize the title and their total smallest ratings of the movie using a bar chart, sort from low to high by the bars.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart about the distribution of meter_300 and ID , and rank X-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "What are the destinations and number of flights to each one Visualize by bar chart, and I want to sort from low to high by the y-axis.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT destination , count(*) FROM Flight GROUP BY destination ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT destination , count(*) FROM Flight GROUP BY destination ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For events that have more than one participant, count the event details for a bar chart, and I want to show in desc by the Event_Details please.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Event_Details , COUNT(Event_Details) FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY Event_Details ORDER BY Event_Details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY Event_Details ORDER BY Event_Details DESC"}, "hardness": "Hard"}, {"nl_queries": "List the number of the description of all aircrafts, and could you display from low to high by the total number?", "db_id": "aircraft", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description ORDER BY COUNT(Description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description ORDER BY COUNT(Description) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find  meter_400 and  ID , and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show how many committee from each committee, I want to sort names in desc order.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Committee , COUNT(Committee) FROM election GROUP BY Committee ORDER BY Committee DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Committee , COUNT(Committee) FROM election GROUP BY Committee ORDER BY Committee DESC"}, "hardness": "Medium"}, {"nl_queries": "Scatter chart. how many residents does each property have? List property id and resident count.", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.property_id , count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.property_id , count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id"}, "hardness": "Medium"}, {"nl_queries": "For each party, use a bar chart to show the number of its delegates, show from high to low by the x axis.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Party , COUNT(T2.Party) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY T2.Party DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Party , COUNT(T2.Party) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY T2.Party DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, list by the x axis from high to low.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Year interval, sort from high to low by the the number of date moved in.", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) DESC", "binning": "BIN date_moved_in BY YEAR"}, "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "How many students are living in a dorm with a TV Lounge? Show a bar chart grouping by first name, and I want to display y-axis from high to low order please.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge') GROUP BY Fname ORDER BY COUNT(Fname) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge') GROUP BY Fname ORDER BY COUNT(Fname) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "List the number of documents for each receipt date and bin by year with a line chart.", "db_id": "cre_Doc_Control_Systems", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT receipt_date , COUNT(receipt_date) FROM Documents", "binning": "BIN receipt_date BY YEAR"}, "VQL": "Visualize LINE SELECT receipt_date , COUNT(receipt_date) FROM Documents BIN receipt_date BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, I want to rank by the X-axis from low to high.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Select the name of each manufacturer along with the price of its most expensive product using a bar chart, rank Name in ascending order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , max(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , max(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about  gender_mf over the  middle_name .", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT middle_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize BAR SELECT middle_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_600 and meter_100 , and rank by the Y in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me the proportion of the flag of ships that are not steered by any captain with Midshipman rank using a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag", "binning": ""}, "VQL": "Visualize PIE SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of area of each area, display by the x-axis in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC"}, "hardness": "Medium"}, {"nl_queries": "For those female students with age is older than 18 who are not majoring in 600, tell me how many students of different first names using a bar chart, rank by the how many fname in desc please.", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) DESC"}, "hardness": "Hard"}, {"nl_queries": "Pie chart. what are the names and ids of all makers with more than 3 models?", "db_id": "car_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT FullName , Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker", "binning": ""}, "VQL": "Visualize PIE SELECT FullName , Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker"}, "hardness": "Easy"}, {"nl_queries": "A bar chart showing the number of tourist attractions for each attraction name, and order y-axis from high to low order please.", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all the actual delivery dates and bin by year in a line chart, and I want to display from high to low by the X-axis.", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM BOOKINGS  ORDER BY Actual_Delivery_Date DESC", "binning": "BIN Actual_Delivery_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM BOOKINGS  ORDER BY Actual_Delivery_Date DESC BIN Actual_Delivery_Date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "List the state names and the number of customers living in each state with a bar chart, order by the bars from low to high please.", "db_id": "customer_deliveries", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state_province_county , count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id = t2.address_id GROUP BY t2.state_province_county ORDER BY state_province_county ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id = t2.address_id GROUP BY t2.state_province_county ORDER BY state_province_county ASC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis meter 600 y axis id, show by the X from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and All_Games_Percent , order by the bars from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, and rank x-axis in descending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of manufacturer , and group by attribute name, list in descending by the bars.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, and order by the X in ascending.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY date_of_completion ASC", "binning": ""}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY date_of_completion ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "List the number of documents for each document description in a bar chart.", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description"}, "hardness": "Easy"}, {"nl_queries": "For employees with first names that end with the letter m, give me a bar chart to show their total salary, and could you sort by the total number in ascending please?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY SUM(SALARY) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY SUM(SALARY) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart, show by the X in asc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday, and sort Y from low to high order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "For each id of a driver who participated in at most 30 races, how many races did they participate in. Plot them as scatter chart.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.driverId , count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.driverId , count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for giveing me the number of the dates when the max temperature was higher than 85, and could you list y axis in ascending order please?", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC", "binning": "BIN date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a scatter chart about the correlation between  employee_id and  manager_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": ""}, "VQL": "Visualize SCATTER SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40"}, "hardness": "Medium"}, {"nl_queries": "Draw a scatter chart about the correlation between  student_id and  address_id , and group by attribute other_details.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT student_id , address_id FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC", "binning": ""}, "VQL": "Visualize SCATTER SELECT student_id , address_id FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for room_count of each apt number, and order in descending by the y-axis.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT apt_number , room_count FROM Apartments ORDER BY room_count DESC", "binning": ""}, "VQL": "Visualize BAR SELECT apt_number , room_count FROM Apartments ORDER BY room_count DESC"}, "hardness": "Easy"}, {"nl_queries": "List the number of games for each away team and group by home team in a stacked bar chart. The x-axis is away team.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Home_team ,  Away_team", "binning": ""}, "VQL": "Visualize BAR SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Home_team ,  Away_team"}, "hardness": "Hard"}, {"nl_queries": "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, display in asc by the bars.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY organisation_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY organisation_details ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of the order dates of the orders with price above 1000.", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Order_Date , COUNT(Order_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000", "binning": "BIN Order_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Order_Date , COUNT(Order_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000 BIN Order_Date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What is the average base price of rooms, for each bed type Plot them as bar chart, and order by the bedType in desc.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the weekday of birth of professors teaching course ACCT-211? Show a bar chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMP_DOB , COUNT(EMP_DOB) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = \"ACCT-211\"", "binning": "BIN EMP_DOB BY WEEKDAY"}, "VQL": "Visualize BAR SELECT EMP_DOB , COUNT(EMP_DOB) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = \"ACCT-211\" BIN EMP_DOB BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For the dates of transactions with amount smaller than 3000, bin the date into year interval, and draw a line chart to show the trend of the number of records in each bin, and order by the x-axis in desc please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show different citizenships and the maximum net worth of singers of each citizenship in a bar chart, I want to display y axis from low to high order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) ASC"}, "hardness": "Easy"}, {"nl_queries": "Show the number of courses each instructor taught in a stacked bar chart. The x-axis is the instructor's first name and group by course code.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY CRS_CODE ,  EMP_FNAME", "binning": ""}, "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY CRS_CODE ,  EMP_FNAME"}, "hardness": "Hard"}, {"nl_queries": "You can return a bar chart to show the employees' first name and the corresponding manager's id, and rank total number in ascending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , MANAGER_ID FROM employees ORDER BY MANAGER_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees ORDER BY MANAGER_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "For each record in schedule, show the number of films for each day in a bar chart, and show from low to high by the bar please.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date ORDER BY Date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date ORDER BY Date ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart for all_games_percent of each team name, and list in descending by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of destination versus the total number, sort by the x-axis in asc.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT destination , count(*) FROM Flight GROUP BY destination ORDER BY destination ASC", "binning": ""}, "VQL": "Visualize BAR SELECT destination , count(*) FROM Flight GROUP BY destination ORDER BY destination ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_700 and meter_100 in a bar chart, and sort Y-axis from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Count the hometown by hometown using a bar chart, and show by the bars in ascending.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average age for each gender of student? Return a bar chart, and show x-axis in desc order.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , avg(age) FROM student GROUP BY sex ORDER BY Sex DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , avg(age) FROM student GROUP BY sex ORDER BY Sex DESC"}, "hardness": "Medium"}, {"nl_queries": "A scatter chart shows the correlation between  People_ID and  Height .", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT People_ID , Height FROM people", "binning": ""}, "VQL": "Visualize SCATTER SELECT People_ID , Height FROM people"}, "hardness": "Easy"}, {"nl_queries": "For each denomination, return the denomination and the count of schools with that denomination Visualize by bar chart, order X-axis in desc order.", "db_id": "school_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY Denomination DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY Denomination DESC"}, "hardness": "Medium"}, {"nl_queries": "A stacked bar chart showing the number of faults for different fault short name and skills required to fix them The x-axis is falut short name and group by skill description, and sort y axis in desc order.", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT fault_short_name , COUNT(fault_short_name) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ,  fault_short_name ORDER BY COUNT(fault_short_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT fault_short_name , COUNT(fault_short_name) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ,  fault_short_name ORDER BY COUNT(fault_short_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos. Show bar chart.", "db_id": "mountain_photos", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between  code and  manufacturer , and group by attribute founder.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Code , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Code , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder"}, "hardness": "Medium"}, {"nl_queries": "Show me about the correlation between  School_ID and  All_Games_Percent  in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show the number of fate from each fate", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, give me the comparison about the sum of employee_id over the  job_id , and group by attribute job_id by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the average salary for each job title Show bar chart, order from low to high by the Y-axis please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_TITLE , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title ORDER BY AVG(salary) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_TITLE , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title ORDER BY AVG(salary) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of revenue , and group by attribute name, and could you show bars in descending order?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, list by the y-axis in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a line chart about the change of  employee_id over  hire_date .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the countries having at least one car maker? List name and id Visualize by bar chart, show in descending by the y axis.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryId DESC", "binning": ""}, "VQL": "Visualize BAR SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryId DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of services of each services, sort in ascending by the services.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and employee_id , and visualize them by a bar chart, and rank X-axis in descending order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the ids and details for all organizations that have grants of more than 6000 dollars. Show bar chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "Return the average age of captains in each class, and rank from low to high by the X.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, draw a bar chart about the distribution of  hire_date and the sum of manager_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart, and list by the Y from high to low.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) DESC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show names of technicians and the number of machines they are assigned to repair Visualize by bar chart, and sort by the total number in asc.", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show weight from each name, and display by the X-axis from low to high.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Weight FROM people ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Weight FROM people ORDER BY Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Show all role codes and the number of employees in each role by a bar chart, and sort by the the total number from high to low.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of invoices from the US, grouped by state by a bar chart, show by the Y-axis from low to high.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who did not have any job in the past, a line chart shows the trend of manager_id over hire_date , and I want to display by the X-axis from high to low.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all template type codes and the number of documents using each type. ", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code", "binning": ""}, "VQL": "Visualize PIE SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code"}, "hardness": "Medium"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Road and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "List the first name of the students who do not have any food type allergy and count them in a bar chart, I want to order from high to low by the Y-axis.", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , COUNT(Fname) FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = \"food\") GROUP BY Fname ORDER BY COUNT(Fname) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = \"food\") GROUP BY Fname ORDER BY COUNT(Fname) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the name and account balance of the customer whose name includes the letter \u2018a\u2019 Visualize them using a bar chart, and order by the y-axis in ascending please.", "db_id": "loan_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY acc_bal ASC", "binning": ""}, "VQL": "Visualize BAR SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY acc_bal ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and manufacturer , and group by attribute founder in a bar chart, I want to list in descending by the Y.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Manufacturer DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Manufacturer DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the relationship between minimum and maximum gpa of all students with a scatter chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT max(stu_gpa) , min(stu_gpa) FROM student", "binning": ""}, "VQL": "Visualize SCATTER SELECT max(stu_gpa) , min(stu_gpa) FROM student"}, "hardness": "Easy"}, {"nl_queries": "Pie. how many rooms cost more than 120, for each different decor?", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor", "binning": ""}, "VQL": "Visualize PIE SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor"}, "hardness": "Medium"}, {"nl_queries": "Count different addresses of each school. Show bar chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department", "binning": ""}, "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of  last_name and  salary .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "Can you show a bar chart to visualize the number of carriers?, and I want to display in ascending by the x-axis.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of code , and group by attribute name, and could you show x axis in asc order?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart of acc_percent from each all neutral, and display by the Y-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show the trend about the average of the number of attendance at home games change over the years, bin year into year interval.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , avg(attendance) FROM home_game", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , avg(attendance) FROM home_game BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and code , I want to sort in ascending by the y axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis date in location from y axis the number of date in location from, and order by the total number in desc please.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) DESC", "binning": "BIN Date_in_Location_From BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) DESC BIN Date_in_Location_From BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Find the number of trains starting from each origin Plot them as bar chart, I want to rank in descending by the the total number .", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM train GROUP BY origin ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and id of courses having at most 2 sections, and I want to display in desc by the x-axis please.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday, and I want to show by the total number of manager id in descending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time, and sort in ascending by the total number.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(EMPLOYEE_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Find all the ids and dates of the logs for the problem whose id is 10 Plot them as bar chart, and list in descending by the Y-axis please.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY problem_log_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY problem_log_id DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops, display names from low to high order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for total number of school id of each all home, and display in asc by the bars please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, show me about the correlation between  salary and  manager_id  in a scatter chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT SALARY , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": ""}, "VQL": "Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about the sum of monthly_rental over the  date_address_from , and group by attribute other_details and bin date_address_from by weekday by a bar chart.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC", "binning": "BIN date_address_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id, and could you display in asc by the X?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the average age of all students living in the each city Show bar chart, sort X from low to high order.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY city_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY city_code ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of manager_id over the hire_date bin hire_date by time, and list Y in descending order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the nationalities and their average ages of journalists?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  author_tutor_ATB and  gender_mf  in a scatter chart.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT author_tutor_ATB , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize SCATTER SELECT author_tutor_ATB , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "Find the status of orders which belong to the customer named \"Jeramie\", group by order status, and count them. Show the result with a bar chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.order_status , COUNT(T2.order_status) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" GROUP BY order_status", "binning": ""}, "VQL": "Visualize BAR SELECT T2.order_status , COUNT(T2.order_status) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" GROUP BY order_status"}, "hardness": "Hard"}, {"nl_queries": "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by year interval in a bar chart, could you rank x-axis in ascending order?", "db_id": "customers_and_invoices", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'  ORDER BY date_account_opened ASC", "binning": "BIN date_account_opened BY YEAR"}, "VQL": "Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'  ORDER BY date_account_opened ASC BIN date_account_opened BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of salary over the  hire_date bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Just show the id and name of each editor using a bar chart, order by the y axis in ascending.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Editor_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Editor_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the amount of job_id , and group by attribute job_id, and visualize them by a bar chart, and I want to list x axis in asc order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize the total smallest rating of different movie title using a bar chart.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title", "binning": ""}, "VQL": "Visualize BAR SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title"}, "hardness": "Medium"}, {"nl_queries": "What is the average rating of songs for each language. Plot them as bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about  employee_id over the  email .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of  hire_date and the sum of manager_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between  code and  revenue .", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for the total number of each position, show the total number in asc order.", "db_id": "match_season", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each policy type, return its type code and its count in the record Visualize by bar chart, and order from high to low by the X please.", "db_id": "insurance_and_eClaims", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Policy_Type_Code , count(*) FROM policies GROUP BY policy_type_code ORDER BY Policy_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Policy_Type_Code , count(*) FROM policies GROUP BY policy_type_code ORDER BY Policy_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "How many documents for each document description? Show me a bar chart, list total number in ascending order.", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the names of products with price at most 200?, and rank by the X from low to high.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a scatter chart for what are the grade number and classroom number of each class in the list?", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Classroom , Grade FROM list", "binning": ""}, "VQL": "Visualize SCATTER SELECT Classroom , Grade FROM list"}, "hardness": "Easy"}, {"nl_queries": "Show all party names and the number of members in each party Show bar chart, and rank in desc by the y-axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "List the maximum weight and type for each type of pet with a bar chart, and I want to list in desc by the x-axis.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType DESC"}, "hardness": "Easy"}, {"nl_queries": "Show all sport name and the number of students in a bar chart, sort from high to low by the Y.", "db_id": "game_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a pie chart about the proportion of  ACC_Regular_Season and  School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Use a group line chart to show how many competitions are held in each year, group by official name and bin by year, and show by the Year in ascending.", "db_id": "farm", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY Official_Name ORDER BY Year ASC", "binning": "BIN Year BY YEAR"}, "VQL": "Visualize LINE SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY Official_Name ORDER BY Year ASC BIN Year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "How many faculty members participate in each activity? Return the activity names and the number of faculty members. Show bar chart.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID", "binning": ""}, "VQL": "Visualize BAR SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Start_from and the amount of Start_from bin start_from by weekday, and list in asc by the y axis.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter in a bar chart, order bar from low to high order please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who did not have any job in the past, return a bar chart about the distribution of  job_id and the sum of salary , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id, and show X-axis in asc order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis all games y axis acc_percent, order by the ACC_Percent in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "What is the proportion of average weights for each sex?", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Sex , avg(weight) FROM people GROUP BY sex", "binning": ""}, "VQL": "Visualize PIE SELECT Sex , avg(weight) FROM people GROUP BY sex"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram for how many singers are from each country?, and sort the total number in desc order.", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of Team_Name and Team_ID in a bar chart, I want to list in descending by the bar please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, list in desc by the Y.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY SUM(Manufacturer) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY SUM(Manufacturer) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the category descriptions of the products whose descriptions include letter 't', and count them by a pie chart", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize PIE SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of customer address history for each city in a bar chart, and could you order from low to high by the Y?", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city ORDER BY COUNT(T3.city) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city ORDER BY COUNT(T3.city) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, rank by the the average of department id from high to low.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(DEPARTMENT_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Show all document ids and the number of paragraphs in each document. Order by document id. Visualize by scatter chart.", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Document_ID , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT Document_ID , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id"}, "hardness": "Medium"}, {"nl_queries": "How many the artists who produced the top three highly rated songs of each country? Show the result using a pie chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize PIE SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the names and account balances of customers with the letter a in their names, order by the x-axis in descending.", "db_id": "loan_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY cust_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY cust_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, and display Y from low to high order please.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC", "binning": "BIN date_of_completion BY MONTH"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "For those products with a price between 60 and 120, give me a pie chart to reflect the proportion of  name and  price.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of  name and the sum of code , and group by attribute name in a bar chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, and I want to sort by the how many job id from high to low.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me line charts of worldwide gross total number of shop id over year start from by major genres Is_full_time, and display from high to low by the x axis.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the number of entry descriptions of each problem?, and order by the x axis in ascending.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the headquarter , and group by attribute headquarter, and order Y-axis in desc order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Manufacturer) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Manufacturer) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me the correlation about how many companies operates airlines in each airport?", "db_id": "flight_company", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.id , count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id JOIN airport AS T3 ON T2.airport_id = T3.id GROUP BY T3.id", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.id , count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id JOIN airport AS T3 ON T2.airport_id = T3.id GROUP BY T3.id"}, "hardness": "Medium"}, {"nl_queries": "A scatter chart shows the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the amount of name , and group by attribute name, and could you order in asc by the y-axis?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the code of each role and the number of employees in each role Show bar chart, and I want to show by the x axis in desc please.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of services by services with a bar graph.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services"}, "hardness": "Easy"}, {"nl_queries": "Find the number of courses offered by Psychology department in each year with a group line chart grouping by semester.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ORDER BY T1.title", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ORDER BY T1.title BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Can you draw a bar chart to show the number of items in each customer details category?, list in desc by the names.", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details ORDER BY customer_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details ORDER BY customer_details DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many hours do the students spend studying in each department?, and could you display by the bar in ascending?", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code ORDER BY DEPT_CODE ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code ORDER BY DEPT_CODE ASC"}, "hardness": "Medium"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, shows the correlation between average life expectancy and total population with a scatter plot.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "Find the number of matches in different competitions. Visualize by bar chart.", "db_id": "city_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition , count(*) FROM MATCH GROUP BY Competition", "binning": ""}, "VQL": "Visualize BAR SELECT Competition , count(*) FROM MATCH GROUP BY Competition"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart, could you show in desc by the total number?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(SALARY) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(SALARY) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What is the country of origin of the artist who is female and produced a song in Bangla, and count them by a bar chart", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country"}, "hardness": "Hard"}, {"nl_queries": "Show the average age for all female students and group them by first name in a bar chart, and display x axis in desc order please.", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY Fname DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY Fname DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the name and membership level of the visitors whose membership level is higher than 4. Plot them as pie chart.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for finding the number of the physicians who are trained in a procedure that costs more than 5000, and list x axis from low to high order please.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY T1.Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Scatter. what are the different statement ids on accounts, and the number of accounts for each?", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Statement_ID , count(*) FROM Accounts GROUP BY STATEMENT_ID", "binning": ""}, "VQL": "Visualize SCATTER SELECT Statement_ID , count(*) FROM Accounts GROUP BY STATEMENT_ID"}, "hardness": "Easy"}, {"nl_queries": "Show me the proportion on what are 3 most highly rated episodes in the TV series table and what were those ratings?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize PIE SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of  login_name and  author_tutor_ATB .", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT login_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize BAR SELECT login_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "Tell me the distribution of the number of trains at each arrival time with a bar chart, rank bar in ascending order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type in a bar chart, and rank Type in descending order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the apartment number and the room count of each apartment?, and rank by the Y-axis from high to low.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT apt_number , room_count FROM Apartments ORDER BY room_count DESC", "binning": ""}, "VQL": "Visualize BAR SELECT apt_number , room_count FROM Apartments ORDER BY room_count DESC"}, "hardness": "Easy"}, {"nl_queries": "How many courses are in the Psychology department for each year? Return a line chart, and display from low to high by the x axis.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'  ORDER BY year ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'  ORDER BY year ASC BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the correlation between  code and  revenue  in a scatter chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code"}, "hardness": "Easy"}, {"nl_queries": "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a line chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Give the name of each department and the number of employees in each in a bar chart, and show in desc by the bar.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPARTMENT_NAME , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name ORDER BY DEPARTMENT_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPARTMENT_NAME , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name ORDER BY DEPARTMENT_NAME DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for what is the name of each aircraft and how many flights does each one complete?, and rank in asc by the bar.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me about the correlation between  Instructor and  DNO  in a scatter chart.", "db_id": "college_3", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Instructor , DNO FROM COURSE ORDER BY Credits", "binning": ""}, "VQL": "Visualize SCATTER SELECT Instructor , DNO FROM COURSE ORDER BY Credits"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?, and could you order by the name from high to low?", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name DESC"}, "hardness": "Hard"}, {"nl_queries": "Find Start_from and the amount of Start_from bin start_from by weekday, and visualize them by a bar chart, and list by the how many start from in asc.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "How many departments are built in each year? Group by creation time in a line chart.", "db_id": "department_management", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Creation , COUNT(Creation) FROM department GROUP BY Creation", "binning": ""}, "VQL": "Visualize LINE SELECT Creation , COUNT(Creation) FROM department GROUP BY Creation"}, "hardness": "Easy"}, {"nl_queries": "Give me the number of the dates when the max temperature was higher than 85.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date", "binning": ""}, "VQL": "Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date"}, "hardness": "Medium"}, {"nl_queries": "Show the average price of the rooms in different decor using a bar chart, list in ascending by the the average of baseprice.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY avg(basePrice) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY avg(basePrice) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of captains with different classes using a bar graph, and I want to order by the x axis from high to low.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and the amount of name , and group by attribute name in a bar chart, and display y-axis in desc order please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many captains with younger than 50 are in each rank, display by the the total number from high to low.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, and show by the bars from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute name, sort by the Y in asc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Code ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the first names and ids for customers who have two or more accounts, and show by the y axis in asc please.", "db_id": "customers_and_invoices", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.customer_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.customer_id ASC"}, "hardness": "Medium"}, {"nl_queries": "For those dates with a max temperature greater than or equal to 80, I want to see the number of days for each year using a bar chart, rank by the y axis in desc.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC", "binning": "BIN date BY YEAR"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC BIN date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, list by the bar in descending please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart of date moved in versus how many date moved in, and sort x axis from high to low order.", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in ORDER BY date_moved_in DESC", "binning": ""}, "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in ORDER BY date_moved_in DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis color y axis the number of color, sort in ascending by the x-axis please.", "db_id": "mountain_photos", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color ASC", "binning": ""}, "VQL": "Visualize BAR SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by name.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1"}, "hardness": "Easy"}, {"nl_queries": "Show all the ranks and the number of male and female faculty for each rank in a bar chart.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM Faculty GROUP BY Sex ,  Rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM Faculty GROUP BY Sex ,  Rank"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the sum of manufacturer , and group by attribute founder, could you order by the x axis in desc please?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday, order by the total number in ascending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY COUNT(HIRE_DATE) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "How many courses each teacher taught? Show me a stacked bar chart The x-axis is the teacher's first name and group by course description, and order in descending by the bars.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY EMP_FNAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY EMP_FNAME DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of  job_id and the average of salary , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID"}, "hardness": "Hard"}, {"nl_queries": "Use a bar chart to show the number of delegates in each county, and show by the y axis in desc.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County_name , COUNT(County_name) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY County_name ORDER BY COUNT(County_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County_name , COUNT(County_name) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY County_name ORDER BY COUNT(County_name) DESC"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of  hire_date and the average of department_id bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar graph to show the number of directed by from different directed by, show Directed_by in asc order.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Directed_by , COUNT(Directed_by) FROM film GROUP BY Directed_by ORDER BY Directed_by ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Directed_by , COUNT(Directed_by) FROM film GROUP BY Directed_by ORDER BY Directed_by ASC"}, "hardness": "Medium"}, {"nl_queries": "Group and count the name attribute for visualizing a bar chart, and display total number in asc order.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of wins the team Boston Red Stockings got in the postseasons each year in history. Show the tendency.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' GROUP BY T1.year", "binning": ""}, "VQL": "Visualize LINE SELECT year , count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' GROUP BY T1.year"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?, and sort from low to high by the the number of title.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the last_name , list by the X-axis in desc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the date and id of the transcript with at least 2 courses listed?, show by the transcript_date in asc.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC"}, "hardness": "Medium"}, {"nl_queries": "Show aircraft names and number of flights for each aircraft, and show by the name in desc.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those products with a price between 60 and 120, find name and code , and visualize them by a bar chart, and list in desc by the Y please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code DESC"}, "hardness": "Medium"}, {"nl_queries": "When do all the researcher role staff start to work? Bin the time into YEAR interval and count them with a line chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff", "binning": "BIN date_from BY YEAR"}, "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, find job_id and the sum of salary , and group by attribute job_id, and visualize them by a bar chart, rank in asc by the y axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of  hire_date and the sum of department_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show the sum of account details for different statement details in a bar chart, and I want to list by the bar in desc.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Statement_Details , SUM(Account_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details ORDER BY Statement_Details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Statement_Details , SUM(Account_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details ORDER BY Statement_Details DESC"}, "hardness": "Hard"}, {"nl_queries": "How many departments are in each school Show bar chart, and could you list by the x-axis from high to low?", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department ORDER BY SCHOOL_CODE DESC", "binning": ""}, "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department ORDER BY SCHOOL_CODE DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order from low to high by the X please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the  hire_date bin hire_date by time by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of  phone_number and  salary .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday by a bar chart, and order in desc by the total number of manager id please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, show me about the correlation between  commission_pct and  department_id  in a scatter chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'", "binning": ""}, "VQL": "Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'"}, "hardness": "Easy"}, {"nl_queries": "Show different teams of technicians and the number of technicians in each team with a bar chart, and order Y in ascending order.", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM technician GROUP BY Team ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM technician GROUP BY Team ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show how many cinemas open for each year in a line chart, show X-axis in descending order.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Openning_year , COUNT(Openning_year) FROM cinema  ORDER BY Openning_year DESC", "binning": "BIN Openning_year BY YEAR"}, "VQL": "Visualize LINE SELECT Openning_year , COUNT(Openning_year) FROM cinema  ORDER BY Openning_year DESC BIN Openning_year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "What is the number of names for each product in the store?, and sort by the Name in descending.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM products GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM products GROUP BY Name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "What is minimum hours of the students playing in different position. Show the proportion.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos", "binning": ""}, "VQL": "Visualize PIE SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos"}, "hardness": "Easy"}, {"nl_queries": "Just show the employee's last name and their department's id using a bar chart, and display by the x-axis from high to low please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , DEPARTMENT_ID FROM employees ORDER BY LAST_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees ORDER BY LAST_NAME DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar graph to visualize the average age for each pet type, order X in ascending order please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of customers that use email as the contact channel and group by customer name and bin active date by weekday in a stacked bar chart, sort in descending by the y-axis please.", "db_id": "customers_and_addresses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) DESC", "binning": "BIN active_from_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) DESC BIN active_from_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": ", I want to list by the bars from low to high please.", "db_id": "entertainment_awards", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the minimum price of the rooms for each different decor? Show me a bar chart!, rank by the X in ascending.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC", "binning": ""}, "VQL": "Visualize BAR SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what is the average high temperature for each day of week?, and sort from low to high by the total number please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute name in a bar chart, sort Name from high to low order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart to show the names and revenue of the company that earns the highest revenue in each headquarter city.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , max(revenue) FROM manufacturers GROUP BY Headquarter", "binning": ""}, "VQL": "Visualize BAR SELECT Name , max(revenue) FROM manufacturers GROUP BY Headquarter"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram for what are the names and ids of the tourist attractions that are visited at most once?, and sort Name in asc order.", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the proportion on what are the ids and names of the battles that led to more than 10 people killed in total.", "db_id": "battle_death", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.name , T1.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id", "binning": ""}, "VQL": "Visualize PIE SELECT T1.name , T1.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the total number of the last year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, bin the last year into weekday interval, and count the first year, and rank y-axis from high to low order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(Last_year) DESC", "binning": "BIN Last_year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(Last_year) DESC BIN Last_year BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday, display Y-axis from low to high order.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis mean meter 100, rank from low to high by the bars.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "How many apartment bookings in each weekday? Show me a bar chart binning booking end date by weekday.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings", "binning": "BIN booking_end_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings BIN booking_end_date BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum weight for each type of pet List the maximum weight and pet type Visualize by bar chart, rank in descending by the maximal weight.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) DESC"}, "hardness": "Easy"}, {"nl_queries": " Count the last year of parties with theme \"Spring\" or \"Teqnology\" with a bar grpah.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year", "binning": ""}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and rank by the Y in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops, and could you sort Y from high to low order?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart showing the sum of capacity of cinemas open for each year, rank by the X from low to high please.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Openning_year , SUM(Capacity) FROM cinema GROUP BY Openning_year ORDER BY Openning_year ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Openning_year , SUM(Capacity) FROM cinema GROUP BY Openning_year ORDER BY Openning_year ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of the facility codes of apartments with more than 4 bedrooms, and could you show by the Y in asc?", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY COUNT(facility_code) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY COUNT(facility_code) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Use a pie chart to show the number of delegates in each county.", "db_id": "election", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT County_name , COUNT(County_name) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY County_name", "binning": ""}, "VQL": "Visualize PIE SELECT County_name , COUNT(County_name) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY County_name"}, "hardness": "Medium"}, {"nl_queries": "How many players are there for each hand type Visualize by bar chart, sort by the x-axis in ascending.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Games , and show in asc by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Road, and show from high to low by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose first name does not contain the letter M, give me a line chart to show the hire date and the corresponding salaries, display by the x-axis in desc please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the average number of attendance at home games for each year Plot them as line chart, and could you display year in desc order?", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , avg(attendance) FROM home_game GROUP BY YEAR ORDER BY year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT year , avg(attendance) FROM home_game GROUP BY YEAR ORDER BY year DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for finding the number of the names of catalog entries with level number 8, display Y-axis in ascending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "what are the countries having at least one car maker? List name and id, and show in descending by the y axis.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryId DESC", "binning": ""}, "VQL": "Visualize BAR SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryId DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different job titles for all those jobs in department 80 using a bar chart, show y-axis in descending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE ORDER BY COUNT(JOB_TITLE) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE ORDER BY COUNT(JOB_TITLE) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar graph to show sum revenue from different name, and show from high to low by the x axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(revenue) FROM manufacturers GROUP BY name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(revenue) FROM manufacturers GROUP BY name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, could you display Y-axis in ascending order?", "db_id": "medicine_enzyme_interaction", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name, and rank Name from low to high order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart about the distribution of Is_full_time and the average of Employee_ID , and group by attribute Is_full_time, display by the x-axis in desc.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, for manager_id, hire_date, visualize the trend, could you list x axis in ascending order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the id and details for the investors who have the top 3 number of transactions in a pie chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3", "binning": ""}, "VQL": "Visualize PIE SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3"}, "hardness": "Hard"}, {"nl_queries": "Show the number of companies in each headquarter with a pie chart.", "db_id": "gas_company", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters", "binning": ""}, "VQL": "Visualize PIE SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters"}, "hardness": "Easy"}, {"nl_queries": "Compare all countries with a bar chart.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "List the name of technicians whose team is not \"NYY\", and count them by a bar chart, rank x axis in ascending order.", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM technician WHERE Team != \"NYY\" GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != \"NYY\" GROUP BY Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of courses that have two prerequisites for each title in a bar chart, could you rank names in descending order?", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title DESC", "binning": ""}, "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title DESC"}, "hardness": "Hard"}, {"nl_queries": "Compute the total minimal baseprice across decor as a pie chart.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT decor , min(basePrice) FROM Rooms GROUP BY decor", "binning": ""}, "VQL": "Visualize PIE SELECT decor , min(basePrice) FROM Rooms GROUP BY decor"}, "hardness": "Easy"}, {"nl_queries": "Show all origins and the number of flights from each origin by a bar chart, show by the x axis from low to high.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM Flight GROUP BY origin ORDER BY origin ASC", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM Flight GROUP BY origin ORDER BY origin ASC"}, "hardness": "Medium"}, {"nl_queries": "what is minimum age for different job title?, and rank by the y-axis from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me school_id by acc regular season in a histogram, show in descending by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for mean max(score) of each year, and sort by the y-axis in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "How many gymnasts are from each hometown Plot them as bar chart, and show Hometown from low to high order.", "db_id": "gymnast", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown ASC"}, "hardness": "Hard"}, {"nl_queries": "A line chart for listing the number of the order dates of all the bookings.", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Order_Date , COUNT(Order_Date) FROM BOOKINGS", "binning": "BIN Order_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Order_Date , COUNT(Order_Date) FROM BOOKINGS BIN Order_Date BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31?, list by the the number of date from low to high.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC", "binning": "BIN date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC BIN date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for what is the number of their teams in elimination?, and rank X-axis in descending order.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of courses each teacher teaches in a bar chart, and order X-axis in ascending order please.", "db_id": "course_teach", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday, I want to display by the y axis in ascending.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of documents for each location code in a bar chart.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code", "binning": ""}, "VQL": "Visualize BAR SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of how many local authority from each local authority", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the cost and treatment type description of each treatment?, and show by the y-axis from high to low.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) DESC"}, "hardness": "Hard"}, {"nl_queries": "Ignore movies whose director is NULL. For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title", "binning": ""}, "VQL": "Visualize BAR SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY title"}, "hardness": "Medium"}, {"nl_queries": "Find the number of students who took some course and got A or C and group by first name in a bar chart, list X in ascending order.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT STU_FNAME , COUNT(STU_FNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_FNAME ORDER BY STU_FNAME ASC", "binning": ""}, "VQL": "Visualize BAR SELECT STU_FNAME , COUNT(STU_FNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_FNAME ORDER BY STU_FNAME ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, rank in ascending by the Y.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis customer last name y axis how many customer last name, and sort bars from low to high order.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY customer_last_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY customer_last_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar graph for what is the total number of last names of all candidates?, I want to show from high to low by the how many last name.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier by a bar chart, and rank by the X in asc.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of rank from different rank, and display by the Rank in descending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank DESC"}, "hardness": "Medium"}, {"nl_queries": "Find Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday, and visualize them by a bar chart, I want to show by the y axis in asc please.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar chart of mean age from each city code, I want to list by the total number in ascending.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, display by the the number of meter 200 in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of Height over the Sex , and group by attribute Sex by a bar chart, and could you rank X from high to low order?", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , SUM(Height) FROM people GROUP BY Sex ORDER BY Sex DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , SUM(Height) FROM people GROUP BY Sex ORDER BY Sex DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart to show the theme and their sales of the journal which did not have any of the listed editors serving on the committee, and sort in desc by the Y-axis.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Sales DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Sales DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a line chart, that bins all date of transactions into the weekday interval, and the count for each bin, order in desc by the date_of_transaction.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Give the years and official names of the cities of each competition, I want to order from low to high by the Y.", "db_id": "farm", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID  ORDER BY COUNT(Year) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Plot a scatter chart, sum(number of platforms) by sum total passengers.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY LOCATION"}, "hardness": "Medium"}, {"nl_queries": "What is the name of each aircraft and how many flights does each one complete Show bar chart, order by the X-axis from high to low.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY name DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for how many students are older than 20 in each dorm?, and rank by the Y in ascending please.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dorm_name , count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dorm_name , count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name ORDER BY count(*) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart on how many engineers did each staff contact? List both the contact staff name and number of engineers contacted, and I want to order in desc by the y axis.", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT staff_name , count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT staff_name , count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the countries of all airlines whose names start with Orbit?, and could you display y axis in asc order?", "db_id": "flight_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country ORDER BY COUNT(country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country ORDER BY COUNT(country) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Create a bar chart showing the total number across team, show X-axis from high to low order please.", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM technician GROUP BY Team ORDER BY Team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM technician GROUP BY Team ORDER BY Team DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many people are there of each nationality?, and I want to rank in ascending by the names.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist in a bar chart, and show in asc by the bars.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me the number of all home by all home in a histogram, show total number in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, find hire_date and the average of manager_id bin hire_date by weekday, and visualize them by a bar chart, and I want to list in ascending by the the average of manager id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(MANAGER_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "how many students are advised by each rank of faculty? List the rank and the number of students, I want to order in asc by the bar.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank ORDER BY Rank ASC"}, "hardness": "Hard"}, {"nl_queries": "How many documents for different document name? Draw a bar chart.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Name , COUNT(Document_Name) FROM Documents GROUP BY Document_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Name , COUNT(Document_Name) FROM Documents GROUP BY Document_Name"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Name and Weight , sort y axis in ascending order.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Weight FROM people ORDER BY Weight ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Weight FROM people ORDER BY Weight ASC"}, "hardness": "Easy"}, {"nl_queries": "What is the average song rating for each language. Plot them as bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "plot scatter on what is the average price range of hotels for each each star rating code?", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT star_rating_code , avg(price_range) FROM HOTELS GROUP BY star_rating_code", "binning": ""}, "VQL": "Visualize SCATTER SELECT star_rating_code , avg(price_range) FROM HOTELS GROUP BY star_rating_code"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  password and  gender_mf .", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT password , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize BAR SELECT password , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "Show me a scatter plot of account id and account_details for .", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Account_ID , Account_Details FROM Accounts", "binning": ""}, "VQL": "Visualize SCATTER SELECT Account_ID , Account_Details FROM Accounts"}, "hardness": "Easy"}, {"nl_queries": "a line chart of avg(weight) change over the year, could you binning by year and sort X-axis in asc order?", "db_id": "car_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Weight) FROM CARS_DATA ORDER BY Year ASC", "binning": "BIN Year BY YEAR"}, "VQL": "Visualize LINE SELECT Year , avg(Weight) FROM CARS_DATA ORDER BY Year ASC BIN Year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "what is the total number of last names of all candidates?", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday, rank by the Y-axis in asc.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Return the names and ids of customers who have TN in their address by a bar chart, and order in asc by the X-axis.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE \"%TN%\" ORDER BY customer_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE \"%TN%\" ORDER BY customer_name ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of captains with different classes?, I want to rank from low to high by the the number of class.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the average price for each product type by a pie chart.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code", "binning": ""}, "VQL": "Visualize PIE SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of mean stu gpa from each dept code", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , avg(stu_gpa) FROM student GROUP BY dept_code", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , avg(stu_gpa) FROM student GROUP BY dept_code"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Home and School_ID , and group by attribute ACC_Home in a bar chart, and sort by the y-axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "For players whose occupation is not \"Researcher\", tell me the proportion of their residences with a pie chart.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence", "binning": ""}, "VQL": "Visualize PIE SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence"}, "hardness": "Medium"}, {"nl_queries": "What are the dates in which the mean sea level pressure was between 303 and 31, and count them by a line chart, and list X-axis in desc order.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about how many captains are in each rank?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "What is minimum age for different job title, sort in descending by the X.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about what are the main indstries and total market value for each industry?, and could you rank X-axis from high to low order?", "db_id": "gas_company", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, visualize a line chart about the change of department_id over hire_date , I want to order in ascending by the x-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a bar chart, list in descending by the total number.", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY COUNT(Company_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY COUNT(Company_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Scatter. what are ids and total number of hours played for each game?", "db_id": "game_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT GameID , sum(hours_played) FROM Plays_games GROUP BY gameid", "binning": ""}, "VQL": "Visualize SCATTER SELECT GameID , sum(hours_played) FROM Plays_games GROUP BY gameid"}, "hardness": "Easy"}, {"nl_queries": "how many rooms have king beds? Report the number for each decor type, and sort from low to high by the decor.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY decor ASC", "binning": ""}, "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY decor ASC"}, "hardness": "Hard"}, {"nl_queries": "What about the average amounts of payments by each method code? You can give me a bar chart, could you list by the Payment_Method_Code from low to high?", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code ASC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, compute the total number of states, and sum their vote id with a bar chart, and display sum vote id in ascending order.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY SUM(vote_id) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY SUM(vote_id) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute headquarter, sort by the X-axis from high to low please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "I want to know the proportion of the total number for each gender.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT gender , count(*) FROM dorm GROUP BY gender", "binning": ""}, "VQL": "Visualize PIE SELECT gender , count(*) FROM dorm GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "Find the number of scientists involved for the projects that require more than 300 hours Show bar chart, could you show in desc by the x axis?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, I want to display the number of attribute name in descending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a bar chart for the total number of each class, display in asc by the Y-axis.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, for department_id, hire_date, visualize the trend, show x axis from high to low order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many actors have appeared in each musical?, sort bar in desc order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the minimum salary for the departments whose average salary is above the average payment of all instructors. Plot them as bar chart.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for finding the number of the dates of the tests taken with result \"Pass\", list in descending by the y-axis.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY COUNT(date_test_taken) DESC", "binning": "BIN date_test_taken BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY COUNT(date_test_taken) DESC BIN date_test_taken BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are the titles and ids for albums containing tracks with unit price greater than 1?, and list by the x axis in ascending.", "db_id": "chinook_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title ASC"}, "hardness": "Hard"}, {"nl_queries": "How many gas stations dors each manager have? Plot a bar chart.", "db_id": "gas_company", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name"}, "hardness": "Easy"}, {"nl_queries": "Show the number of names of high school students with a bar chart, and order from high to low by the name please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of documents in different starting date and bin starting date by year interval with a line chart.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations", "binning": "BIN Date_in_Location_From BY YEAR"}, "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations BIN Date_in_Location_From BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Plot how many date in location from over date in location from in a line chart, and list by the X from low to high.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From ORDER BY Date_in_Location_From ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From ORDER BY Date_in_Location_From ASC"}, "hardness": "Medium"}, {"nl_queries": "I  want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each year.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , AVG(cloud_cover) FROM weather", "binning": "BIN date BY YEAR"}, "VQL": "Visualize BAR SELECT date , AVG(cloud_cover) FROM weather BIN date BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis nationality y axis how many nationality, and sort in desc by the bar.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis the total number, list by the Y in desc please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis the total number, sort in descending by the total number please.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Height over the Name by a bar chart, and sort in asc by the x axis.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height FROM people ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height FROM people ORDER BY Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for how many name of each name, order by the bar from high to low.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM products GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM products GROUP BY Name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and commission_pct , and visualize them by a bar chart, order by the Y-axis from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT ASC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?", "db_id": "browser_web", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id", "binning": ""}, "VQL": "Visualize BAR SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on how many different professors are there for the different schools?, list in asc by the X.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY SCHOOL_CODE ASC", "binning": ""}, "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY SCHOOL_CODE ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the  founder , and group by attribute founder by a bar chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the name and population of each county?, and I want to sort by the x axis in asc.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County_name , Population FROM county ORDER BY County_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County_name , Population FROM county ORDER BY County_name ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the number of the dates when the max temperature was higher than 85.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85", "binning": "BIN date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 BIN date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show the invoice number and the number of transactions for each invoice. Show the correlation.", "db_id": "customers_and_invoices", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT invoice_number , count(*) FROM Financial_transactions GROUP BY invoice_number", "binning": ""}, "VQL": "Visualize SCATTER SELECT invoice_number , count(*) FROM Financial_transactions GROUP BY invoice_number"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, return a bar chart about the distribution of  job_id and the average of department_id , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID"}, "hardness": "Medium"}, {"nl_queries": "A pie chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName", "binning": ""}, "VQL": "Visualize PIE SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, a bar chart shows the distribution of  founder and the average of code , and group by attribute founder.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names of the technicians and how many machines are they assigned to repair?, rank names in desc order.", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Use a stacked bar chart to show how many films for each title and each type The x-axis is title, display y axis in ascending order.", "db_id": "film_rank", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ,  Title ORDER BY COUNT(Title) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ,  Title ORDER BY COUNT(Title) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart of nationality versus the average of age, I want to order total number from high to low order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all allergy types and the number of allergies in each type by a pie chart.", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype", "binning": ""}, "VQL": "Visualize PIE SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype"}, "hardness": "Easy"}, {"nl_queries": "How many different professors are there for the different schools. Visualize by pie chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code", "binning": ""}, "VQL": "Visualize PIE SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing maximal revenue across headquarter, order X-axis from low to high order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , max(revenue) FROM manufacturers GROUP BY Headquarter ORDER BY Headquarter ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , max(revenue) FROM manufacturers GROUP BY Headquarter ORDER BY Headquarter ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the All_Neutral by a bar chart, and I want to display bar in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, and show by the bars in descending.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the average of credit value of courses with more than one prerequisite for each department? Return a bar chart, and display by the y axis from low to high.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY AVG(credits) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY AVG(credits) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the count and id of each product in all the orders with a scatter chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , T2.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , T2.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the ids and names of the companies that operated more than one flight?, could you order from low to high by the Y?", "db_id": "flight_company", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.id FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id ORDER BY T1.id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.id FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id ORDER BY T1.id ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me mean rating by languages in a histogram, sort X from high to low order.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC"}, "hardness": "Medium"}, {"nl_queries": "For those dates with a max temperature greater than or equal to 80, I would like a line chart to show the tendency, I want to display by the X-axis in desc.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart about the distribution of  date_address_from and the amount of date_address_from bin date_address_from by weekday.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses  ORDER BY monthly_rental DESC", "binning": "BIN date_address_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_from BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Draw a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, could you rank by the x axis in desc?", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of courses that have more than one prerequisites for each title with a bar chart, could you display Y-axis in descending order?", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart of the number of state from each state", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT state , COUNT(state) FROM votes GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "What is the number of platforms for each location? Show the comparison with a bar chart, I want to order by the Y in asc.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many students have each different allergy?, rank by the x axis from low to high.", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Allergy , count(*) FROM Has_allergy GROUP BY Allergy ORDER BY Allergy ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Allergy , count(*) FROM Has_allergy GROUP BY Allergy ORDER BY Allergy ASC"}, "hardness": "Medium"}, {"nl_queries": "I want to see trend of the number of season by season, and order by the X-axis in ascending.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Season , COUNT(Season) FROM game GROUP BY Season ORDER BY Season ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Season ORDER BY Season ASC"}, "hardness": "Medium"}, {"nl_queries": "List the name of all products along with the number of complaints that they have received, and order from low to high by the X-axis.", "db_id": "customer_complaints", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name ASC"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, I want to order in asc by the y-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of students living in each city with a bar chart.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city_code , count(*) FROM student GROUP BY city_code", "binning": ""}, "VQL": "Visualize BAR SELECT city_code , count(*) FROM student GROUP BY city_code"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart about the number of races held in each year after 2014, and I want to display from low to high by the the number of year please.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014  ORDER BY COUNT(year) ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014  ORDER BY COUNT(year) ASC BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me the total number by outcome code in a histogram, and order y-axis in desc order.", "db_id": "customers_campaigns_ecommerce", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the weekday of birthdates of the professors in charge of ACCT-211? Visualize with a bar chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMP_DOB , COUNT(EMP_DOB) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = \"ACCT-211\"", "binning": "BIN EMP_DOB BY WEEKDAY"}, "VQL": "Visualize BAR SELECT EMP_DOB , COUNT(EMP_DOB) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = \"ACCT-211\" BIN EMP_DOB BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Give me a line chart about the number of competitions held in each year, could you rank by the X in ascending?", "db_id": "farm", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID  ORDER BY Year ASC", "binning": "BIN Year BY YEAR"}, "VQL": "Visualize LINE SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID  ORDER BY Year ASC BIN Year BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Find the name and level of catalog structure with level between 5 and 10, could you sort by the catalog_level_name from high to low?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute founder, and rank from low to high by the Y.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Code ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of names of phones in a bar chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Road and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the change of the average of Employee_ID over Start_from bin start_from by time in a line chart, and display by the X from low to high.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from ASC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between  price and  revenue .", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code", "binning": ""}, "VQL": "Visualize SCATTER SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home, and list total number in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "List the dog name and weight of the dogs who have been abandoned in a bar chart.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , weight FROM Dogs WHERE abandoned_yn = 1", "binning": ""}, "VQL": "Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1"}, "hardness": "Easy"}, {"nl_queries": "Show each state and the number of addresses in each state Show bar chart, list from low to high by the names.", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY state_province_county ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY state_province_county ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the relationship between account id and the number of transactions for each account in a scatter chart.", "db_id": "customers_and_invoices", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.account_id , count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.account_id , count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id"}, "hardness": "Medium"}, {"nl_queries": "For artist names who are not from United States, show me a stacked that the x-axis is the Year_Join and the group by name in Y, I want to rank y axis from low to high order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the draft pick numbers and draft classes for players who play the Defender position. Show bar chart.", "db_id": "match_season", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\"", "binning": ""}, "VQL": "Visualize BAR SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\""}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis acc road y axis the average of school id, rank from low to high by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the total number of instructors for each department with a bar chart.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name"}, "hardness": "Extra Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, give me the comparison about the average of manager_id over the  hire_date bin hire_date by weekday by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the outcome code of mailshots along with the number of mailshots in each outcome code. Plot them as bar chart.", "db_id": "customers_campaigns_ecommerce", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on what are the names and budgets of departments with budgets greater than the average?", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department)", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department)"}, "hardness": "Easy"}, {"nl_queries": "What is the average age of male students in each city? Draw a bar chart, display by the city_code in ascending please.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY city_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY city_code ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the name of each county along with the corresponding number of delegates from that county with a bar chart.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County_name , COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id", "binning": ""}, "VQL": "Visualize BAR SELECT County_name , COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id"}, "hardness": "Medium"}, {"nl_queries": "Show the company name with the number of gas station Show bar chart, and order by the names in desc.", "db_id": "gas_company", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about the average of Shop_ID over the Is_full_time , and group by attribute Is_full_time by a bar chart, and display in ascending by the Y.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a scatter chart to show the id and the number of journal committees of editors and categorized by editors' names.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Editor_ID , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Editor_ID , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Plot how many date of transaction over date of transaction in a line chart, I want to order X from low to high order please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "You can return a bar chart to show the employees' first name and the corresponding manager's id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , MANAGER_ID FROM employees", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, what is the relationship between  salary and  department_id ?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT SALARY , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart, and show x-axis in ascending order.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year ASC BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and I want to list Y-axis in desc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and I want to order names in descending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of  hire_date and the average of salary bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of manufacturer , and group by attribute name, and could you order by the X-axis in ascending please?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what is the average rating of songs for each language?, order by the mean rating in ascending please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those products with a price between 60 and 120, what is the relationship between  price and  manufacturer ?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120", "binning": ""}, "VQL": "Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120"}, "hardness": "Easy"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart, and could you order from high to low by the Y please?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar chart of the total number from each location", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Display a bar chart for what are the names and ids of every course with less than 2 sections?, rank from high to low by the course_id.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC"}, "hardness": "Medium"}, {"nl_queries": "How many gas stations dors each manager have? Plot a bar chart, list bars in descending order.", "db_id": "gas_company", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize the general trend of the number of date of completion over the date of completion.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment GROUP BY date_of_completion", "binning": ""}, "VQL": "Visualize LINE SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment GROUP BY date_of_completion"}, "hardness": "Easy"}, {"nl_queries": "Show all artist names and ages in a histogram, list Y from high to low order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Age DESC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday, and show Y-axis in desc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY COUNT(HIRE_DATE) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "List the number of dogs departed in each day with a bar chart that groups by departed date, could you list in asc by the Y?", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY COUNT(date_departed) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY COUNT(date_departed) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a bar chart, and order by the names in descending please.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name ORDER BY name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the venues of all the matches? Sort them in the descending order of match date.", "db_id": "city_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM MATCH GROUP BY Venue ORDER BY date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM MATCH GROUP BY Venue ORDER BY date DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many students live in each city?, and sort by the bar in desc.", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city_code , count(*) FROM Student GROUP BY city_code ORDER BY city_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT city_code , count(*) FROM Student GROUP BY city_code ORDER BY city_code DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a trend line to show the average amount of payment by each payment day.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC"}, "hardness": "Medium"}, {"nl_queries": "Please tell the names and revenues of the companies with the highest revenues in each headquarter city, I want to display y axis in desc order please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , max(revenue) FROM manufacturers GROUP BY Headquarter ORDER BY max(revenue) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , max(revenue) FROM manufacturers GROUP BY Headquarter ORDER BY max(revenue) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and partition id for users who tweeted less than twice. Show bar chart.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid", "binning": ""}, "VQL": "Visualize BAR SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid"}, "hardness": "Easy"}, {"nl_queries": "What are the types of competition and number of competitions for that type Show bar chart, and rank Y in ascending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the  headquarter , and group by attribute headquarter.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter"}, "hardness": "Medium"}, {"nl_queries": "Show how many country from each country, show bars in desc order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of  personal_name and  gender_mf  in a bar chart.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT personal_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize BAR SELECT personal_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "Please give me a bar chart to show the distribution of results of all music festival.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between  price and  code , and group by attribute founder.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Price , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Price , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about  Team_ID over the  All_Road  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  family_name and  gender_mf .", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT family_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize BAR SELECT family_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "What are the titles and ids for albums containing tracks with unit price greater than 1, could you order by the y axis in asc?", "db_id": "chinook_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart with the product name and their frequency, sort by the X in desc.", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY product_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY product_name DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of code , and group by attribute founder in a bar chart, sort by the Y-axis in asc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code ASC"}, "hardness": "Hard"}, {"nl_queries": "How many students are affected by each allergy type. ", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT AllergyType , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype", "binning": ""}, "VQL": "Visualize PIE SELECT AllergyType , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the category of music festivals with result \"Awarded\"?, could you order in ascending by the X-axis?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC"}, "hardness": "Hard"}, {"nl_queries": "I want to see trend of sum employee id by start from, list by the x axis in ascending.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from ASC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" by a bar chart, list from high to low by the Y.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.investor_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.investor_id DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the names and publication dates of all catalogs that have catalog level number greater than 5 Bin publication dates into Year interval, and count catalog and group by catalog name, order the number of date of publication from low to high order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name ORDER BY COUNT(date_of_publication) ASC", "binning": "BIN date_of_publication BY YEAR"}, "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name ORDER BY COUNT(date_of_publication) ASC BIN date_of_publication BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "How many entrepreneurs correspond to each investor, and show from high to low by the bars please.", "db_id": "entrepreneur", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY Investor DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY Investor DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the  job_id , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of sum employee id vs Is_full_time based on start from", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, give me the comparison about the average of salary over the hire_date bin hire_date by time, I want to display from low to high by the Y-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the lowest price of product, grouped by product type? Show a bar chart, and show by the X-axis from high to low.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_type_code , min(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_type_code , min(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code DESC"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between  code and  revenue , and group by attribute headquarter.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter"}, "hardness": "Medium"}, {"nl_queries": "Find the number of the \"date became customers\" of the customers whose ID is between 10 and 20, rank y axis in ascending order.", "db_id": "customers_and_addresses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) ASC", "binning": "BIN date_became_customer BY MONTH"}, "VQL": "Visualize BAR SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) ASC BIN date_became_customer BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a scatter chart about the correlation between  commission_pct and  manager_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": ""}, "VQL": "Visualize SCATTER SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the names and average prices of products for manufacturers whose products cost on average 150 or more?, display in descending by the Name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart for room_count of each apt number, and rank in ascending by the y axis.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT apt_number , room_count FROM Apartments ORDER BY room_count ASC", "binning": ""}, "VQL": "Visualize BAR SELECT apt_number , room_count FROM Apartments ORDER BY room_count ASC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, draw a bar chart about the distribution of  hire_date and the amount of hire_date bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Pie. how many workshops did each author submit to? Return the author name and the number of workshops.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize PIE SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of  meter_700 and  meter_100  in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of gender versus the number of gender, order in descending by the names.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender DESC"}, "hardness": "Medium"}, {"nl_queries": "Give a me a bar graph to show the friends's name, and ages of all people who are older than the average age of a person, and order by the y-axis in desc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.age DESC"}, "hardness": "Hard"}, {"nl_queries": "Group and count details for the events using a bar chart, and I want to list by the names in desc.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY Event_Details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY Event_Details DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me team_id by all road in a histogram, I want to list by the X-axis in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, sort Y-axis in asc order please.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC", "binning": "BIN date_of_completion BY MONTH"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What about the average amounts of payments by each method code? You can give me a bar chart, sort from high to low by the y-axis.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY AVG(Amount_Payment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY AVG(Amount_Payment) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many companies each investor has invested? Show me a bar chart.", "db_id": "entrepreneur", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor", "binning": ""}, "VQL": "Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor"}, "hardness": "Easy"}, {"nl_queries": "Display a pie chart for what are the title and maximum price of each film?", "db_id": "cinema", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY Title", "binning": ""}, "VQL": "Visualize PIE SELECT Title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY Title"}, "hardness": "Easy"}, {"nl_queries": "Find the number of the enrollment date for all the tests that have \"Pass\" result, and show in descending by the y-axis please.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"  ORDER BY COUNT(date_of_enrolment) DESC", "binning": "BIN date_of_enrolment BY MONTH"}, "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the  hire_date bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show total number of shop id from each start from, and could you show from low to high by the Y-axis?", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of position from each position, and list in ascending by the Position.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Games in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Show each employee's salary using a bar chart, note that use the last name of each employee, list in desc by the y-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , SALARY FROM employees ORDER BY SALARY DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , SALARY FROM employees ORDER BY SALARY DESC"}, "hardness": "Easy"}, {"nl_queries": "Compare how many events by different event details using a bar chart, and list by the Y-axis in desc.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY COUNT(Event_Details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY COUNT(Event_Details) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize the relationship between  manufacturer and  code .", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Manufacturer , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Manufacturer , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code"}, "hardness": "Easy"}, {"nl_queries": "Show the country names and the corresponding number of players in a bar chart, and I want to order in desc by the Y-axis.", "db_id": "match_season", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show each county along with the number of schools.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of sum shop id from each is full time, list from low to high by the Y please.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of services versus the number of services, and order by the Y-axis in ascending please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute headquarter in a bar chart, could you sort total number in descending order please?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Code DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for what are the total enrollments of universities of each affiliation type?, order Affiliation in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the distinct visit dates, and count them by a line chart, I want to display X-axis in asc order.", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date ASC", "binning": "BIN Visit_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date ASC BIN Visit_Date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show me salary by last name in a histogram, list y axis in asc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , SALARY FROM employees ORDER BY SALARY ASC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , SALARY FROM employees ORDER BY SALARY ASC"}, "hardness": "Easy"}, {"nl_queries": "Show the number of documents in different starting date Bin starting date by weekday and group by location code with a stacked bar chart, display from low to high by the Y.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) ASC", "binning": "BIN Date_in_Location_From BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) ASC BIN Date_in_Location_From BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart, group by name and compute each group's total number, and I want to list the number of name from high to low order please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21', order by the X-axis in descending.", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY Type_of_Thing_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY Type_of_Thing_Code DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  state and  enr.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize PIE SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, give me the comparison about the average of salary over the job_id , and group by attribute job_id by a bar chart, and show y axis in descending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Just show employees' salaries by their first name in a bar chart, sort in descending by the bar please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , SALARY FROM employees ORDER BY FIRST_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , SALARY FROM employees ORDER BY FIRST_NAME DESC"}, "hardness": "Easy"}, {"nl_queries": "Find the first name and gpa of the students whose gpa is lower than the average gpa of all students Plot them as bar chart, show in descending by the y-axis.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT STU_FNAME , SUM(STU_GPA) FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student) GROUP BY STU_FNAME ORDER BY SUM(STU_GPA) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT STU_FNAME , SUM(STU_GPA) FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student) GROUP BY STU_FNAME ORDER BY SUM(STU_GPA) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of products for each manufacturer, showing the name of each company Show bar chart, display by the bar in desc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, find hire_date and the average of employee_id bin hire_date by weekday, and visualize them by a bar chart, I want to order in ascending by the total number please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show all ages and corresponding number of students. Show the correlation.", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Age , count(*) FROM Student GROUP BY age", "binning": ""}, "VQL": "Visualize SCATTER SELECT Age , count(*) FROM Student GROUP BY age"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, return a scatter chart about the correlation between  salary and  commission_pct .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT SALARY , COMMISSION_PCT FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": ""}, "VQL": "Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)"}, "hardness": "Easy"}, {"nl_queries": "A bar graph listing the local authorities and how many local authorities provided by all stations.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, and show names in asc order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter ASC"}, "hardness": "Hard"}, {"nl_queries": "Show weight from each name", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Weight FROM people", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Weight FROM people"}, "hardness": "Easy"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart, I want to sort by the total number in desc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a histogram for how many registed students do each course have? List course name and the number of their registered students?, sort X in asc order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, visualize a line chart about the change of salary over hire_date , and order x axis in asc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, and could you list by the Y in descending?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of  job_id and the average of department_id , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID"}, "hardness": "Medium"}, {"nl_queries": "Find the number of the dates of assessment notes for students with first name \"Fanny\".", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = \"Fanny\"", "binning": "BIN date_of_notes BY YEAR"}, "VQL": "Visualize BAR SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = \"Fanny\" BIN date_of_notes BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "How many people are under 40 for each gender. Plot them as bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender"}, "hardness": "Medium"}, {"nl_queries": "Find the number of courses offered by Psychology department in each building with a bar chart, order y axis in desc order.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY COUNT(building) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY COUNT(building) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "I want to know the proportion of the total number for each time of day.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day", "binning": ""}, "VQL": "Visualize PIE SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_700 and meter_100 in a bar chart, and could you list names from high to low order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show the number of games in each season and group by away team in a group line chart The x-axis is season, and could you display by the Season in ascending?", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ORDER BY Season ASC", "binning": "BIN Season BY YEAR"}, "VQL": "Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ORDER BY Season ASC BIN Season BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the dates of orders which belong to the customer named \"Jeramie\", and count them by a bar chart", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "how many students are in each department?", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , count(*) FROM student GROUP BY dept_code", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , count(*) FROM student GROUP BY dept_code"}, "hardness": "Easy"}, {"nl_queries": "What are the student IDs and middle names of the students enrolled in at most two courses. ", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id", "binning": ""}, "VQL": "Visualize BAR SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id"}, "hardness": "Easy"}, {"nl_queries": "A stacked bar chart shows the total number of ships with different nationalities and split by ship type, could you show by the names in desc?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC"}, "hardness": "Hard"}, {"nl_queries": "Compare all countries with a bar chart, could you display by the bars in descending?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the proportion of positions of pilots?", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position", "binning": ""}, "VQL": "Visualize PIE SELECT Position , COUNT(Position) FROM pilot GROUP BY Position"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Date_of_Birth and Height , list by the y-axis in desc.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_of_Birth , Height FROM people ORDER BY Height DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Date_of_Birth , Height FROM people ORDER BY Height DESC"}, "hardness": "Easy"}, {"nl_queries": "Show the number of cards in different card type code in a bar chart, rank Y-axis in asc order.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(card_type_code) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(card_type_code) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find  ACC_Road and  School_ID , and group by attribute All_Home, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and department_id in a bar chart, and could you list from low to high by the bars?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY PHONE_NUMBER ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY PHONE_NUMBER ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart, and display by the y axis in desc please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart of name versus meter_100, and sort by the total number in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Count the total number of different locations of parties using a pie chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM party GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for how many medications are prescribed for each brand?, and could you list by the bars from high to low?", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the facility codes of the apartments with more than four bedrooms, and count them by a bar chart, show by the facility_code from high to low.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY facility_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY facility_code DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar chart x axis minister y axis how many minister", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister"}, "hardness": "Easy"}, {"nl_queries": "List the number of areas of all appellations in the bar chart, and I want to show y axis in ascending order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of the physicians who are trained in a procedure that costs more than 5000, and sort how many name from low to high order.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY COUNT(T1.Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY COUNT(T1.Name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "How many documents are created in each day? Bin the document date by year interval with a line chart, and list x axis in ascending order.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code  ORDER BY Document_Date ASC", "binning": "BIN Document_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code  ORDER BY Document_Date ASC BIN Document_Date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "I want to know the proportion for each team.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  School_ID and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and Team_ID , show by the y axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show the number of the countries that have managers of age above 50 or below 46.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country"}, "hardness": "Hard"}, {"nl_queries": "Show me how many in each class of all races using a bar chart, show in descending by the Y-axis.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of the actual delivery date for all the orders with quantity 1", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1", "binning": "BIN Actual_Delivery_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1 BIN Actual_Delivery_Date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of department_id bin hire_date by time, and visualize them by a bar chart, could you list by the y-axis in asc?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the different parties of representative? Show the party name and the number of representatives in each party. ", "db_id": "election_representative", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , COUNT(*) FROM representative GROUP BY Party", "binning": ""}, "VQL": "Visualize BAR SELECT Party , COUNT(*) FROM representative GROUP BY Party"}, "hardness": "Easy"}, {"nl_queries": "For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details", "binning": ""}, "VQL": "Visualize BAR SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details"}, "hardness": "Hard"}, {"nl_queries": "How many events have each participants attended? Show their average number by each participant type code using a bar chart, sort from low to high by the names.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Participant_Type_Code , AVG(count(*)) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_Type_Code ORDER BY T1.Participant_Type_Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Participant_Type_Code , AVG(count(*)) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_Type_Code ORDER BY T1.Participant_Type_Code ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of dogs each owner has in a bar chart that groups by owner's first name.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?, show in ascending by the Y.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many different professors are there for the different schools Show bar chart, and I want to display the total number from low to high order.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for finding the number of the names of swimmers who has a result of \"win\", and rank by the Y-axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those products with a price between 60 and 120, visualize the relationship between  code and  manufacturer , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Find the average of credits of courses that have more than one prerequisite for each department with a bar chart, display by the total number in ascending.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY AVG(credits) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY AVG(credits) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a line chart", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment", "binning": ""}, "VQL": "Visualize LINE SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment"}, "hardness": "Hard"}, {"nl_queries": "I want to see trend of the number of date in locaton to by date in locaton to, and list by the x axis in asc.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To ASC", "binning": "BIN Date_in_Locaton_To BY YEAR"}, "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To ASC BIN Date_in_Locaton_To BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "A stacked bar graph shows the total number of captains categorize by ranks of different classes.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class"}, "hardness": "Hard"}, {"nl_queries": "A pie chart for what are the number of the facility codes of the apartments with more than four bedrooms?", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code", "binning": ""}, "VQL": "Visualize PIE SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code"}, "hardness": "Hard"}, {"nl_queries": "Show the card type codes and the number of transactions Visualize by bar chart, display by the y axis in desc.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for finding the number of the dates of the tests taken with result \"Pass\", list from low to high by the X-axis.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken ORDER BY date_test_taken ASC", "binning": ""}, "VQL": "Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken ORDER BY date_test_taken ASC"}, "hardness": "Hard"}, {"nl_queries": "Which parts have more than 2 faults? Show the part name and id. Show a pie chart.", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id", "binning": ""}, "VQL": "Visualize PIE SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, and order x-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Pie chart. what are the ids and names of the battles that led to more than 10 people killed in total.", "db_id": "battle_death", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.name , T1.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id", "binning": ""}, "VQL": "Visualize PIE SELECT T1.name , T1.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the id and local authority of the station whose maximum precipitation is higher than 50 Visualize by bar chart, I want to list local_authority from high to low order please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id ORDER BY local_authority DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id ORDER BY local_authority DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of  Name and  Height .", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height FROM people", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height FROM people"}, "hardness": "Easy"}, {"nl_queries": "Count the number of services by services, display by the total number in desc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the cost and treatment type description of each treatment?, display in desc by the total number.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) DESC"}, "hardness": "Hard"}, {"nl_queries": "For employees with first names that end with the letter m, give me a bar chart to show their total salary.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME"}, "hardness": "Hard"}, {"nl_queries": "For each station, bin its longitude divided by zero as buckets, and count the frequency in each bucket.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT long , COUNT(long) FROM station", "binning": "BIN long BY ZERO"}, "VQL": "Visualize BAR SELECT long , COUNT(long) FROM station BIN long BY ZERO"}, "hardness": "Easy"}, {"nl_queries": "Pie chart. what are the ids and names of the medicine that can interact with two or more enzymes?", "db_id": "medicine_enzyme_interaction", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id", "binning": ""}, "VQL": "Visualize PIE SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Games by a bar chart, display by the X-axis in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings in a pie chart.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code", "binning": ""}, "VQL": "Visualize PIE SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code"}, "hardness": "Easy"}, {"nl_queries": "What are the names of products with price at most 200, and count them by a bar chart", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "What are the names and ids of all makers with more than 3 models, and display by the FullName in ascending.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FullName , Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker ORDER BY FullName ASC", "binning": ""}, "VQL": "Visualize BAR SELECT FullName , Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker ORDER BY FullName ASC"}, "hardness": "Medium"}, {"nl_queries": "Use a bar chart to show the number of delegates in each county, I want to list in descending by the x-axis.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County_name , COUNT(County_name) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY County_name ORDER BY County_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County_name , COUNT(County_name) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY County_name ORDER BY County_name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, find hire_date and the sum of department_id bin hire_date by weekday, and visualize them by a bar chart, and list sum department id in ascending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Neutral , and display in asc by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Show the total number from each type, and I want to sort names from high to low order.", "db_id": "entertainment_awards", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of wines with price higher than 100, sorted by year, group by grape and show by bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "A bar chart shows the distribution of All_Neutral and ACC_Percent , and rank by the y-axis from low to high please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the  hire_date bin hire_date by time by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Find the salary and manager number for those employees who is working under a manager. ", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT SALARY , MANAGER_ID FROM employees WHERE manager_id != \"null\"", "binning": ""}, "VQL": "Visualize SCATTER SELECT SALARY , MANAGER_ID FROM employees WHERE manager_id != \"null\""}, "hardness": "Easy"}, {"nl_queries": "Group and count the name attribute for visualizing a bar chart, display in ascending by the Name.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the highest price of product, grouped by product type? Show a bar chart, and I want to display in asc by the names.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code ASC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of  hire_date and the average of employee_id bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the number of city across city, order in asc by the bars.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CITY , COUNT(CITY) FROM locations GROUP BY CITY ORDER BY CITY ASC", "binning": ""}, "VQL": "Visualize BAR SELECT CITY , COUNT(CITY) FROM locations GROUP BY CITY ORDER BY CITY ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of  Start_from and the average of Employee_ID bin start_from by weekday.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , AVG(Employee_ID) FROM hiring", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , AVG(Employee_ID) FROM hiring BIN Start_from BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "For those dates with a max temperature greater than or equal to 80, I would like a line chart to show the tendency.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date", "binning": ""}, "VQL": "Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for finding the number of the \"date became customers\" of the customers whose ID is between 10 and 20, and show by the total number in ascending.", "db_id": "customers_and_addresses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) ASC", "binning": "BIN date_became_customer BY MONTH"}, "VQL": "Visualize BAR SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) ASC BIN date_became_customer BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Just list the resident id and details in a bar chart, and could you sort in ascending by the bar please?", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT other_details , resident_id FROM Residents ORDER BY other_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT other_details , resident_id FROM Residents ORDER BY other_details ASC"}, "hardness": "Easy"}, {"nl_queries": "List singer names and number of concerts for each singer with a bar chart.", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, visualize a line chart about the change of salary over hire_date , display HIRE_DATE from high to low order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of competitions for each country.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for what are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?", "db_id": "chinook_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = \"Astrid\" AND LastName = \"Gruber\"", "binning": "BIN InvoiceDate BY WEEKDAY"}, "VQL": "Visualize BAR SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = \"Astrid\" AND LastName = \"Gruber\" BIN InvoiceDate BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show the number of apartment bookings for each year and bin booking start date by year interval in a bar chart, list from low to high by the y axis.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) ASC", "binning": "BIN booking_start_date BY YEAR"}, "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show the date and id of the transcript with at least 2 course results in a bar chart, I want to order Y from low to high order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the frequency of names of high schoolers who have likes with a bar chart, and could you show by the total number in asc?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart to visualize the number of the districts of markets they are on, and display bars in descending order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY District DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY District DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the email by a bar chart, show by the y axis in desc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of apartment bookings in each day and group by booking end date with a line chart, sort by the booking_end_date in descending.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings GROUP BY booking_end_date ORDER BY booking_end_date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings GROUP BY booking_end_date ORDER BY booking_end_date DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of their teams in elimination? Draw a bar chart, list in ascending by the x axis.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many captains with younger than 50 are in each rank?, order from high to low by the X.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of courses provided in each year with a group line chart that groups by semester, list the binning year in asc order.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , count(*) FROM SECTION GROUP BY semester ORDER BY year ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY semester ORDER BY year ASC BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a histogram for what are the names of the technicians  and how many machines are they assigned to repair?", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name"}, "hardness": "Medium"}, {"nl_queries": "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by year interval with a line chart, I want to sort in ascending by the x axis please.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Document_Date , COUNT(Document_Date) FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'  ORDER BY Document_Date ASC", "binning": "BIN Document_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Document_Date , COUNT(Document_Date) FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'  ORDER BY Document_Date ASC BIN Document_Date BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me about the proportion of  All_Games_Percent and  All_Games_Percent in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, and I want to list y axis in descending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY COUNT(HIRE_DATE) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY COUNT(HIRE_DATE) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "A bar chart shows the distribution of meter_400 and ID , could you list meter_400 in descending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  meter_200 and the amount of meter_200 , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Compute the number of each type of job ids for employees who make more than the highest-earning employee with title PU_MAN, with a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary > ( SELECT max(salary) FROM employees WHERE job_id = 'PU_MAN' ) GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary > ( SELECT max(salary) FROM employees WHERE job_id = 'PU_MAN' ) GROUP BY JOB_ID"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and manager_id , and order by the FIRST_NAME in descending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY FIRST_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY FIRST_NAME DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of start dates of all the apartment bookings for each year with a bar chart, and order by the total number in desc please.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id  ORDER BY COUNT(booking_start_date) DESC", "binning": "BIN booking_start_date BY YEAR"}, "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "Just show the employee's last name and their department's id using a bar chart, and could you rank bar in asc order please?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , DEPARTMENT_ID FROM employees ORDER BY LAST_NAME ASC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees ORDER BY LAST_NAME ASC"}, "hardness": "Easy"}, {"nl_queries": "The trend about the the number of start from of different Is_full_time over the start from, and display x-axis from high to low order.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "How many treatments in each day? Return a line chart that groups by date of treatment, list in ascending by the X-axis please.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY date_of_treatment ORDER BY date_of_treatment ASC", "binning": ""}, "VQL": "Visualize LINE SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY date_of_treatment ORDER BY date_of_treatment ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between  code and  revenue , and group by attribute founder.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder"}, "hardness": "Medium"}, {"nl_queries": "List each charge type and its amount in a bar chart, order charge_type in desc order.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT charge_type , charge_amount FROM Charges ORDER BY charge_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges ORDER BY charge_type DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis type y axis total number of enrollment, and could you sort bars in asc order?", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize the title and and the total star rating of the movie using a bar chart, and could you order in desc by the y axis please?", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY SUM(stars) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY SUM(stars) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, I want to rank by the All_Home from high to low please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Team_Name and School_ID , list by the Y in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for how many players played each position?, order by the x axis from low to high.", "db_id": "match_season", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY Position ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, find hire_date and the average of manager_id bin hire_date by time, and visualize them by a bar chart, and show in descending by the y-axis please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and employee_id , I want to order LAST_NAME from low to high order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME ASC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and show in ascending by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all sport name and the number of students Show bar chart, and list in desc by the Y.", "db_id": "game_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis first name y axis salary", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , SALARY FROM employees", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , SALARY FROM employees"}, "hardness": "Easy"}, {"nl_queries": "Show the number of male and female assistant professors Plot them as bar chart, display in descending by the X-axis.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , count(*) FROM Faculty WHERE rank = \"AsstProf\" GROUP BY sex ORDER BY Sex DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = \"AsstProf\" GROUP BY sex ORDER BY Sex DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of  headquarter and the sum of code , and group by attribute headquarter.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter"}, "hardness": "Medium"}, {"nl_queries": "For those employees who get more salary than the employee whose id is 163, show the frequency of their last name, and could you rank by the Y from low to high?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , COUNT(LAST_NAME) FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163 ) GROUP BY LAST_NAME ORDER BY COUNT(LAST_NAME) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , COUNT(LAST_NAME) FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163 ) GROUP BY LAST_NAME ORDER BY COUNT(LAST_NAME) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count with a bar chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on how many bookings does each booking status have? List the booking status code and the number of corresponding bookings.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code", "binning": ""}, "VQL": "Visualize BAR SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code"}, "hardness": "Easy"}, {"nl_queries": "What are the descriptions of all the project outcomes, and count them by a bar chart, I want to rank y axis in ascending order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the average age for each type of pet. Visualize them as a pie chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of first_name and department_id , and rank by the bar in desc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY FIRST_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY FIRST_NAME DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart, and display Y-axis in descending order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show me mean age by born state in a histogram, rank by the y axis in asc.", "db_id": "department_management", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT born_state , AVG(age) FROM head GROUP BY born_state ORDER BY AVG(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT born_state , AVG(age) FROM head GROUP BY born_state ORDER BY AVG(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot a scatter chart, body builder id by people_id.", "db_id": "body_builder", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Body_Builder_ID , People_ID FROM body_builder", "binning": ""}, "VQL": "Visualize SCATTER SELECT Body_Builder_ID , People_ID FROM body_builder"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, show me the trend about salary over hire_date with a line chart, and sort in descending by the x axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the ids and details of events that have more than one participants?, and could you order by the Event_Details from high to low?", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Event_Details , T1.Event_ID FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_Details ORDER BY T1.Event_Details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Event_Details , T1.Event_ID FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_Details ORDER BY T1.Event_Details DESC"}, "hardness": "Hard"}, {"nl_queries": "Please draw a bar chart to show the total number of different color, I want to show X from high to low order.", "db_id": "mountain_photos", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color DESC", "binning": ""}, "VQL": "Visualize BAR SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a scatter chart about the correlation between  employee_id and  salary .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT EMPLOYEE_ID , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize SCATTER SELECT EMPLOYEE_ID , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, give me the comparison about the sum of salary over the hire_date bin hire_date by weekday, and rank sum salary in ascending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(SALARY) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(SALARY) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For those employees who did not have any job in the past, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, and I want to display y axis from high to low order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart showing the number of publication dates of books.", "db_id": "book_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Publication_Date , COUNT(Publication_Date) FROM publication GROUP BY Publication_Date", "binning": ""}, "VQL": "Visualize BAR SELECT Publication_Date , COUNT(Publication_Date) FROM publication GROUP BY Publication_Date"}, "hardness": "Easy"}, {"nl_queries": "What are the different software platforms for devices, and how many devices have each, I want to show by the X from high to low.", "db_id": "device", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY Software_Platform DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY Software_Platform DESC"}, "hardness": "Medium"}, {"nl_queries": "For all train stations not in London with a pie chart, show me the proportion of total_passengers of different names.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'"}, "hardness": "Easy"}, {"nl_queries": "Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, and order X in asc order.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC", "binning": "BIN Date_in_Location_From BY YEAR"}, "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC BIN Date_in_Location_From BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "How many staff does each project has? List the project id and the number in an ascending order. Visualize by scatter chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of department_id bin hire_date by time, and visualize them by a bar chart, and I want to sort Y in asc order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many students are older than 20 in each dorm?, list bar from low to high order.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dorm_name , count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name ORDER BY dorm_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dorm_name , count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name ORDER BY dorm_name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the location codes and the number of documents in each location in a bar chart.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code", "binning": ""}, "VQL": "Visualize BAR SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram for what are the names of the singers and number of concerts for each person?, and could you show total number in desc order?", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Create a bar chart showing the number of year across year, list by the Y-axis in descending.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM CARS_DATA  ORDER BY COUNT(Year) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM CARS_DATA  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "What are the ids and trade names of the medicine that can interact with at least 3 enzymes, and I want to list in descending by the y axis.", "db_id": "medicine_enzyme_interaction", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of hire_date over the  hire_date bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize the relationship between  manager_id and  department_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart shows the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, order Y in ascending order please.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many students are older than average for each gender?, and show by the total number in ascending please.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of flights in each destination city with a bar chart.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT destination , COUNT(destination) FROM Flight GROUP BY destination", "binning": ""}, "VQL": "Visualize BAR SELECT destination , COUNT(destination) FROM Flight GROUP BY destination"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  ACC_Percent , and group by attribute ACC_Home?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me the minimal weight by sex in a bar, sort the x in asc order.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , min(weight) FROM people GROUP BY Sex ORDER BY Sex ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , min(weight) FROM people GROUP BY Sex ORDER BY Sex ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart on what is the average base price of rooms, for each bed type?", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType", "binning": ""}, "VQL": "Visualize PIE SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType"}, "hardness": "Easy"}, {"nl_queries": "Show me about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart, and order by the X from high to low please.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC BIN Start_from BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart about the distribution of  login_name and  author_tutor_ATB .", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT login_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize BAR SELECT login_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "What is the total number of each fate? Give me the result in a bar graph.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between  manufacturer and  revenue .", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Manufacturer , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code", "binning": ""}, "VQL": "Visualize SCATTER SELECT Manufacturer , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, find name and code , and group by attribute headquarter, and visualize them by a bar chart, could you rank names in ascending order?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Count the number of employees for each city Plot them as bar chart, and rank in asc by the y-axis.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT City , count(*) FROM employee GROUP BY city ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT City , count(*) FROM employee GROUP BY city ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and training hours of players whose hours are below 1500 Show bar chart, and list by the y axis from high to low.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart, display by the names in ascending.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken ORDER BY date_test_taken ASC", "binning": ""}, "VQL": "Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" GROUP BY date_test_taken ORDER BY date_test_taken ASC"}, "hardness": "Hard"}, {"nl_queries": "Find All_Road and School_ID , and visualize them by a bar chart, could you show y-axis in desc order please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A line chart shows the trend of  Shop_ID over  Start_from .", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , Shop_ID FROM hiring", "binning": ""}, "VQL": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring"}, "hardness": "Easy"}, {"nl_queries": "Compare the frequency of each payment method code using a bar chart, rank by the how many payment method code from high to low.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY COUNT(Payment_Method_Code) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY COUNT(Payment_Method_Code) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, find  name and the sum of price , and group by attribute name, and visualize them by a bar chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home in a bar chart, order by the y axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of documents created in each day and bin document date by weekday and group by document type with a stacked bar chart.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Name", "binning": "BIN Document_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Name BIN Document_Date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Return the name of rooms and the number of reservations made for each of the rooms to draw a bar chart, list by the y axis in descending please.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the stars of each director by a bar chart, and could you order from high to low by the x axis?", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY director DESC", "binning": ""}, "VQL": "Visualize BAR SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY director DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, could you display X in descending order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the amount of headquarter , and group by attribute headquarter in a bar chart, and sort in asc by the X-axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , COUNT(Headquarter) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , COUNT(Headquarter) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about  Team_ID over the  ACC_Regular_Season .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, rank in desc by the y-axis please.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart of decor versus minimal baseprice, order by the total number in descending.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY min(basePrice) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY min(basePrice) DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show total number of population from different governmentform", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of  job_id and the sum of manager_id , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID"}, "hardness": "Extra Hard"}, {"nl_queries": "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"}, "hardness": "Easy"}, {"nl_queries": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards, and count them by a bar chart, and I want to order x-axis in ascending order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the name , and group by attribute name by a bar chart, and could you list from high to low by the bars please?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me about the distribution of  meter_600 and  ID  in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Compare how many events by different event details using a bar chart, and sort names from high to low order.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY Event_Details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY Event_Details DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of headquarters from each headquarters, could you order by the total number in ascending?", "db_id": "company_employee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names of the different bank branches, and what are their total loan amounts. ", "db_id": "loan_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname", "binning": ""}, "VQL": "Visualize PIE SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname"}, "hardness": "Medium"}, {"nl_queries": "Find the number of courses offered by Psychology department in each year with a line chart, and could you order X in ascending order?", "db_id": "college_2", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'  ORDER BY year ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'  ORDER BY year ASC BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart about what are the student IDs and middle names of the students enrolled in at most two courses?, and could you list in ascending by the total number please?", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.student_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.student_id ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for showing the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee"}, "hardness": "Hard"}, {"nl_queries": "For those dates with a max temperature greater than or equal to 80, I want to know the number of days on the day of the week interval using a bar chart.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80", "binning": "BIN date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 BIN date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis event details y axis how many event details, rank in ascending by the bars please.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY Event_Details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY Event_Details ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of revenue , and group by attribute founder in a bar chart, rank by the total number in descending.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Revenue) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Revenue) DESC"}, "hardness": "Hard"}, {"nl_queries": "Plot how many date from by grouped by date from as a bar graph, and I want to list in descending by the total number.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) DESC", "binning": "BIN date_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) DESC BIN date_from BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Find all the distinct visit dates, and count them by a bar chart, and could you order y axis in desc order?", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) DESC", "binning": "BIN Visit_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) DESC BIN Visit_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Find the id and cell phone of the professionals who operate two or more types of treatments, show from high to low by the Y-axis.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.professional_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.professional_id DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, and could you list the average of salary in desc order please?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about how many professors have a PhD in each department?, and I want to display by the Y from low to high.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me about the distribution of All_Road and Team_ID in a bar chart, display by the y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of total number by each rank, show total number in asc order.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(Rank) FROM Faculty GROUP BY Rank ORDER BY count(Rank) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(Rank) FROM Faculty GROUP BY Rank ORDER BY count(Rank) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, rank in desc by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, I want to sort by the bars in asc please.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?, and could you show in desc by the x axis?", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, and I want to show in descending by the y axis.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) DESC", "binning": "BIN date_of_completion BY MONTH"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) DESC BIN date_of_completion BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and department_id , and visualize them by a bar chart, rank by the DEPARTMENT_ID in descending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the names and average prices of products for manufacturers whose products cost on average 150 or more?, and I want to display y axis in ascending order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name ORDER BY avg(T1.Price) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name ORDER BY avg(T1.Price) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the change of employee_id over hire_date, display by the x axis from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "When do all the researcher role staff stop working? Bin the time into YEAR interval and count them with a line chart, and could you show by the X in desc?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC", "binning": "BIN date_to BY YEAR"}, "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC BIN date_to BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "What is the relationship between  School_ID and  ACC_Percent ?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show the transaction type and the number of transactions. Show the proportion.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type", "binning": ""}, "VQL": "Visualize PIE SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on how many hosts does each nationality have? List the nationality and the count.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show the number of fate from each fate, and rank by the y axis in desc please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and show by the bar in asc please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the name of each editor and the number of journal committees they are on using a bar chart, list in asc by the x axis.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about the sum of Weight over the Sex , and group by attribute Sex, display by the Y-axis from low to high.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , SUM(Weight) FROM people GROUP BY Sex ORDER BY SUM(Weight) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , SUM(Weight) FROM people GROUP BY Sex ORDER BY SUM(Weight) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country by a pie chart.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize PIE SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of  name and the average of manufacturer , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name"}, "hardness": "Medium"}, {"nl_queries": "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, sort in asc by the Y please.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC", "binning": "BIN date_of_completion BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a pie chart about the proportion of  other_details and the sum of monthly_rental.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC", "binning": ""}, "VQL": "Visualize PIE SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of booking end dates for the apartments that have type code \"Duplex\" for each year in a bar chart, rank by the Y-axis in ascending.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = \"Duplex\"  ORDER BY COUNT(booking_start_date) ASC", "binning": "BIN booking_start_date BY YEAR"}, "VQL": "Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = \"Duplex\"  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the number of documents for each document name? Return a bar chart, display by the the total number in descending please.", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the different card types, and how many transactions have been made with each Visualize by bar chart, and display by the card_type_code in descending.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code DESC"}, "hardness": "Hard"}, {"nl_queries": "Display a bar chart for what are the cost and treatment type description of each treatment?, could you order in ascending by the Y-axis?", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of all the physicians who took appointments, and count them by a bar chart, and could you order by the names in desc please?", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, and display by the y-axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average age for each gender of student? Return a bar chart, and display from low to high by the the average of age.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , avg(age) FROM student GROUP BY sex ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , avg(age) FROM student GROUP BY sex ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me team_id by all road in a histogram, and I want to list from high to low by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "For each competition, count the number of matches, and rank in desc by the X-axis.", "db_id": "city_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition , count(*) FROM MATCH GROUP BY Competition ORDER BY Competition DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition , count(*) FROM MATCH GROUP BY Competition ORDER BY Competition DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a line chart about the change of  salary over  hire_date .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a bar chart, I want to rank in ascending by the x axis.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compare the number of songs each singer has, and show y-axis in descending order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "what are the names and id of courses having at most 2 sections?, and I want to sort in desc by the y-axis.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the founder , and group by attribute founder, and I want to sort by the total number in asc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Manufacturer) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Manufacturer) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the years of film market estimation for the market of Japan, ordered by year descending?", "db_id": "film_rank", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = \"Japan\"  ORDER BY T1.Year DESC", "binning": "BIN Year BY YEAR"}, "VQL": "Visualize LINE SELECT Year , COUNT(Year) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = \"Japan\"  ORDER BY T1.Year DESC BIN Year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "List the phone numbers of all employees, and count them by a bar chart, I want to rank by the total number from high to low.", "db_id": "chinook_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the name for regions and the number of storms for each region by a bar chart, and order total number from low to high order please.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart for how many actual delivery date of each actual delivery date, I want to sort by the Y from low to high.", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM BOOKINGS  ORDER BY COUNT(Actual_Delivery_Date) ASC", "binning": "BIN Actual_Delivery_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM BOOKINGS  ORDER BY COUNT(Actual_Delivery_Date) ASC BIN Actual_Delivery_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute All_Home, could you list ACC_Road in asc order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "For those products with a price between 60 and 120, visualize the relationship between  price and  manufacturer .", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120", "binning": ""}, "VQL": "Visualize SCATTER SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of revenue , and group by attribute headquarter, and I want to list by the Y-axis in asc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Revenue) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Revenue) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show how many carrriers for each shops in a bar chart, and list in descending by the y-axis please.", "db_id": "device", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Shop_Name , COUNT(Shop_Name) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Shop_Name ORDER BY COUNT(Shop_Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Shop_Name , COUNT(Shop_Name) FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID GROUP BY Shop_Name ORDER BY COUNT(Shop_Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart, and could you show mean meter 100 from low to high order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Please use a bar chart to show the average price of the rooms in a different decor, and display Y-axis in desc order.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY avg(basePrice) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY avg(basePrice) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the average of baseprice of each decor, and list from low to high by the decor.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC", "binning": ""}, "VQL": "Visualize BAR SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC"}, "hardness": "Medium"}, {"nl_queries": "How many events have each participants attended? Show their total number by each participant type code using a bar chart, rank in asc by the total number of count(*).", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Participant_Type_Code , SUM(count(*)) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_Type_Code ORDER BY SUM(count(*)) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Participant_Type_Code , SUM(count(*)) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_Type_Code ORDER BY SUM(count(*)) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of  hire_date and the sum of department_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many invoices were billed from each state?, could you sort Y-axis in asc order?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the working years of managers in descending order of their level, and count them by a bar chart", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC", "binning": "BIN Working_year_starts BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC BIN Working_year_starts BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show all ministers who do not belong to Progress Party, and count them by a bar chart, rank in asc by the bars.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are all the employee ids and the names of the countries in which they work?, and I want to order by the bars from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT COUNTRY_NAME , SUM(EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id GROUP BY COUNTRY_NAME ORDER BY COUNTRY_NAME ASC", "binning": ""}, "VQL": "Visualize BAR SELECT COUNTRY_NAME , SUM(EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id GROUP BY COUNTRY_NAME ORDER BY COUNTRY_NAME ASC"}, "hardness": "Hard"}, {"nl_queries": "Bar graph to show the total number from different payment method code, and order from low to high by the the total number please.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many flights in each destination city? Return a bar chart, and order by the destination from high to low please.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT destination , COUNT(destination) FROM Flight GROUP BY destination ORDER BY destination DESC", "binning": ""}, "VQL": "Visualize BAR SELECT destination , COUNT(destination) FROM Flight GROUP BY destination ORDER BY destination DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of manager name versus how many manager name", "db_id": "gas_company", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name"}, "hardness": "Easy"}, {"nl_queries": "how many students are advised by each rank of faculty? List the rank and the number of students.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank"}, "hardness": "Medium"}, {"nl_queries": "Show the stars of each director by a bar chart, and could you order stars in asc order?", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars ASC", "binning": ""}, "VQL": "Visualize BAR SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, and could you sort total number from low to high order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(MANAGER_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "List the number of games for each away team and group by home team in a stacked bar chart The x-axis is away team, could you display from low to high by the Y?", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Home_team ,  Away_team ORDER BY COUNT(Away_team) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Home_team ,  Away_team ORDER BY COUNT(Away_team) ASC"}, "hardness": "Hard"}, {"nl_queries": "How old is the youngest person for each job Visualize by bar chart, and I want to rank by the minimal age from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC"}, "hardness": "Easy"}, {"nl_queries": "Show the party and the number of drivers in each party Plot them as bar chart, and order in asc by the X-axis please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and ids of tourist attractions that are visited at least two times with a bar chart, and I want to show by the Name from low to high.", "db_id": "cre_Theme_park", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Regular_Season by a bar chart, rank from high to low by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of name and meter_100 , and order by the total number in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart to compare the number of departments located in different cities, sort bars from high to low order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CITY , COUNT(CITY) FROM locations GROUP BY CITY ORDER BY CITY DESC", "binning": ""}, "VQL": "Visualize BAR SELECT CITY , COUNT(CITY) FROM locations GROUP BY CITY ORDER BY CITY DESC"}, "hardness": "Medium"}, {"nl_queries": "Find  Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday, I want to display in desc by the total number.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show each state and the number of addresses in each state Show bar chart, and sort y-axis in desc order.", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many courses are provided in each year? Visualize with a line chart, and order X-axis in asc order.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , count(*) FROM SECTION ORDER BY year ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION ORDER BY year ASC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many music festivals have had each kind of result, ordered descending by count?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many races that had any driver whose forename is Lewis? Show me a line chart, list from high to low by the year.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\" GROUP BY year ORDER BY year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\" GROUP BY year ORDER BY year DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the dates of the orders made by the customer named \"Jeramie\", and count them by a line chart", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY YEAR"}, "VQL": "Visualize LINE SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the trend of salary over hire_date , could you rank x-axis in desc order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the change of  commission_pct over  hire_date ", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday, could you list the average of manager id in asc order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(MANAGER_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(MANAGER_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "A bar chart shows the distribution of  meter_400 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Pie. how many medications are prescribed for each brand?", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter, list in asc by the X.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC"}, "hardness": "Hard"}, {"nl_queries": "How many injured players not suffering from injury of 'Knee problem' in each match? Show me a bar chart grouping by number of matches, and rank by the y axis from low to high.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Number_of_matches , COUNT(Number_of_matches) FROM injury_accident WHERE injury != 'Knee problem' GROUP BY Number_of_matches ORDER BY COUNT(Number_of_matches) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Number_of_matches , COUNT(Number_of_matches) FROM injury_accident WHERE injury != 'Knee problem' GROUP BY Number_of_matches ORDER BY COUNT(Number_of_matches) ASC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis all games y axis team_id", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Display a bar chart for what are the names and average salaries for departments with average salary higher than 42000?, could you list names from low to high order?", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name ASC"}, "hardness": "Medium"}, {"nl_queries": "what are the numbers of wines for different grapes?, and show x-axis from high to low order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of  hire_date and the average of salary bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart for what are the different ship flags, and how many ships have each?, and rank Y-axis in descending order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the trend about  commission_pct over  hire_date .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "Count the section_description, and group by section_description with a bar chart, and display by the the number of section description in desc please.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY COUNT(section_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY COUNT(section_description) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart showing the minimum weight for each gender.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , min(weight) FROM people GROUP BY Sex", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , min(weight) FROM people GROUP BY Sex"}, "hardness": "Easy"}, {"nl_queries": "Show me a line chart to show the change of salary for those employees whose first name does not containing the letter M over the corresponding hire date, and sort in descending by the x axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE DESC"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id, and I want to order x-axis in ascending order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart of transaction type versus the total number, and rank from low to high by the names.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, I want to sort from high to low by the y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, I want to list Y in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, list x axis in descending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about  School_ID over the  ACC_Regular_Season  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and list in descending by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the position of players and the corresponding number of players with a bar chart, and order names in desc order.", "db_id": "match_season", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY Position DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute name by a bar chart, display from high to low by the Manufacturer.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Manufacturer DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Manufacturer DESC"}, "hardness": "Hard"}, {"nl_queries": "I want to know the proportion of faculty members for each sex.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Sex , count(*) FROM Faculty GROUP BY Sex", "binning": ""}, "VQL": "Visualize PIE SELECT Sex , count(*) FROM Faculty GROUP BY Sex"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show department_id from different last name, I want to sort in descending by the Y please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , DEPARTMENT_ID FROM employees ORDER BY DEPARTMENT_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , DEPARTMENT_ID FROM employees ORDER BY DEPARTMENT_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of total number of number of platforms from each location, and display by the X-axis in asc please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of  date_address_to and the amount of date_address_to bin date_address_to by weekday.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses  ORDER BY monthly_rental DESC", "binning": "BIN date_address_to BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_to BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Which committees have delegates from the Democratic party, and count them by a bar chart, and display from high to low by the total number.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Committee , COUNT(Committee) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = \"Democratic\" GROUP BY Committee ORDER BY COUNT(Committee) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Committee , COUNT(Committee) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = \"Democratic\" GROUP BY Committee ORDER BY COUNT(Committee) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of products with price higher than 1000 or lower than 500 for each product name in a pie chart.", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name", "binning": ""}, "VQL": "Visualize PIE SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about how many hosts does each nationality have? List the nationality and the count, and order by the names from high to low.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart, and order in desc by the mean employee id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(EMPLOYEE_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show the number of courses for each course description in a stacked bar chart The x-axis is course description and group by instructor's name, and sort by the bars in descending.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY EMP_FNAME ,  CRS_DESCRIPTION ORDER BY CRS_DESCRIPTION DESC", "binning": ""}, "VQL": "Visualize BAR SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY EMP_FNAME ,  CRS_DESCRIPTION ORDER BY CRS_DESCRIPTION DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the amount of founder , and group by attribute founder, and sort by the x axis in asc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , COUNT(Founder) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , COUNT(Founder) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the race class and number of races in each class, and could you display x axis in desc order please?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing manager_id across last name, could you list in descending by the x-axis?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , MANAGER_ID FROM employees ORDER BY LAST_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees ORDER BY LAST_NAME DESC"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, find  hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Scatterplot of all_games_percent vs team id by Team_Name", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of  hire_date and the average of department_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Use a histogram to show the department's id and corresponding employees' first name, list from high to low by the FIRST_NAME.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , DEPARTMENT_ID FROM employees ORDER BY FIRST_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , DEPARTMENT_ID FROM employees ORDER BY FIRST_NAME DESC"}, "hardness": "Easy"}, {"nl_queries": "Find the name and level of catalog structure with level between 5 and 10, rank by the bars in asc.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Count different addresses of each school with a bar chart, display in desc by the total number.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY count(DISTINCT dept_address) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY count(DISTINCT dept_address) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each year, bin the year into day of the week interval, and return the total number of times the team Boston Red Stockings won in the postseasons using a line chart, sort by the x axis in desc.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , SUM(count(*)) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ORDER BY year DESC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , SUM(count(*)) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ORDER BY year DESC BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Find Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday, and visualize them by a bar chart, could you sort in desc by the the average of shop id?", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) DESC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) DESC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Stacked bar chart of the number of left office for with each Minister in each left office, could you display in asc by the y-axis?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC", "binning": "BIN Left_office BY YEAR"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC BIN Left_office BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "what are all the different product names, and how many complains has each received?", "db_id": "customer_complaints", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name", "binning": ""}, "VQL": "Visualize BAR SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name"}, "hardness": "Medium"}, {"nl_queries": "For the amount of Start_from,  Start_from, visualize the trend.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "For each classroom with at least 2 classes, how many classes are offered, and show CLASS_ROOM in desc order.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CLASS_ROOM , count(*) FROM CLASS GROUP BY class_room ORDER BY CLASS_ROOM DESC", "binning": ""}, "VQL": "Visualize BAR SELECT CLASS_ROOM , count(*) FROM CLASS GROUP BY class_room ORDER BY CLASS_ROOM DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of apartment bookings for each weekday and bin booking start date by weekday interval in a bar chart, order y-axis in desc order.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) DESC", "binning": "BIN booking_start_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a scatter chart about the correlation between  commission_pct and  department_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize SCATTER SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the position of players and the corresponding number of players in a pie chart.", "db_id": "match_season", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION", "binning": ""}, "VQL": "Visualize PIE SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 400, show in descending by the ID.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and commission_pct , and rank FIRST_NAME from low to high order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FIRST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY FIRST_NAME ASC", "binning": ""}, "VQL": "Visualize BAR SELECT FIRST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY FIRST_NAME ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the headquarter , and group by attribute headquarter, display y axis from high to low order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code DESC"}, "hardness": "Hard"}, {"nl_queries": "Compare the total number of different product type codes, and rank by the bars in desc.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Line chart, the X is the hire date of employees and the Y-axis is the corresponding salary.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for what are the number of the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?", "db_id": "entrepreneur", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_of_Birth , COUNT(Date_of_Birth) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = \"Simon Woodroffe\" OR T1.Investor = \"Peter Jones\"", "binning": "BIN Date_of_Birth BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_of_Birth , COUNT(Date_of_Birth) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = \"Simon Woodroffe\" OR T1.Investor = \"Peter Jones\" BIN Date_of_Birth BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the relationship between support and consider rates of each candidate?", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Support_rate , Consider_rate FROM candidate", "binning": ""}, "VQL": "Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate"}, "hardness": "Easy"}, {"nl_queries": "Display a bar chart for what are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?", "db_id": "entrepreneur", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor", "binning": ""}, "VQL": "Visualize BAR SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of department_id over the  hire_date bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and manager_id in a bar chart, and list by the X from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all distinct product categories along with the number of mailshots in each category in a bar chart, I want to sort in asc by the x-axis.", "db_id": "customers_campaigns_ecommerce", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category ORDER BY product_category ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category ORDER BY product_category ASC"}, "hardness": "Medium"}, {"nl_queries": "For each grade, report the correlation between grade and the total number of students in the grade.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Grade , count(*) FROM list GROUP BY grade", "binning": ""}, "VQL": "Visualize SCATTER SELECT Grade , count(*) FROM list GROUP BY grade"}, "hardness": "Easy"}, {"nl_queries": "Show the booking status code and the corresponding number of bookings Show bar chart, and rank by the names from high to low please.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code ORDER BY booking_status_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code ORDER BY booking_status_code DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of dogs that received a treatment arrived in each year in a bar chart that bins arrived date by day interval, order from high to low by the Y please.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_departed) DESC", "binning": "BIN date_departed BY DAY"}, "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_departed) DESC BIN date_departed BY DAY"}, "hardness": "Hard"}, {"nl_queries": "Find the average age of students living in each city with a bar chart.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city_code , avg(age) FROM student GROUP BY city_code", "binning": ""}, "VQL": "Visualize BAR SELECT city_code , avg(age) FROM student GROUP BY city_code"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of main industry versus total number of market value, I want to show by the X-axis from low to high.", "db_id": "gas_company", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry ASC"}, "hardness": "Medium"}, {"nl_queries": "Please show me how many employees working on different countries using a pie chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT COUNTRY_NAME , COUNT(COUNTRY_NAME) FROM countries GROUP BY COUNTRY_NAME", "binning": ""}, "VQL": "Visualize PIE SELECT COUNTRY_NAME , COUNT(COUNTRY_NAME) FROM countries GROUP BY COUNTRY_NAME"}, "hardness": "Easy"}, {"nl_queries": "Compare the number of items in the type of each thing using a bar chart, and show by the names from low to high.", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code ORDER BY Type_of_Thing_Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code ORDER BY Type_of_Thing_Code ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all card type codes and the number of cards in each type Plot them as bar chart, rank from low to high by the x-axis.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot date arrived by how many date arrived as a trend line, rank in descending by the X.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs GROUP BY date_arrived ORDER BY date_arrived DESC", "binning": ""}, "VQL": "Visualize LINE SELECT date_arrived , COUNT(date_arrived) FROM Dogs GROUP BY date_arrived ORDER BY date_arrived DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of different products that are produced by companies at different headquarter cities. Plot them as bar chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , count(DISTINCT T1.name) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , count(DISTINCT T1.name) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code"}, "hardness": "Medium"}, {"nl_queries": "Show me the frequency of those years (bin year into year interval) that the team Boston Red Stockings won in the postseasons with a bar chart, I want to sort by the x axis from low to high please.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ORDER BY year ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ORDER BY year ASC BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of manager_id bin hire_date by time in a bar chart, display y axis in desc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many different locations does each school have?, and I want to list bar in desc order.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY SCHOOL_CODE DESC", "binning": ""}, "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY SCHOOL_CODE DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a bar chart, and I want to display Y-axis in ascending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "How many documents are created in each day? Bin the document date by year interval and group by document type description with a group line chart.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description", "binning": "BIN Document_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description BIN Document_Date BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart of is full time versus how many is full time, I want to list by the the number of is full time in ascending.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Is_full_time) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Is_full_time) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of the dates of the tests taken with result \"Pass\", and sort in descending by the Y.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY COUNT(date_test_taken) DESC", "binning": "BIN date_test_taken BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY COUNT(date_test_taken) DESC BIN date_test_taken BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, and order by the total number in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by country in a histogram, sort in asc by the y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, and rank sum salary from high to low order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of  last_name and  manager_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me about the distribution of ACC_Road and School_ID , and group by attribute All_Home in a bar chart, and could you sort bar from low to high order please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "what are all the different product names, and how many complains has each received?, and order X-axis in asc order.", "db_id": "customer_complaints", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Return the date of birth for all the guests with gender code \"Male\", and count them by a bar chart, list in ascending by the y axis.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = \"Male\"  ORDER BY COUNT(date_of_birth) ASC", "binning": "BIN date_of_birth BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = \"Male\"  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the average of salary , and group by attribute job_id, sort by the y-axis from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show all director names who have a movie in the year 1999 or 2000, and count them by a bar chart, and could you display by the Director in ascending?", "db_id": "culture_company", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY Director ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY Director ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of document type for different document type description in a bar chart, and I want to order x axis in desc order.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description ORDER BY Document_Type_Description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description ORDER BY Document_Type_Description DESC"}, "hardness": "Medium"}, {"nl_queries": "List all customer status codes and the number of customers having each status code, order from high to low by the y-axis.", "db_id": "driving_school", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis calendar date y axis the number of calendar date, I want to display by the Y in desc.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC", "binning": "BIN Calendar_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC BIN Calendar_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Games and Team_ID , and rank in asc by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Return the average age of captains in each class with a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS", "binning": ""}, "VQL": "Visualize PIE SELECT Class , avg(age) FROM captain GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and sort in ascending by the y axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Show different nominees and the number of musicals they have been nominated in a bar chart, and order by the the total number in asc.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart, order how many hire date from low to high order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of students who took some course and got A or C and group by first name in a pie chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT STU_FNAME , COUNT(STU_FNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_FNAME", "binning": ""}, "VQL": "Visualize PIE SELECT STU_FNAME , COUNT(STU_FNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_FNAME"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about  ID over the  meter_400  by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "List the number of completion students in each month and bin date of completion by month interval with a bar chart, display from high to low by the Y-axis.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) DESC", "binning": "BIN date_of_completion BY MONTH"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) DESC BIN date_of_completion BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_600 and ID , and could you rank in desc by the X-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about how many customers use each payment method?, order Y in asc order.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday, and I want to list in desc by the y axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a line chart on what is the average number of attendance at home games for each year?, and show in desc by the x-axis.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , avg(attendance) FROM home_game GROUP BY YEAR ORDER BY year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT year , avg(attendance) FROM home_game GROUP BY YEAR ORDER BY year DESC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and list by the y-axis from high to low.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, and could you sort by the Y-axis from high to low?", "db_id": "gymnast", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about the average of monthly_rental over the  date_address_to , and group by attribute other_details and bin date_address_to by time by a bar chart.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC", "binning": "BIN date_address_to BY MONTH"}, "VQL": "Visualize BAR SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_to BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "I want to see trend the total number over year by semester, and sort in ascending by the X.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , count(*) FROM SECTION GROUP BY semester ,  year ORDER BY year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY semester ,  year ORDER BY year ASC"}, "hardness": "Hard"}, {"nl_queries": "Bar graph to show how many country name from different country name, and could you order in descending by the y-axis please?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT COUNTRY_NAME , COUNT(COUNTRY_NAME) FROM countries GROUP BY COUNTRY_NAME ORDER BY COUNT(COUNTRY_NAME) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT COUNTRY_NAME , COUNT(COUNTRY_NAME) FROM countries GROUP BY COUNTRY_NAME ORDER BY COUNT(COUNTRY_NAME) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different template type codes, and how many templates correspond to each Plot them as bar chart, I want to show by the y axis in desc.", "db_id": "cre_Doc_Template_Mgt", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many songs were released for each format Show bar chart, and order by the formats from low to high.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the dates of performances with attending members whose roles are \"Violin\", and count them by a bar chart, and display from low to high by the Y.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart, list y-axis in ascending order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart about the number of faults for different fault short name, show in descending by the total number.", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT fault_short_name , COUNT(fault_short_name) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY fault_short_name ORDER BY COUNT(fault_short_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT fault_short_name , COUNT(fault_short_name) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY fault_short_name ORDER BY COUNT(fault_short_name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many movie reviews does each director get?, show in desc by the bar.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director DESC", "binning": ""}, "VQL": "Visualize BAR SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis location code y axis how many location code", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code", "binning": ""}, "VQL": "Visualize BAR SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code"}, "hardness": "Easy"}, {"nl_queries": "What are the average ages of artists by countries? Visualize the result with a histogram, order in descending by the X-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of Name and Weight , and list by the Y-axis in descending.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Weight FROM people ORDER BY Weight DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Weight FROM people ORDER BY Weight DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart showing average life expectancy of each continent where the average life expectancy is shorter than 72, and display in descending by the X-axis.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of the description of all aircrafts, and rank by the Y-axis in desc please.", "db_id": "aircraft", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description ORDER BY COUNT(Description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description ORDER BY COUNT(Description) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of names of high schoolers who have likes with a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, find job_id and the average of department_id , and group by attribute job_id, and visualize them by a bar chart, rank by the Y in descending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the number of entry descriptions of each problem?, and sort from low to high by the how many log entry description.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC"}, "hardness": "Medium"}, {"nl_queries": "what is the average rating of songs for each language?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize PIE SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "Please use a bar chart to show the average price of the rooms in a different decor, list bars in descending order please.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY decor DESC", "binning": ""}, "VQL": "Visualize BAR SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY decor DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and sort by the bar in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the project id and detail for the project with at least two documents?, and order by the y axis from high to low.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Project_Details , T1.Project_ID FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id ORDER BY T1.Project_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Project_Details , T1.Project_ID FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id ORDER BY T1.Project_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "A line chart shows the change of the sum of Employee_ID over  Start_from , and group by attribute Is_full_time and bin start_from by time", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time BIN Start_from BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "What is minimum hours of the students playing in different position Plot them as bar chart, and display by the y-axis in asc.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize the relationship between  CID and  Instructor .", "db_id": "college_3", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT CID , Instructor FROM COURSE ORDER BY Credits", "binning": ""}, "VQL": "Visualize SCATTER SELECT CID , Instructor FROM COURSE ORDER BY Credits"}, "hardness": "Easy"}, {"nl_queries": "What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart, rank x axis from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find  phone_number and  department_id , and visualize them by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart on how many faculty members does each building have? List the result with the name of the building, order from high to low by the x axis.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Building , count(*) FROM Faculty GROUP BY building ORDER BY Building DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Building , count(*) FROM Faculty GROUP BY building ORDER BY Building DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of  date_address_to and the sum of monthly_rental bin date_address_to by time.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC", "binning": "BIN date_address_to BY MONTH"}, "VQL": "Visualize BAR SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_to BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Give me the trend about the average of Employee_ID over Start_from bin start_from by time, show from low to high by the X.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from ASC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show the authors of their total submissions with a bar chart, display from low to high by the y-axis.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) ASC"}, "hardness": "Medium"}, {"nl_queries": ", could you order by the total number in asc?", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Create a bar chart showing capacity across name, and I want to show x axis in ascending order please.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Capacity FROM cinema ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Capacity FROM cinema ORDER BY Name ASC"}, "hardness": "Easy"}, {"nl_queries": "what are the ids and names of all start stations that were the beginning of at least 200 trips?", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT start_station_name , start_station_id FROM trip", "binning": ""}, "VQL": "Visualize BAR SELECT start_station_name , start_station_id FROM trip"}, "hardness": "Easy"}, {"nl_queries": "Show the name of each party and the corresponding number of delegates from that party. Plot them as pie chart.", "db_id": "election", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Party , SUM(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Party , SUM(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the correlation between  price and  code , and group by attribute founder in a scatter chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Price , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Price , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, order in ascending by the X-axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter ASC"}, "hardness": "Hard"}, {"nl_queries": "Count the number of employees for each city. Visualize by pie chart.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT City , count(*) FROM employee GROUP BY city", "binning": ""}, "VQL": "Visualize PIE SELECT City , count(*) FROM employee GROUP BY city"}, "hardness": "Easy"}, {"nl_queries": ", list X-axis in ascending order.", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY preferred_foot ASC", "binning": ""}, "VQL": "Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY preferred_foot ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and order in descending by the total number please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC"}, "hardness": "Medium"}, {"nl_queries": "I want to see trend of the number of creation by creation", "db_id": "department_management", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Creation , COUNT(Creation) FROM department GROUP BY Creation", "binning": ""}, "VQL": "Visualize LINE SELECT Creation , COUNT(Creation) FROM department GROUP BY Creation"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, for  commission_pct,  hire_date, visualize the trend.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Home and the average of Team_ID , and group by attribute All_Home in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "what is the average price for each type of product?, I want to display by the x axis in descending.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different classes of races, and how many races correspond to each. Show the proportion.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize PIE SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "A pie chart about what are the statuses and average populations of each city?", "db_id": "farm", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Status , avg(Population) FROM city GROUP BY Status", "binning": ""}, "VQL": "Visualize PIE SELECT Status , avg(Population) FROM city GROUP BY Status"}, "hardness": "Easy"}, {"nl_queries": "Find Is_full_time and the average of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart, and could you display y-axis from low to high order?", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "what is the code of each location and the number of documents in that location?, display in desc by the X.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many eliminations did each team have?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis acc road y axis the average of school id, and sort bar in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me maximal stu gpa by dept code in a histogram, and list in asc by the Y-axis please.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , max(stu_gpa) FROM student GROUP BY DEPT_CODE ORDER BY max(stu_gpa) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , max(stu_gpa) FROM student GROUP BY DEPT_CODE ORDER BY max(stu_gpa) ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of the total number from each class room, and order by the y axis from low to high.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CLASS_ROOM , count(*) FROM CLASS GROUP BY class_room ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT CLASS_ROOM , count(*) FROM CLASS GROUP BY class_room ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday, rank total number in asc order.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart showing the number of each company whose office is located in the building, and sort total number from high to low order.", "db_id": "company_office", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.name , COUNT(T3.name) FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T3.name ORDER BY COUNT(T3.name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.name , COUNT(T3.name) FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T3.name ORDER BY COUNT(T3.name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give the proportion of how many credits does the department offer?", "db_id": "college_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code", "binning": ""}, "VQL": "Visualize PIE SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code"}, "hardness": "Easy"}, {"nl_queries": "I want to visualize the trend about the total appears times of transcript date in the Year interval, and rank from high to low by the x-axis.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date DESC", "binning": "BIN transcript_date BY YEAR"}, "VQL": "Visualize LINE SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date DESC BIN transcript_date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "List the number of games in each season and group by away team in a group line chart.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ,  Season", "binning": ""}, "VQL": "Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ,  Season"}, "hardness": "Hard"}, {"nl_queries": "Show me the total number by category in a histogram", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  meter_600 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show the names of aircrafts and the number of times it won matches. Visualize by pie chart.", "db_id": "aircraft", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Aircraft , COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft", "binning": ""}, "VQL": "Visualize PIE SELECT Aircraft , COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, I want to sort by the the average of code in desc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code DESC"}, "hardness": "Hard"}, {"nl_queries": "List the name of all playlist, and count them by a bar chart, show by the y axis from low to high.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country with a bar chart, display by the y-axis in asc.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) ASC"}, "hardness": "Hard"}, {"nl_queries": "Plot season by how many season as a line chart, and display by the X-axis in asc.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Season , COUNT(Season) FROM game  ORDER BY Season ASC", "binning": "BIN Season BY YEAR"}, "VQL": "Visualize LINE SELECT Season , COUNT(Season) FROM game  ORDER BY Season ASC BIN Season BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and give the average of the share count for each bin What is the trend?, sort x-axis in desc order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Visualize the title and and the total star rating of the movie using a bar chart.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title", "binning": ""}, "VQL": "Visualize BAR SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title"}, "hardness": "Medium"}, {"nl_queries": "Give the name of each department and the number of employees in each in a bar chart, and order by the y-axis in asc please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPARTMENT_NAME , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPARTMENT_NAME , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "List document type codes and the number of documents in each code with a bar chart.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code"}, "hardness": "Easy"}, {"nl_queries": "List the studios of each film and the number of films produced by that studio Show bar chart, sort X in desc order.", "db_id": "film_rank", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, and sort from low to high by the Y.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Return the number of the completion date for all the tests that have \"Fail\" result, and sort in desc by the X-axis.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY date_of_completion DESC", "binning": ""}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY date_of_completion DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart about the distribution of  Name and  Weight .", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Weight FROM people", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Weight FROM people"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, a scatter chart shows the correlation between  manager_id and  department_id .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'", "binning": ""}, "VQL": "Visualize SCATTER SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'"}, "hardness": "Easy"}, {"nl_queries": "Show the different headquarters and number of companies at each headquarter, and list X-axis in descending order.", "db_id": "company_employee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarters , COUNT(*) FROM company GROUP BY Headquarters ORDER BY Headquarters DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarters , COUNT(*) FROM company GROUP BY Headquarters ORDER BY Headquarters DESC"}, "hardness": "Medium"}, {"nl_queries": "I want to know the proportion of the total number for each result.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and list from high to low by the Y-axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a pie to show the total number from different software platform.", "db_id": "device", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform", "binning": ""}, "VQL": "Visualize PIE SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform"}, "hardness": "Easy"}, {"nl_queries": "Show the country names and the corresponding number of players Show bar chart, and could you sort X-axis from low to high order?", "db_id": "match_season", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY Country_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY Country_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex, show names in ascending order.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY Sex ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY Sex ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the relationship between minimum and average gpa of all students in each department with a scatter chart grouping by department code.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(stu_gpa) , min(stu_gpa) FROM student GROUP BY DEPT_CODE", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(stu_gpa) , min(stu_gpa) FROM student GROUP BY DEPT_CODE"}, "hardness": "Easy"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends, I want to sort by the name in ascending please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"}, "hardness": "Hard"}, {"nl_queries": "For those ships that do not have a captain, tell me the proportion of their classes using a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class", "binning": ""}, "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the names of the different bank branches, and what are their total loan amounts?, display y-axis from low to high order.", "db_id": "loan_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum(amount) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum(amount) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of the description of all aircrafts, show by the Description in descending.", "db_id": "aircraft", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description ORDER BY Description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description ORDER BY Description DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of Sex and the sum of Weight , and group by attribute Sex in a bar chart, and sort X in asc order please.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , SUM(Weight) FROM people GROUP BY Sex ORDER BY Sex ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , SUM(Weight) FROM people GROUP BY Sex ORDER BY Sex ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and School_ID , and could you sort total number from high to low order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, a line chart shows the trend of  department_id over  hire_date .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'"}, "hardness": "Hard"}, {"nl_queries": "For each account type, find the average account balance of customers with credit score lower than 50 Show bar chart, and display by the bars in desc please.", "db_id": "loan_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT acc_type , avg(acc_bal) FROM customer WHERE credit_score < 50 GROUP BY acc_type ORDER BY acc_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT acc_type , avg(acc_bal) FROM customer WHERE credit_score < 50 GROUP BY acc_type ORDER BY acc_type DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of games for each home team in a pie chart.", "db_id": "game_injury", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Home_team , COUNT(Home_team) FROM game GROUP BY Home_team", "binning": ""}, "VQL": "Visualize PIE SELECT Home_team , COUNT(Home_team) FROM game GROUP BY Home_team"}, "hardness": "Easy"}, {"nl_queries": "What is the number of players who have points less than 30 for each position Plot them as bar chart, order the total number from high to low order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the official language spoken in the country whose head of state is Beatrix, and count them by a pie chart", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language", "binning": ""}, "VQL": "Visualize PIE SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language"}, "hardness": "Hard"}, {"nl_queries": "What is the relationship between  CID and  Instructor ?", "db_id": "college_3", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT CID , Instructor FROM COURSE ORDER BY Credits", "binning": ""}, "VQL": "Visualize SCATTER SELECT CID , Instructor FROM COURSE ORDER BY Credits"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and salary , and could you display by the Y-axis from low to high please?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday, and I want to rank in ascending by the sum employee id.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a scatter chart about the correlation between  author_id and  gender_mf .", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT author_id , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize SCATTER SELECT author_id , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of  hire_date and the average of manager_id bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for how many stadiums does each country have?, could you display x axis in descending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of departments created in different year and bin creation time by year in a line chart, and sort Creation in ascending order please.", "db_id": "department_management", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Creation , COUNT(Creation) FROM department  ORDER BY Creation ASC", "binning": "BIN Creation BY YEAR"}, "VQL": "Visualize LINE SELECT Creation , COUNT(Creation) FROM department  ORDER BY Creation ASC BIN Creation BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of  Is_full_time and the average of Shop_ID , and group by attribute Is_full_time.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, a line chart shows the trend of  commission_pct over  hire_date .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and manufacturer , and group by attribute headquarter in a bar chart, and order in ascending by the Y-axis please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Manufacturer ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Manufacturer ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what is the average age for a male in each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "What is the average age for each pet type? Show me a histogram.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Show the name for regions and the number of storms for each region. Plot them as pie chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "binning": ""}, "VQL": "Visualize PIE SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and list by the sum department id from high to low.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what are the names and ids of all makers with more than 3 models?, rank in descending by the x-axis please.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT FullName , Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker ORDER BY FullName DESC", "binning": ""}, "VQL": "Visualize BAR SELECT FullName , Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker ORDER BY FullName DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a bar chart, could you order by the x-axis in descending?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me the trend about what is the average number of attendance at home games for each year?, sort in asc by the x-axis.", "db_id": "baseball_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , avg(attendance) FROM home_game GROUP BY YEAR ORDER BY year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT year , avg(attendance) FROM home_game GROUP BY YEAR ORDER BY year ASC"}, "hardness": "Medium"}, {"nl_queries": "What are different nationalities of people and the corresponding number of people from each nation Visualize by bar chart, and order from high to low by the Y-axis.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many events are there for each party?, and could you order by the x axis from high to low?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "A line chart for finding the number of the enrollment date for all the tests that have \"Pass\" result, and could you order x axis from high to low order please?", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment ORDER BY date_of_enrolment DESC", "binning": ""}, "VQL": "Visualize LINE SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment ORDER BY date_of_enrolment DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Who has friends that are older than the average age? Print their name and their ages as well using a bar chart, and could you show by the name in desc?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.name DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the sum of credit value of courses with more than one prerequisite for each title? Return a bar chart.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title", "binning": ""}, "VQL": "Visualize BAR SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title"}, "hardness": "Medium"}, {"nl_queries": "Compute the number of each type of job ids for employees who make more than the highest-earning employee with title PU_MAN, with a bar chart, display y-axis in ascending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary > ( SELECT max(salary) FROM employees WHERE job_id = 'PU_MAN' ) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary > ( SELECT max(salary) FROM employees WHERE job_id = 'PU_MAN' ) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC"}, "hardness": "Hard"}, {"nl_queries": "Bar graph to show maximal age from different sex, could you order by the Y in asc?", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , max(age) FROM student GROUP BY Sex ORDER BY max(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , max(age) FROM student GROUP BY Sex ORDER BY max(age) ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart, could you rank x-axis in ascending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a pie chart about the proportion of  Sex and the sum of Height.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Sex , SUM(Height) FROM people GROUP BY Sex", "binning": ""}, "VQL": "Visualize PIE SELECT Sex , SUM(Height) FROM people GROUP BY Sex"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart for what are the name and level of catalog structure with level number between 5 and 10", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  People_ID and  Height ?", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT People_ID , Height FROM people", "binning": ""}, "VQL": "Visualize SCATTER SELECT People_ID , Height FROM people"}, "hardness": "Easy"}, {"nl_queries": "How many accounts for each customer? Show a bar chart that groups by customer's first name.", "db_id": "customers_and_invoices", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id", "binning": ""}, "VQL": "Visualize BAR SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the names and ids of all countries with at least one car maker?, and order by the Y in asc.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryId ASC", "binning": ""}, "VQL": "Visualize BAR SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryId ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, order by the bars in asc.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC"}, "hardness": "Hard"}, {"nl_queries": "Bin the installation date into Year interval, and then you can draw a bar chart to tell me how many stations each year, and could you sort y-axis in descending order please?", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC", "binning": "BIN installation_date BY YEAR"}, "VQL": "Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC BIN installation_date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show project ids and the number of documents in each project. Visualize by scatter chart.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Project_ID , count(*) FROM Documents GROUP BY project_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT Project_ID , count(*) FROM Documents GROUP BY project_id"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of manufacturer , and group by attribute name in a bar chart, and show in descending by the X-axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, and order x axis from low to high order please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of  headquarter and the average of manufacturer , and group by attribute headquarter.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter"}, "hardness": "Medium"}, {"nl_queries": "Please plot a scatter chart to tell me what is the correlation between average and maximum age for each pet type?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "For those dates with a max temperature greater than or equal to 80, I want to see the number of days for each year using a bar chart.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80", "binning": "BIN date BY YEAR"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 BIN date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Tell me the trend using a line chart to show the total number of the station over the installation date, show by the x axis from high to low.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT installation_date , COUNT(installation_date) FROM station GROUP BY installation_date ORDER BY installation_date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT installation_date , COUNT(installation_date) FROM station GROUP BY installation_date ORDER BY installation_date DESC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of  hire_date and the average of employee_id bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Regular_Season , sort by the Y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "What is the average cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, and order by the the average of cloud cover in descending please.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC", "binning": "BIN date BY YEAR"}, "VQL": "Visualize BAR SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC BIN date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, show from high to low by the Y-axis.", "db_id": "mountain_photos", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Stack bar chart of school_id vs ACC_Road based on all home, and show by the Y-axis from high to low please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show party names and the number of events for each party in a bar chart, show in descending by the y-axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what is the name of every city that has at least 15 stations and how many stations does it have?, and rank by the city from low to high.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city ASC", "binning": ""}, "VQL": "Visualize BAR SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of dogs that received a treatment departed in each day in a bar chart.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed", "binning": ""}, "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the names of races held between 2009 and 2011?, and order by the how many name in ascending.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the product name and total order quantity for each product. Visualize by pie chart.", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.product_name , SUM(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name", "binning": ""}, "VQL": "Visualize PIE SELECT T1.product_name , SUM(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name"}, "hardness": "Medium"}, {"nl_queries": "Return a line on what are all the calendar dates and day Numbers?, and order from low to high by the x-axis.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date ASC"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between  code and  revenue , and group by attribute headquarter.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter"}, "hardness": "Medium"}, {"nl_queries": "Show me about the correlation between  School_ID and  ACC_Percent  in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For each course id, how many students are registered and what are the course names, sort by the Y in descending.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return the categories of music festivals that have the result \"Awarded\", and count them by a bar chart, and I want to rank in ascending by the bars.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the relationship between  Team_ID and  ACC_Percent , and group by attribute All_Games?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "List the name and count of each product in all orders with a bar chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name", "binning": ""}, "VQL": "Visualize BAR SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, show by the X in desc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Hard"}, {"nl_queries": "List the studios of each film and the number of films produced by that studio Show bar chart, and list the total number in asc order.", "db_id": "film_rank", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000, and could you list from high to low by the Name?", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about the average of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart, and display y axis from low to high order.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the last_name by a bar chart, could you display from high to low by the Y-axis?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMPLOYEE_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMPLOYEE_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a pie to show the total number from different rank.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM Faculty GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM Faculty GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "For all employees in the same department as Clara excluding Clara, bin their hire date into the day of week interval, and count how many employees in each month for a bar chart, and rank total number in ascending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id = ( SELECT department_id FROM employees WHERE first_name = \"Clara\") AND first_name != \"Clara\"  ORDER BY COUNT(HIRE_DATE) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id = ( SELECT department_id FROM employees WHERE first_name = \"Clara\") AND first_name != \"Clara\"  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "How many documents are created in each day? Bin the document date by year interval and group by document type description with a group line chart, and I want to show in descending by the X.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY Document_Date DESC", "binning": "BIN Document_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY Document_Date DESC BIN Document_Date BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Create a bar chart showing the total number across city, and I want to order by the bar in ascending.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city ASC", "binning": ""}, "VQL": "Visualize BAR SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of email and commission_pct , I want to sort X-axis from high to low order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMAIL DESC", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMAIL DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis software platform y axis the total number, I want to show in ascending by the X-axis.", "db_id": "device", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY Software_Platform ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY Software_Platform ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about  revenue over the  name , and group by attribute founder by a bar chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the correlation between  price and  code , and group by attribute name in a scatter chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Price , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Price , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and could you display y axis in desc order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(DEPARTMENT_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(DEPARTMENT_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for finding the number of the order dates of the orders with price above 1000.", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Order_Date , COUNT(Order_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000", "binning": "BIN Order_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Order_Date , COUNT(Order_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000 BIN Order_Date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis customer status code y axis the total number, and sort from low to high by the names.", "db_id": "driving_school", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code ORDER BY customer_status_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code ORDER BY customer_status_code ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, display bars in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis competition y axis the total number ", "db_id": "city_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition , count(*) FROM MATCH GROUP BY Competition", "binning": ""}, "VQL": "Visualize BAR SELECT Competition , count(*) FROM MATCH GROUP BY Competition"}, "hardness": "Easy"}, {"nl_queries": "What is the number of each allergie type? Return a bar chart, and could you order by the x-axis from low to high?", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type GROUP BY AllergyType ORDER BY AllergyType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type GROUP BY AllergyType ORDER BY AllergyType ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the ids and names of the medicine that can interact with two or more enzymes?, could you show total number from low to high order?", "db_id": "medicine_enzyme_interaction", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id ASC"}, "hardness": "Medium"}, {"nl_queries": "Find names of trains that run through stations for the local authority Chiltern, compare the total number of name in a bar graph, and sort in asc by the y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a scatter chart for what are the ids and durations of the trips with the top 3 durations?", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3", "binning": ""}, "VQL": "Visualize SCATTER SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "What are the first names of all employees that are professors ordered by date of birth, and count them by a bar chart", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM employee WHERE emp_jobcode = 'PROF' GROUP BY EMP_FNAME ORDER BY emp_dob", "binning": ""}, "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM employee WHERE emp_jobcode = 'PROF' GROUP BY EMP_FNAME ORDER BY emp_dob"}, "hardness": "Hard"}, {"nl_queries": "For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title The result can be drawn as a trend line, and show x-axis in ascending order.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year ASC BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of rooms with king bed for each decor type, I want to rank by the y-axis in desc.", "db_id": "inn_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart about the distribution of Date_of_Birth and Height , sort from low to high by the x axis.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_of_Birth , Height FROM people ORDER BY Date_of_Birth ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Date_of_Birth , Height FROM people ORDER BY Date_of_Birth ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of how many date of enrolment from each date of enrolment, and could you list by the Y-axis in asc?", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC", "binning": "BIN date_of_enrolment BY MONTH"}, "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Return a pie chart to show the proportion of participant type code.", "db_id": "local_govt_in_alabama", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code", "binning": ""}, "VQL": "Visualize PIE SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "How many entrepreneurs correspond to each investor. ", "db_id": "entrepreneur", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor", "binning": ""}, "VQL": "Visualize PIE SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor"}, "hardness": "Easy"}, {"nl_queries": "Count the number of accounts corresponding to each customer id. Plot them as scatter chart.", "db_id": "customers_and_invoices", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , customer_id FROM Accounts GROUP BY customer_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , customer_id FROM Accounts GROUP BY customer_id"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, list by the Y in ascending please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are the names of the teachers and how many courses do they teach?", "db_id": "course_teach", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the number of date claim made across date claim made", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements", "binning": "BIN Date_Claim_Made BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements BIN Date_Claim_Made BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart for how many players played each position?", "db_id": "match_season", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION", "binning": ""}, "VQL": "Visualize PIE SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION"}, "hardness": "Easy"}, {"nl_queries": "Show the total number from each state province county", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county", "binning": ""}, "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county"}, "hardness": "Easy"}, {"nl_queries": "Show the total number from each state province county, and order X in desc order.", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY state_province_county DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY state_province_county DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of the the date of enrollment of the \"Spanish\" course, could you list in descending by the y-axis please?", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"  ORDER BY COUNT(date_of_enrolment) DESC", "binning": "BIN date_of_enrolment BY MONTH"}, "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the date of birth of professors teaching course ACCT-211? Bin the date by year interval in a line chart, and I want to list by the x axis in descending.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT EMP_DOB , COUNT(EMP_DOB) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = \"ACCT-211\"  ORDER BY EMP_DOB DESC", "binning": "BIN EMP_DOB BY YEAR"}, "VQL": "Visualize LINE SELECT EMP_DOB , COUNT(EMP_DOB) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = \"ACCT-211\"  ORDER BY EMP_DOB DESC BIN EMP_DOB BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, return a line chart about the change of  employee_id over  hire_date .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  ACC_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a line chart about the change of manager_id over hire_date , and display x-axis in asc order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and compute their total cloud cover, show by the Y-axis in asc please.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC", "binning": "BIN date BY YEAR"}, "VQL": "Visualize BAR SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC BIN date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "What is the first name and GPA of every student that has a GPA lower than average. Show bar chart.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT STU_FNAME , SUM(STU_GPA) FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student) GROUP BY STU_FNAME", "binning": ""}, "VQL": "Visualize BAR SELECT STU_FNAME , SUM(STU_GPA) FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student) GROUP BY STU_FNAME"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by competition type as a bar graph, and sort by the y axis from high to low.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the names of the top 8 countries by total invoice size and what are those sizes?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8", "binning": ""}, "VQL": "Visualize BAR SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and order by the names from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart to show how many days with a max temperature greater than or equal to 80 for each year, and could you list total number in ascending order?", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC", "binning": "BIN date BY YEAR"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC BIN date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Scatterplot of all_games_percent vs acc percent by Team_Name", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "What is the name of the technician whose team is not 'NYY', and count them by a bar chart", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM technician WHERE Team != \"NYY\" GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != \"NYY\" GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "For those employees who did not have any job in the past, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, I want to order by the y axis from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, and sort X-axis from low to high order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and sort by the y axis in ascending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose first name is ending with the letter m, visualize a bar chart to show each employee's salary by the last name, and display from low to high by the x axis please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LAST_NAME , SALARY FROM employees WHERE first_name LIKE '%m' ORDER BY LAST_NAME ASC", "binning": ""}, "VQL": "Visualize BAR SELECT LAST_NAME , SALARY FROM employees WHERE first_name LIKE '%m' ORDER BY LAST_NAME ASC"}, "hardness": "Hard"}, {"nl_queries": "How many storms occured in each region Visualize by bar chart, and rank y axis from high to low order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "A scatter chart showing the correlation between age and purchase time.", "db_id": "coffee_shop", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Time_of_purchase , Age FROM member", "binning": ""}, "VQL": "Visualize SCATTER SELECT Time_of_purchase , Age FROM member"}, "hardness": "Easy"}, {"nl_queries": "Return the number of the countries of the mountains that have a height larger than 5000.", "db_id": "climbing", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country"}, "hardness": "Medium"}, {"nl_queries": "Show the number of addrens history for each customer in a bar chart, rank in asc by the bar.", "db_id": "customers_and_products_contacts", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name ORDER BY T2.customer_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name ORDER BY T2.customer_name ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, list total number of employee id from high to low order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(EMPLOYEE_ID) DESC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(EMPLOYEE_ID) DESC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For those products with a price between 60 and 120, visualize a scatter chart about the correlation between  code and  price .", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120", "binning": ""}, "VQL": "Visualize SCATTER SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120"}, "hardness": "Easy"}, {"nl_queries": "How many completion students in each day? Return a bar chart binning date of completion by weekday.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment", "binning": "BIN date_of_completion BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment BIN date_of_completion BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "For those products with a price between 60 and 120, return a pie chart about the proportion of  name and  manufacturer.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120"}, "hardness": "Easy"}, {"nl_queries": "Show the total number of the last year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, bin the last year into weekday interval, and count the first year, and order by the Y in ascending please.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(Last_year) ASC", "binning": "BIN Last_year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(Last_year) ASC BIN Last_year BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Return me a bar chart to show the average experience working length of journalists working on different role type.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type"}, "hardness": "Medium"}, {"nl_queries": "Find  Team_Name and  All_Games_Percent , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show the number of headquarters from each headquarters", "db_id": "company_employee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what is the id and trade name of the medicines can interact with at least 3 enzymes?", "db_id": "medicine_enzyme_interaction", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id", "binning": ""}, "VQL": "Visualize BAR SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart showing how many shops in each location, and order in ascending by the x-axis.", "db_id": "device", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the correlation between  price and  manufacturer , and group by attribute name in a scatter chart.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Price , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Price , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of  meter_200 and the amount of meter_200 , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "A pie chart about how many entrepreneurs correspond to each investor?", "db_id": "entrepreneur", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor", "binning": ""}, "VQL": "Visualize PIE SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"", "binning": "BIN date_of_completion BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" BIN date_of_completion BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, find founder and the average of price , and group by attribute founder, and visualize them by a bar chart, and list from low to high by the y-axis please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Price) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Price) ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart shows the distribution of Sex and the amount of Sex , and group by attribute Sex, and sort Y-axis in descending order.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , COUNT(Sex) FROM people GROUP BY Sex ORDER BY COUNT(Sex) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , COUNT(Sex) FROM people GROUP BY Sex ORDER BY COUNT(Sex) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, return a scatter chart about the correlation between  employee_id and  commission_pct .", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "binning": ""}, "VQL": "Visualize SCATTER SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}, "hardness": "Extra Hard"}, {"nl_queries": "How many assets does each maintenance contract contain? List the number and the contract id. Plot them as scatter chart.", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id"}, "hardness": "Medium"}, {"nl_queries": "Visualize a scatter chart about the correlation between  People_ID and  Height , and group by attribute Sex.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT People_ID , Height FROM people GROUP BY Sex", "binning": ""}, "VQL": "Visualize SCATTER SELECT People_ID , Height FROM people GROUP BY Sex"}, "hardness": "Easy"}, {"nl_queries": "What is the total capacity of dorms for each gender? Give me a bar chart, and could you list by the x-axis from low to high?", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , sum(student_capacity) FROM dorm GROUP BY gender ORDER BY gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , sum(student_capacity) FROM dorm GROUP BY gender ORDER BY gender ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the name of every city that has at least 15 stations and how many stations does it have Visualize by bar chart, sort y axis in asc order please.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each branch id, what are the names of the branches that were registered after 2015 Visualize by bar chart, and I want to order by the the total number in desc.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Create a bar chart showing total number of number of platforms across location, rank from low to high by the X-axis.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of Height over the Sex , and group by attribute Sex by a bar chart, and rank x axis in ascending order.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , SUM(Height) FROM people GROUP BY Sex ORDER BY Sex ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , SUM(Height) FROM people GROUP BY Sex ORDER BY Sex ASC"}, "hardness": "Medium"}, {"nl_queries": "How many faculty members participate in each activity? Return the activity names and the number of faculty members Show bar chart, list in ascending by the x-axis.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY activity_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY activity_name ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the weight of each dog that was abandoned? Show in a bar chart, could you list y-axis in ascending order?", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY weight ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY weight ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a bar chart, could you order by the X from high to low?", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY Company_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY Company_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the first name of students who are living in the Smith Hall, and count them by a bar chart, and order Y-axis from high to low order please.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' GROUP BY Fname ORDER BY COUNT(Fname) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' GROUP BY Fname ORDER BY COUNT(Fname) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the country of origin of the artist who is female and produced a song in Bangla, and count them by a bar chart, rank by the y-axis from low to high.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the first name and age of students who have a pet, display Age from high to low order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a line chart of how how many booking end date change over the booking end date", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings GROUP BY booking_end_date", "binning": ""}, "VQL": "Visualize LINE SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings GROUP BY booking_end_date"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, show me about the distribution of  hire_date and the average of employee_id bin hire_date by weekday in a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show different publishers together with the number of publications they have in a pie chart.", "db_id": "book_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Publisher , COUNT(*) FROM publication GROUP BY Publisher", "binning": ""}, "VQL": "Visualize PIE SELECT Publisher , COUNT(*) FROM publication GROUP BY Publisher"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the cost and treatment type description of each treatment?, and could you order in asc by the total number?", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) ASC"}, "hardness": "Hard"}, {"nl_queries": "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a line chart, and order x-axis from high to low order.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY date_test_taken DESC", "binning": "BIN date_test_taken BY DAY"}, "VQL": "Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"  ORDER BY date_test_taken DESC BIN date_test_taken BY DAY"}, "hardness": "Hard"}, {"nl_queries": "Find the number of courses offered by Psychology department in each building with a bar chart, could you list in ascending by the total number?", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY COUNT(building) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY COUNT(building) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Plot date claim settled by the number of date claim settled as a line chart, and I want to order in desc by the X.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled ORDER BY Date_Claim_Settled DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled ORDER BY Date_Claim_Settled DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the founder , and group by attribute founder, and order from low to high by the bars.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC"}, "hardness": "Hard"}, {"nl_queries": "Give the name of each department and the number of employees in each Plot them as bar chart, show in desc by the bar.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPARTMENT_NAME , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name ORDER BY DEPARTMENT_NAME DESC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPARTMENT_NAME , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name ORDER BY DEPARTMENT_NAME DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, and show total number in descending order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a histogram on how many matches were played in each year?, and rank x axis from high to low order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis sum meter 100, order x axis in asc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the job_id , could you list from high to low by the y axis?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for listing the number of the names of patients who have made appointments, I want to sort by the y axis from high to low.", "db_id": "hospital_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a scatter chart that groups acc road, the x-axis is school id and the y-axis is all games percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Show different parties of people along with the number of people in each party with a bar chart, and could you show by the X in desc?", "db_id": "debate", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , COUNT(*) FROM people GROUP BY Party ORDER BY Party DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , COUNT(*) FROM people GROUP BY Party ORDER BY Party DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist Show bar chart, and display by the Y-axis in descending please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and ACC_Percent , display in asc by the y-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "What is the id and trade name of the medicines can interact with at least 3 enzymes. ", "db_id": "medicine_enzyme_interaction", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id", "binning": ""}, "VQL": "Visualize BAR SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id"}, "hardness": "Easy"}, {"nl_queries": "Give the maximum product price for each product type in a bar chart, I want to sort in asc by the total number.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY max(product_price) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY max(product_price) ASC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart, show bars from high to low order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart for the total number of each class, and could you sort from high to low by the y-axis please?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the amount of name , and group by attribute name, and rank in ascending by the Y-axis.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY COUNT(T1.Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , COUNT(T1.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY COUNT(T1.Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday, show y axis from high to low order.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) DESC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) DESC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by year interval with a line chart, and rank in desc by the X-axis.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Document_Date , COUNT(Document_Date) FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'  ORDER BY Document_Date DESC", "binning": "BIN Document_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Document_Date , COUNT(Document_Date) FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'  ORDER BY Document_Date DESC BIN Document_Date BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the titles of all movies that have between 3 and 5 stars?, and show names in descending order.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title DESC", "binning": ""}, "VQL": "Visualize BAR SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of  name and the sum of code , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, and rank by the total number in desc.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many students are in each department?, and sort from low to high by the bar.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY dept_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY dept_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of courses that have more than one prerequisites for each department in a bar chart, display Y-axis from low to high order please.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY COUNT(dept_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY COUNT(dept_name) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many churches open each year? Convert the year into the weekday interval and visualize with a bar chart, and display in ascending by the Y-axis.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) ASC", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, find name and the average of code , and group by attribute name, and visualize them by a bar chart, and list by the total number in descending.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me about the distribution of All_Road and All_Games_Percent in a bar chart, and show by the y-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  Weight over the  Date_of_Birth .", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_of_Birth , Weight FROM people", "binning": ""}, "VQL": "Visualize BAR SELECT Date_of_Birth , Weight FROM people"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between  manufacturer and  code , and group by attribute name.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.Manufacturer , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.Manufacturer , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Show the album names and ids for albums that contain tracks with unit price bigger than 1 Visualize by bar chart, show in descending by the total number please.", "db_id": "chinook_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId DESC"}, "hardness": "Hard"}, {"nl_queries": "How many countries does each continent have? List the continent id, continent name and the number of countries in a scatter chart.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.ContId , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY Continent", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.ContId , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY Continent"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis job y axis the average of age, and sort Y-axis in ascending order please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of  middle_name and  gender_mf .", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT middle_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize BAR SELECT middle_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "Show me how many long by long in a histogram, and list by the Y from high to low please.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT long , COUNT(long) FROM station  ORDER BY COUNT(long) DESC", "binning": "BIN long BY ZERO"}, "VQL": "Visualize BAR SELECT long , COUNT(long) FROM station  ORDER BY COUNT(long) DESC BIN long BY ZERO"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about  gender_mf over the  login_name .", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT login_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name", "binning": ""}, "VQL": "Visualize BAR SELECT login_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for how many gymnasts are from each hometown?", "db_id": "gymnast", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, find job_id and the average of manager_id , and group by attribute job_id, and visualize them by a bar chart, could you display JOB_ID in asc order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "How many courses for each office? Show me a stacked bar chart The x-axis is office name and group by course description, rank from high to low by the names please.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PROF_OFFICE , COUNT(PROF_OFFICE) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ,  PROF_OFFICE ORDER BY PROF_OFFICE DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PROF_OFFICE , COUNT(PROF_OFFICE) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ,  PROF_OFFICE ORDER BY PROF_OFFICE DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the booking status code and the corresponding number of bookings in a bar chart.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code", "binning": ""}, "VQL": "Visualize BAR SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, what is the relationship between  price and  revenue , and group by attribute founder?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder", "binning": ""}, "VQL": "Visualize SCATTER SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the correlation between  salary and  department_id  in a scatter chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT SALARY , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40", "binning": ""}, "VQL": "Visualize SCATTER SELECT SALARY , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40"}, "hardness": "Medium"}, {"nl_queries": "How many bookings did each customer make? List the first name as the X-axis, and the count as the Y-axis in the bar chart, list the total number in asc order.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show all the buildings along with the number of faculty members the buildings have. Show the proportion.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Building , count(*) FROM Faculty GROUP BY building", "binning": ""}, "VQL": "Visualize PIE SELECT Building , count(*) FROM Faculty GROUP BY building"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of manufacturer , and group by attribute name in a bar chart, could you list in ascending by the x-axis?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, shows the proportion of their total population with a pie chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize PIE SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "What are the ids and trade names of the medicine that can interact with at least 3 enzymes. ", "db_id": "medicine_enzyme_interaction", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id", "binning": ""}, "VQL": "Visualize BAR SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id"}, "hardness": "Easy"}, {"nl_queries": "What is the project id and detail for the project with at least two documents Plot them as bar chart, and order by the y axis from high to low.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Project_Details , T1.Project_ID FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id ORDER BY T1.Project_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Project_Details , T1.Project_ID FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id ORDER BY T1.Project_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?, list y-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and list Y-axis from low to high order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the proportion of the teams in elimination?  Display by a pie chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on what are the different card types, and how many transactions have been made with each?, and I want to rank by the x-axis in ascending please.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code ASC"}, "hardness": "Hard"}, {"nl_queries": "Tell me the distribution of the number of trains at each arrival time with a bar chart, could you display in descending by the x axis?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 Visualize by bar chart, I want to list x axis in desc order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm DESC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart, the-axis is the state, and the Y axis is each state's the smallest enrollment, show by the X from low to high.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all sport name and the number of students in a bar chart, and list by the y-axis in ascending.", "db_id": "game_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot how many class by grouped by class as a bar graph, order in asc by the Class.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of professors with a PhD degree in each department Show bar chart, and could you display X from low to high order?", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE ASC"}, "hardness": "Hard"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter, I want to show total number from high to low order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Price) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Price) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what is the average price of the products for each category?, show from low to high by the x axis.", "db_id": "customer_complaints", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Neutral and All_Games_Percent , and display by the Y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of price , and group by attribute name, show by the X in desc please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For the average of Shop_ID,  Start_from, visualize the trend.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , AVG(Shop_ID) FROM hiring", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , AVG(Shop_ID) FROM hiring BIN Start_from BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  Team_ID over the  All_Games  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  ACC_Regular_Season and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "How many students are advised by each rank of faculty? List the rank and the number of students in a bar chart, sort in desc by the the total number .", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Just compare the number of journal committees of each editor using a histogram.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id"}, "hardness": "Medium"}, {"nl_queries": " how many documents are with document type code BK for each product id?", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , Project_ID FROM Documents WHERE document_type_code = \"BK\" GROUP BY project_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , Project_ID FROM Documents WHERE document_type_code = \"BK\" GROUP BY project_id"}, "hardness": "Medium"}, {"nl_queries": "You can use a bar chart to show the employees' first name and their manager id as Y, and I want to list by the X-axis in ascending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.FIRST_NAME , T1.MANAGER_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id ORDER BY T1.FIRST_NAME ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.FIRST_NAME , T1.MANAGER_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id ORDER BY T1.FIRST_NAME ASC"}, "hardness": "Hard"}, {"nl_queries": "How many races are held in each year after 2014? Show me a bar chart.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 BIN year BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show the number of courses for each instructor in a stacked bar chart The x-axis is instructor's first name and group by course description, and I want to display in asc by the x-axis.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY EMP_FNAME ASC", "binning": ""}, "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY EMP_FNAME ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who did not have any job in the past, visualize a bar chart about the distribution of  job_id and the sum of manager_id , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID"}, "hardness": "Medium"}, {"nl_queries": "Show different type codes of products and the number of products with each type code Visualize by bar chart, sort in asc by the bars.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the numbers of wines for different grapes?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, and could you display in asc by the Y-axis?", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Is_full_time) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Is_full_time) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Road by a bar chart, rank by the y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Please give me a bar chart to show the number of players in each years played, list from high to low by the Y-axis.", "db_id": "match_season", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY COUNT(Years_Played) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY COUNT(Years_Played) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_500 and meter_100 in a bar chart, sort Y in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "How many different professors are there for the different schools Show bar chart, list y axis from high to low order.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find meter_400 and meter_100 , and visualize them by a bar chart, and I want to sort by the Y in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "What are the last names and ages of the students who are allergic to milk and cat? Plot them as bar chart.", "db_id": "allergy_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LName , Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = \"Cat\")", "binning": ""}, "VQL": "Visualize BAR SELECT LName , Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = \"Cat\")"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the average rating of songs for each language Plot them as bar chart, I want to rank by the languages from high to low.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the name of each county along with the corresponding number of delegates from that county. Plot them as bar chart.", "db_id": "election", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County_name , COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id", "binning": ""}, "VQL": "Visualize BAR SELECT County_name , COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name, and sort by the bars from low to high please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show names of technicians who are assigned to repair machines with value point more than 70, and count them by a bar chart, and I want to display from high to low by the X.", "db_id": "machine_repair", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, sort in ascending by the x axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, I want to rank in ascending by the y-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(EMPLOYEE_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(EMPLOYEE_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart, rank Y-axis from low to high order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(EMPLOYEE_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(EMPLOYEE_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "A scatter chart shows the correlation between  People_ID and  Total .", "db_id": "body_builder", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT People_ID , Total FROM body_builder", "binning": ""}, "VQL": "Visualize SCATTER SELECT People_ID , Total FROM body_builder"}, "hardness": "Easy"}, {"nl_queries": "Plot date of latest revision by the number of date of latest revision as a line chart, rank by the x axis in asc please.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision ASC", "binning": "BIN date_of_latest_revision BY MONTH"}, "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision ASC BIN date_of_latest_revision BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, visualize a line chart about the change of employee_id over hire_date , and could you display in asc by the HIRE_DATE?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of meter_500 and ID , rank in ascending by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show budget type codes and the number of documents in each budget type Show bar chart, and I want to list by the total number in desc please.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "A stacked bar chart shows the total number of ships with different nationalities and split by ship type, I want to sort Y-axis in desc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart, and display x-axis in asc order.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC", "binning": "BIN Date_in_Location_From BY YEAR"}, "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC BIN Date_in_Location_From BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of professors who is in office DRE 102 hired in each weekday with a bar chart, and I want to list from low to high by the Y.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'  ORDER BY COUNT(EMP_HIREDATE) ASC", "binning": "BIN EMP_HIREDATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'  ORDER BY COUNT(EMP_HIREDATE) ASC BIN EMP_HIREDATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a line chart about the change of the amount of date_address_to over  date_address_to , and group by attribute date_address_to.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY date_address_to ORDER BY monthly_rental DESC", "binning": ""}, "VQL": "Visualize LINE SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY date_address_to ORDER BY monthly_rental DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the Team_Name , and could you display from high to low by the X-axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of how many openning year from each openning year, I want to show names in ascending order please.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Openning_year , COUNT(Openning_year) FROM cinema GROUP BY Openning_year ORDER BY Openning_year ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Openning_year , COUNT(Openning_year) FROM cinema GROUP BY Openning_year ORDER BY Openning_year ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the names of all products?, and I want to list y axis in desc order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM Products GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM Products GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and could you show total number in descending order?", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the names of the singers and number of concerts for each person?, list in desc by the Y.", "db_id": "concert_singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many treatments in each day? Return a bar chart that bins date of treatment by weekday, and could you order in desc by the y-axis?", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) DESC", "binning": "BIN date_of_treatment BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) DESC BIN date_of_treatment BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, and list in descending by the X-axis.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and department_id , and visualize them by a bar chart, and rank in asc by the Y.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis country y axis the total number, list total number from high to low order.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, return a line chart about the change of salary over hire_date , and could you rank by the X-axis from low to high?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show maximal weight from different pettype", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and School_ID , sort in desc by the names.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the change of the amount of Start_from over  Start_from bin start_from by time in a line chart.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring BIN Start_from BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart that groups and counts the years played for players from team \"Columbus Crew\", list Years_Played from high to low order.", "db_id": "match_season", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played ORDER BY Years_Played DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Years_Played , COUNT(Years_Played) FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\" GROUP BY Years_Played ORDER BY Years_Played DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the names and total grades for each high schooler Plot them as a bar chart, and could you show by the name in asc?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home in a bar chart, and rank sum school id in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "List the name and the number of enrolled student for each course Show bar chart, and list from low to high by the Y-axis.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the number of cities in each country? Return a bar chart, sort in asc by the Y please.", "db_id": "county_public_safety", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart, and display by the y-axis in ascending please.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of teachers of each course with a bar chart, and show Y in desc order.", "db_id": "course_teach", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Course , COUNT(Course) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Course ORDER BY COUNT(Course) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Course , COUNT(Course) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Course ORDER BY COUNT(Course) DESC"}, "hardness": "Hard"}, {"nl_queries": "Just give me a pie chart that X is the details of the organization and the Y-axis is the number of things they own.", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details", "binning": ""}, "VQL": "Visualize PIE SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details"}, "hardness": "Medium"}, {"nl_queries": "Show me the proportion on what is the number of players who have points less than 30 for each position?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION", "binning": ""}, "VQL": "Visualize PIE SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION"}, "hardness": "Medium"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and salary in a bar chart, and show by the X-axis in descending.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PHONE_NUMBER , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY PHONE_NUMBER DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PHONE_NUMBER , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY PHONE_NUMBER DESC"}, "hardness": "Medium"}, {"nl_queries": "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, show X in asc order.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Find all types of store and number of them. Visualize by bar chart.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Show the average of price supplied by supplier id 3 for different product type code in a bar chart, and order by the y axis in ascending.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_type_code , AVG(product_price) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 GROUP BY product_type_code ORDER BY AVG(product_price) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_type_code , AVG(product_price) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 GROUP BY product_type_code ORDER BY AVG(product_price) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For all employees who have the letters D or S in their first name, find  hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a bar chart for total number of school id of each all home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis job y axis the average of age, I want to display by the bars in descending.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the names and ids of customers whose address contains TN?, rank bar in ascending order.", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE \"%TN%\" ORDER BY customer_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE \"%TN%\" ORDER BY customer_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Find  Sex and the amount of Sex , and group by attribute Sex, and visualize them by a bar chart.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , COUNT(Sex) FROM people GROUP BY Sex", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , COUNT(Sex) FROM people GROUP BY Sex"}, "hardness": "Easy"}, {"nl_queries": "Visualize a line chart about the change of Shop_ID over Start_from , and order by the X-axis from high to low.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , Shop_ID FROM hiring ORDER BY Start_from DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Start_from , Shop_ID FROM hiring ORDER BY Start_from DESC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and commission_pct , and visualize them by a bar chart, I want to sort X-axis from high to low order please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT EMAIL , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMAIL DESC", "binning": ""}, "VQL": "Visualize BAR SELECT EMAIL , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMAIL DESC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of  hire_date and the average of manager_id bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "A stacked bar chart showing the number of faults for different fault short name and skills required to fix them. The x-axis is skill description and group by fault short name.", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT skill_description , COUNT(skill_description) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY fault_short_name ,  skill_description", "binning": ""}, "VQL": "Visualize BAR SELECT skill_description , COUNT(skill_description) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY fault_short_name ,  skill_description"}, "hardness": "Hard"}, {"nl_queries": "What is the total capacity of dorms for each gender? Give me a bar chart, and could you display from high to low by the names please?", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , sum(student_capacity) FROM dorm GROUP BY gender ORDER BY gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , sum(student_capacity) FROM dorm GROUP BY gender ORDER BY gender DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the dates with a maximum temperature higher than 85?, show by the Y-axis in desc please.", "db_id": "bike_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC", "binning": "BIN date BY YEAR"}, "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC BIN date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show each author and the number of workshops they submitted to. Show a pie chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize PIE SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery"}, "hardness": "Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of  job_id and the amount of job_id , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 GROUP BY JOB_ID"}, "hardness": "Hard"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_700 , and order by the meter_100 from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "List the number of treatments each professional has operated with a bar chart that groups by professional's first name, and display first_name from low to high order.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name ORDER BY first_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name ORDER BY first_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a pie chart for how many actors have appeared in each musical?", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID"}, "hardness": "Medium"}, {"nl_queries": "How many exhibitions has each artist had. Show the proportion.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different product type codes.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time in a bar chart, list in descending by the x axis please.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time DESC"}, "hardness": "Medium"}, {"nl_queries": "Group and count the state province attribute of the location table to visualize a bar chart, and could you show bar from low to high order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT STATE_PROVINCE , COUNT(STATE_PROVINCE) FROM locations GROUP BY STATE_PROVINCE ORDER BY STATE_PROVINCE ASC", "binning": ""}, "VQL": "Visualize BAR SELECT STATE_PROVINCE , COUNT(STATE_PROVINCE) FROM locations GROUP BY STATE_PROVINCE ORDER BY STATE_PROVINCE ASC"}, "hardness": "Medium"}, {"nl_queries": "Group and count the move in date in a bar chart, and I want to bin the X into Year interval, and rank by the the number of date moved in in asc.", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) ASC", "binning": "BIN date_moved_in BY YEAR"}, "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events  ORDER BY COUNT(date_moved_in) ASC BIN date_moved_in BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "How many documents for each document type description? Visualize by a bar chart, and could you show Y-axis from high to low order?", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY COUNT(Document_Type_Description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY COUNT(Document_Type_Description) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the completion dates of all the tests that have result \"Fail\"?, sort in asc by the Y please.", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC", "binning": "BIN date_of_completion BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about what are the average prices of products, grouped by manufacturer name?, I want to rank by the names in descending.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "How many drama workshop groups are there in each city? Return both the city and the count Plot them as bar chart, order in ascending by the x-axis.", "db_id": "cre_Drama_Workshop_Groups", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY City_Town ASC", "binning": ""}, "VQL": "Visualize BAR SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY City_Town ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the name and training hours of players whose hours are below 1500. Plot them as pie chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500", "binning": ""}, "VQL": "Visualize PIE SELECT pName , HS FROM Player WHERE HS < 1500"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing how many arrival across arrival, rank in desc by the y axis.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of Sex and the sum of Height , and group by attribute Sex in a bar chart, could you display from low to high by the y axis?", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Sex , SUM(Height) FROM people GROUP BY Sex ORDER BY SUM(Height) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Sex , SUM(Height) FROM people GROUP BY Sex ORDER BY SUM(Height) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of services versus the number of services", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_700 , and rank x axis from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for returning the number of the lot details of lots that belong to investors with details \"l\"?, and I want to list in ascending by the y axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart of is full time versus how many is full time, sort by the Y from high to low.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Is_full_time) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Is_full_time) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality, order by the Nationality in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the highest price of product, grouped by product type? Show a bar chart, and could you list by the x axis in descending?", "db_id": "department_store", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code DESC"}, "hardness": "Easy"}, {"nl_queries": "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, sort Y-axis from high to low order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC BIN HIRE_DATE BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, and display by the total number from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(SALARY) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar graph to show the number of document type description from different document type description, and I want to order in descending by the Y.", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description ORDER BY COUNT(Document_Type_Description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description ORDER BY COUNT(Document_Type_Description) DESC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and could you display in ascending by the bar please?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart about the distribution of  state and  enr .", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Show the number of the names of editors that are on the committee of journals with sales bigger than 3000.", "db_id": "journal_committee", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name", "binning": ""}, "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name"}, "hardness": "Hard"}, {"nl_queries": "Show the ids and names of festivals that have at least two nominations for artworks by a bar chart, rank in desc by the x-axis please.", "db_id": "entertainment_awards", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID ORDER BY T3.Festival_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID ORDER BY T3.Festival_Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what is the average salary for each job title?, and show in descending by the the average of salary.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_TITLE , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title ORDER BY AVG(salary) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_TITLE , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title ORDER BY AVG(salary) DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis crs code y axis the total number ", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CRS_CODE , count(*) FROM CLASS GROUP BY crs_code", "binning": ""}, "VQL": "Visualize BAR SELECT CRS_CODE , count(*) FROM CLASS GROUP BY crs_code"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on how many students are from each city, and which cities have more than one cities?, could you rank y axis from high to low order?", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city_code , count(*) FROM student GROUP BY city_code ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT city_code , count(*) FROM student GROUP BY city_code ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and ids of all countries with at least one car maker Show bar chart, I want to list x-axis from low to high order please.", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryName ASC", "binning": ""}, "VQL": "Visualize BAR SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryName ASC"}, "hardness": "Medium"}, {"nl_queries": "Show name and distance for all aircrafts by a bar chart, list by the X-axis in asc.", "db_id": "flight_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , distance FROM Aircraft ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , distance FROM Aircraft ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me the total number by grape in a histogram, sort by the bar in desc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a pie on how many students are older than average for each gender?", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex", "binning": ""}, "VQL": "Visualize PIE SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of course name from each course name, and I want to show from low to high by the X-axis please.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY course_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a line chart about the change of the amount of date_address_to over  date_address_to , and group by attribute other_details.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY other_details ,  date_address_to ORDER BY monthly_rental DESC", "binning": ""}, "VQL": "Visualize LINE SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY other_details ,  date_address_to ORDER BY monthly_rental DESC"}, "hardness": "Hard"}, {"nl_queries": "A scatter showing the correlation between support and oppose rates for each candidate.", "db_id": "candidate_poll", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Support_rate , Oppose_rate FROM candidate", "binning": ""}, "VQL": "Visualize SCATTER SELECT Support_rate , Oppose_rate FROM candidate"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?, and display y-axis from high to low order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me the total number by product category in a histogram", "db_id": "customers_campaigns_ecommerce", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category", "binning": ""}, "VQL": "Visualize BAR SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart, that group by location and count them, list Y in descending order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) DESC"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, find job_id and the sum of salary , and group by attribute job_id, and visualize them by a bar chart, and display by the Y-axis in desc please.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, list by the Y-axis in asc please.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me the comparison of the total number of all ships' nationalities with a bar graph, and I want to sort in desc by the x axis.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "How many races are held in each year after 2014? Show me a bar chart.", "db_id": "formula_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 BIN year BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "List the names of all genres in alphabetical oder, together with its ratings in a bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT g_name , rating FROM genre ORDER BY g_name", "binning": ""}, "VQL": "Visualize BAR SELECT g_name , rating FROM genre ORDER BY g_name"}, "hardness": "Easy"}, {"nl_queries": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 , and count them by a bar chart", "db_id": "car_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000 BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, for department_id, hire_date, visualize the trend, and could you order X in desc order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 ORDER BY HIRE_DATE DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what are the names and average salaries for departments with average salary higher than 42000?, and list in ascending by the y axis.", "db_id": "college_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY AVG(salary) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY AVG(salary) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the position of players and the corresponding number of players. Visualize by pie chart.", "db_id": "match_season", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION", "binning": ""}, "VQL": "Visualize PIE SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION"}, "hardness": "Easy"}, {"nl_queries": "Group and count the move in date in a bar chart, and bin the X-axis into week day interval.", "db_id": "local_govt_and_lot", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events", "binning": "BIN date_moved_in BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events BIN date_moved_in BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  ACC_Percent , and group by attribute ACC_Regular_Season in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  other_details and the sum of monthly_rental , and group by attribute other_details.", "db_id": "behavior_monitoring", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC", "binning": ""}, "VQL": "Visualize BAR SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday, I want to order total number in asc order please.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC", "binning": "BIN Start_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC BIN Start_from BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, and rank names in desc order.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of  hire_date and the sum of manager_id bin hire_date by time.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' BIN HIRE_DATE BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "For all employees who have the letters D or S in their first name, visualize a line chart about the change of salary over hire_date , could you sort HIRE_DATE from high to low order?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "I want to know the proportion of the number of members for each address.", "db_id": "coffee_shop", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Address , count(*) FROM member GROUP BY address", "binning": ""}, "VQL": "Visualize PIE SELECT Address , count(*) FROM member GROUP BY address"}, "hardness": "Easy"}, {"nl_queries": "What is the average salary for each job title Show bar chart, and order by the JOB_TITLE in desc.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_TITLE , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title ORDER BY JOB_TITLE DESC", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_TITLE , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title ORDER BY JOB_TITLE DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what is total number of show times per dat for each cinema?, and show show times per day in asc order please.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id ORDER BY sum(T1.show_times_per_day) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id ORDER BY sum(T1.show_times_per_day) ASC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for how many hours do the students spend studying in each department?", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code", "binning": ""}, "VQL": "Visualize BAR SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, return a bar chart about the distribution of  hire_date and the amount of hire_date bin hire_date by weekday.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show me total number of vote id by state in a histogram, sort in asc by the bars.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "what are the different role codes for users, and how many users have each?, list in ascending by the Y please.", "db_id": "document_management", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the location codes and the number of documents in each location Visualize by bar chart, display by the X in descending.", "db_id": "cre_Doc_Tracking_DB", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number from each type", "db_id": "entertainment_awards", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "For those employees who did not have any job in the past, return a bar chart about the distribution of  job_id and the sum of manager_id , and group by attribute job_id.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID", "binning": ""}, "VQL": "Visualize BAR SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, for manager_id, hire_date, visualize the trend, and I want to rank x-axis in asc order.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC", "binning": ""}, "VQL": "Visualize LINE SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\". Plot them as bar chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\"", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\""}, "hardness": "Medium"}, {"nl_queries": "Show budget type codes and the number of documents in each budget type Show bar chart, could you sort by the x-axis in desc?", "db_id": "cre_Docs_and_Epenses", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY Budget_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY Budget_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Games and All_Games_Percent , I want to order x-axis in descending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "For each faculty rank, show the number of faculty members who have it Show bar chart, and I want to list from high to low by the X.", "db_id": "activity_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM Faculty GROUP BY rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM Faculty GROUP BY rank ORDER BY Rank DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number from each type, and order names in asc order.", "db_id": "entertainment_awards", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the memories and carriers of phones?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram to show the date and the amount for all the payments processed with Visa.", "db_id": "insurance_policies", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'", "binning": ""}, "VQL": "Visualize BAR SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'"}, "hardness": "Easy"}, {"nl_queries": "How much does each charge type costs? List both charge type and amount, could you list bar in asc order?", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT charge_type , charge_amount FROM Charges ORDER BY charge_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT charge_type , charge_amount FROM Charges ORDER BY charge_type ASC"}, "hardness": "Easy"}, {"nl_queries": "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and could you sort by the the average of department id in asc?", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY MONTH"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "What is the average rating star for each reviewer. ", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name", "binning": ""}, "VQL": "Visualize BAR SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a bar chart, and order in desc by the the number of date of transaction.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a bar chart for the number of services of each services, and could you display x-axis in desc order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "\u5361\u53f7\u6c42\u548c\u65e0\u610f\u4e49, I want to list from high to low by the total number of card number.", "db_id": "customers_card_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY SUM(card_number) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY SUM(card_number) DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the names of each high schooler using a bar chart, show from low to high by the how many name.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many apartment bookings in each year? Show me a bar chart binning booking start date by year, rank in ascending by the how many booking start date.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) ASC", "binning": "BIN booking_start_date BY YEAR"}, "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Give me a pie to show sum enrollment from different type.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "For those records from the products and each product's manufacturer, find headquarter and the sum of code , and group by attribute headquarter, and visualize them by a bar chart, and list by the X-axis in asc please.", "db_id": "manufactory_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of students for the cities where have more than one student, I want to sort by the Y from low to high.", "db_id": "dorm_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT city_code , count(*) FROM student GROUP BY city_code ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT city_code , count(*) FROM student GROUP BY city_code ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many dogs each owner has? Return a bar chart that groups by owner's first name.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name"}, "hardness": "Medium"}, {"nl_queries": "Display a pie chart for how many climbers are from each country?", "db_id": "climbing", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM climber GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(*) FROM climber GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "How many buildings are managed by \"Kyle\"? Return a bar chart grouping by apartment type codes, list by the apt_type_code from high to low.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT apt_type_code , COUNT(apt_type_code) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = \"Kyle\" GROUP BY apt_type_code ORDER BY apt_type_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT apt_type_code , COUNT(apt_type_code) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = \"Kyle\" GROUP BY apt_type_code ORDER BY apt_type_code DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "List the number of engineers and group by other details in a pie chart.", "db_id": "assets_maintenance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT other_details , COUNT(other_details) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY other_details", "binning": ""}, "VQL": "Visualize PIE SELECT other_details , COUNT(other_details) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY other_details"}, "hardness": "Medium"}, {"nl_queries": "For those employees who was hired before 2002-06-21, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart, rank by the Y-axis from low to high.", "db_id": "hr_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC", "binning": "BIN HIRE_DATE BY WEEKDAY"}, "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC BIN HIRE_DATE BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What are the memories and carriers of phones, order by the x-axis from low to high.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "For each cinema, show the price and group them by film title in a stacked bar chart.", "db_id": "cinema", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Title , Price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name ,  Title", "binning": ""}, "VQL": "Visualize BAR SELECT Title , Price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name ,  Title"}, "hardness": "Medium"}, {"nl_queries": "For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title. The result can be drawn as a trend line.", "db_id": "movie_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title", "binning": "BIN year BY YEAR"}, "VQL": "Visualize LINE SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title BIN year BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, show from low to high by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of name and meter_100 , sort from low to high by the X.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "What is the number of professors for different school. ", "db_id": "college_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code", "binning": ""}, "VQL": "Visualize PIE SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute All_Home, and sort in desc by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of cities in each country? Return a bar chart, and sort x-axis in descending order.", "db_id": "county_public_safety", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID GROUP BY T2.Name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID GROUP BY T2.Name ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of dogs that received a treatment arrived in each day in a line chart that groups by arrived date, and show in ascending by the X please.", "db_id": "dog_kennels", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_arrived ORDER BY date_arrived ASC", "binning": ""}, "VQL": "Visualize LINE SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_arrived ORDER BY date_arrived ASC"}, "hardness": "Hard"}, {"nl_queries": "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, and could you list by the total number from low to high please?", "db_id": "e_learning", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC", "binning": "BIN date_of_completion BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"  ORDER BY COUNT(date_of_completion) ASC BIN date_of_completion BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a line chart about the change of the amount of Start_from over Start_from bin start_from by time, order X-axis in descending order.", "db_id": "employee_hire_evaluation", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC", "binning": "BIN Start_from BY YEAR"}, "VQL": "Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC BIN Start_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road, I want to sort in desc by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the number of dates of birth of all the guests whose gender is \"Male\"?, list by the y-axis in descending.", "db_id": "apartment_rentals", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = \"Male\"  ORDER BY COUNT(date_of_birth) DESC", "binning": "BIN date_of_birth BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = \"Male\"  ORDER BY COUNT(date_of_birth) DESC BIN date_of_birth BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show the number of courses for each course description in a stacked bar chart The x-axis is course description and group by office name, I want to rank by the names in asc.", "db_id": "college_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY PROF_OFFICE ,  CRS_DESCRIPTION ORDER BY CRS_DESCRIPTION ASC", "binning": ""}, "VQL": "Visualize BAR SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY PROF_OFFICE ,  CRS_DESCRIPTION ORDER BY CRS_DESCRIPTION ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the names of products and the number of events they are in. Visualize by bar chart.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name"}, "hardness": "Medium"}]