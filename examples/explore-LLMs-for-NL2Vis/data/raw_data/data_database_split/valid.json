[{"nl_queries": "Show name and age for visitors who visited some museums more than once using a bar chart.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id"}, "hardness": "Easy"}, {"nl_queries": "histogram, X-axis is the name and the Y is the age for visitors who visited some museums more than 1 times.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id"}, "hardness": "Easy"}, {"nl_queries": "Visualize the id and age for visitors who visited some museums more than once in a scatter chart.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ID , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT ID , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id"}, "hardness": "Easy"}, {"nl_queries": "Give me a scatter chart to show the id and age for visitors who visited some museums more than once, and group by name.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ID , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id GROUP BY Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT ID , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Find the name and membership level of the visitors whose membership level is higher than 4. Plot them as pie chart.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4"}, "hardness": "Easy"}, {"nl_queries": "Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4"}, "hardness": "Easy"}, {"nl_queries": "histogram, X-axis is the name and the Y is the age for visitors who visited some museums more than 1 times, and sort in ascending by the X.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show name and age for visitors who visited some museums more than once using a bar chart, could you rank in ascending by the x-axis?", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "histogram, X-axis is the name and the Y is the age for visitors who visited some museums more than 1 times, and sort X in descending order.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Show name and age for visitors who visited some museums more than once using a bar chart, I want to sort bars from high to low order please.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "histogram, X-axis is the name and the Y is the age for visitors who visited some museums more than 1 times, order y axis in ascending order.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Age ASC"}, "hardness": "Medium"}, {"nl_queries": "Show name and age for visitors who visited some museums more than once using a bar chart, and I want to order y axis in asc order.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Age ASC"}, "hardness": "Medium"}, {"nl_queries": "histogram, X-axis is the name and the Y is the age for visitors who visited some museums more than 1 times, display y-axis in descending order.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Age DESC"}, "hardness": "Medium"}, {"nl_queries": "Show name and age for visitors who visited some museums more than once using a bar chart, rank in desc by the y axis.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Age DESC"}, "hardness": "Medium"}, {"nl_queries": "Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4, could you order by the Name from low to high?", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4, list in desc by the x axis please.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4, could you order by the y-axis in asc please?", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership ASC"}, "hardness": "Medium"}, {"nl_queries": "Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4, and list by the Level_of_membership in desc.", "db_id": "museum_visit", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC"}, "hardness": "Medium"}, {"nl_queries": "How many the artists who produced the top three highly rated songs of each country? Show the result using a pie chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize PIE SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3"}, "hardness": "Extra Hard"}, {"nl_queries": "Please give me a pie chart to show the total number of singers who sang the top 3 most highly rated songs from different countries.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize PIE SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3"}, "hardness": "Extra Hard"}, {"nl_queries": "Please give me a bar chart to show the total number of singers who sang the top 3 most highly rated songs from different countries.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3"}, "hardness": "Extra Hard"}, {"nl_queries": "How many the artists who produced the top three highly rated songs of each country? Show the result using a bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3"}, "hardness": "Extra Hard"}, {"nl_queries": "For each file format, return the number of artists who released songs in that format. ", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats", "binning": ""}, "VQL": "Visualize PIE SELECT formats , count(*) FROM files GROUP BY formats"}, "hardness": "Easy"}, {"nl_queries": "Show me a pie chart for how many songs were released for each format?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats", "binning": ""}, "VQL": "Visualize PIE SELECT formats , count(*) FROM files GROUP BY formats"}, "hardness": "Easy"}, {"nl_queries": "Display a pie chart for how many songs were released for each format?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats", "binning": ""}, "VQL": "Visualize PIE SELECT formats , count(*) FROM files GROUP BY formats"}, "hardness": "Easy"}, {"nl_queries": "How many songs were released for each format. Visualize by pie chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats", "binning": ""}, "VQL": "Visualize PIE SELECT formats , count(*) FROM files GROUP BY formats"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the total number from different formats.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats", "binning": ""}, "VQL": "Visualize PIE SELECT formats , count(*) FROM files GROUP BY formats"}, "hardness": "Easy"}, {"nl_queries": "For each file format, return the number of artists who released songs in that format. Show bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats"}, "hardness": "Easy"}, {"nl_queries": "how many songs were released for each format?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about how many songs were released for each format?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats"}, "hardness": "Easy"}, {"nl_queries": "How many songs were released for each format. Show bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show the total number from different formats", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats"}, "hardness": "Easy"}, {"nl_queries": "what is the average rating of songs for each language?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize PIE SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "What is the average rating of songs for each language. Plot them as pie chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize PIE SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart on what is the average song rating for each language?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize PIE SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "Display a pie chart for what is the average song rating for each language?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize PIE SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "What is the average song rating for each language. ", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize PIE SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show mean rating from different languages.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize PIE SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what is the average rating of songs for each language?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what is the average rating of songs for each language?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "What is the average rating of songs for each language. Plot them as bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what is the average song rating for each language?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "What is the average song rating for each language. Plot them as bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "Show me mean rating by languages in a histogram", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages"}, "hardness": "Easy"}, {"nl_queries": "List the names of all genres in alphabetical oder, together with its ratings in a bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT g_name , rating FROM genre ORDER BY g_name", "binning": ""}, "VQL": "Visualize BAR SELECT g_name , rating FROM genre ORDER BY g_name"}, "hardness": "Easy"}, {"nl_queries": "List the names of all genres in alphabetical oder, together with its ratings. Plot them as bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT g_name , rating FROM genre ORDER BY g_name", "binning": ""}, "VQL": "Visualize BAR SELECT g_name , rating FROM genre ORDER BY g_name"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what are the names of all genres in alphabetical order, combined with its ratings?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT g_name , rating FROM genre ORDER BY g_name", "binning": ""}, "VQL": "Visualize BAR SELECT g_name , rating FROM genre ORDER BY g_name"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on what are the names of all genres in alphabetical order, combined with its ratings?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT g_name , rating FROM genre ORDER BY g_name", "binning": ""}, "VQL": "Visualize BAR SELECT g_name , rating FROM genre ORDER BY g_name"}, "hardness": "Easy"}, {"nl_queries": "What are the names of all genres in alphabetical order, combined with its ratings. Show bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT g_name , rating FROM genre ORDER BY g_name", "binning": ""}, "VQL": "Visualize BAR SELECT g_name , rating FROM genre ORDER BY g_name"}, "hardness": "Easy"}, {"nl_queries": "What is the country of origin of the artist who is female and produced a song in Bangla, and count them by a pie chart", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country", "binning": ""}, "VQL": "Visualize PIE SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country"}, "hardness": "Hard"}, {"nl_queries": "What countries are the female artists who sung in the language Bangla from, and count them by a pie chart", "db_id": "music_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country", "binning": ""}, "VQL": "Visualize PIE SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country"}, "hardness": "Hard"}, {"nl_queries": "What is the country of origin of the artist who is female and produced a song in Bangla, and count them by a bar chart", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country"}, "hardness": "Hard"}, {"nl_queries": "What countries are the female artists who sung in the language Bangla from, and count them by a bar chart", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country"}, "hardness": "Hard"}, {"nl_queries": "Show the shortest duration and lowest rating of songs grouped by genre using a bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration)", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration)"}, "hardness": "Easy"}, {"nl_queries": "Let the shortest duration as bar chart's X-axis and the most poorly rated song for each genre as the Y.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration)", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration)"}, "hardness": "Easy"}, {"nl_queries": "What are the and their lowest rating of songs grouped by genre and ordered by genre? Plot them by a bar chart.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT genre_is , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY genre_is ORDER BY T2.genre_is", "binning": ""}, "VQL": "Visualize BAR SELECT genre_is , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY genre_is ORDER BY T2.genre_is"}, "hardness": "Medium"}, {"nl_queries": "Can you draw a bar chart that the X is genere and the Y is their lowest rating of songs grouped by genre, and ordered by genre", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT genre_is , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY genre_is ORDER BY T2.genre_is", "binning": ""}, "VQL": "Visualize BAR SELECT genre_is , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY genre_is ORDER BY T2.genre_is"}, "hardness": "Medium"}, {"nl_queries": "For each file format, return the number of artists who released songs in that format Show bar chart, and show by the X in asc.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC"}, "hardness": "Medium"}, {"nl_queries": "how many songs were released for each format?, order in asc by the x axis.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many songs were released for each format?, and list X in ascending order.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC"}, "hardness": "Medium"}, {"nl_queries": "How many songs were released for each format Show bar chart, and order by the formats from low to high.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different formats, list X in ascending order.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC"}, "hardness": "Medium"}, {"nl_queries": "For each file format, return the number of artists who released songs in that format Show bar chart, and order bar from high to low order.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats DESC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many songs were released for each format?, and could you rank by the x axis from high to low?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats DESC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different formats, and I want to rank by the x axis in desc.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats DESC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats DESC"}, "hardness": "Medium"}, {"nl_queries": "how many songs were released for each format?, show from high to low by the x axis.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats DESC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats DESC"}, "hardness": "Medium"}, {"nl_queries": "How many songs were released for each format Show bar chart, I want to sort by the bar in descending.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats DESC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many songs were released for each format?, could you rank in asc by the Y?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different formats, and display by the the total number in asc please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "how many songs were released for each format?, and could you order by the y-axis in asc please?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each file format, return the number of artists who released songs in that format Show bar chart, and could you show in ascending by the the total number ?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many songs were released for each format Show bar chart, and display Y-axis in ascending order.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each file format, return the number of artists who released songs in that format Show bar chart, and order in desc by the y axis please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many songs were released for each format Show bar chart, I want to order Y in desc order.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many songs were released for each format?, could you list Y-axis in descending order?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different formats, order in descending by the y-axis please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "how many songs were released for each format?, and sort in descending by the y axis.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the average rating of songs for each language?, and I want to order by the x axis in asc.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average rating of songs for each language Plot them as bar chart, I want to sort languages in ascending order.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average song rating for each language Plot them as bar chart, display by the X in ascending.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the average song rating for each language?, list by the names from low to high please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average rating of songs for each language?, display by the X in ascending.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me mean rating by languages in a histogram, and list by the names from low to high please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average rating of songs for each language Plot them as bar chart, I want to rank by the languages from high to low.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the average rating of songs for each language?, list x-axis from high to low order please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the average song rating for each language?, list from high to low by the languages please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average rating of songs for each language?, list x-axis from high to low order please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me mean rating by languages in a histogram, sort X from high to low order.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average song rating for each language Plot them as bar chart, and show by the languages in desc.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average song rating for each language Plot them as bar chart, order by the mean rating in ascending please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average rating of songs for each language?, and display by the mean rating from low to high.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the average rating of songs for each language?, order by the mean rating in ascending please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me mean rating by languages in a histogram, order by the mean rating in ascending please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average rating of songs for each language Plot them as bar chart, and order in ascending by the Y-axis.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the average song rating for each language?, and list from low to high by the y axis.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average rating of songs for each language Plot them as bar chart, and could you list from high to low by the total number?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me mean rating by languages in a histogram, order by the mean rating in desc please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the average rating of songs for each language?, and could you sort total number in desc order?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average rating of songs for each language?, order by the mean rating in desc please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the average song rating for each language?, could you sort total number in desc order?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average song rating for each language Plot them as bar chart, could you list from high to low by the total number?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC"}, "hardness": "Medium"}, {"nl_queries": "What countries are the female artists who sung in the language Bangla from, and count them by a bar chart, could you sort bars from low to high order?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the country of origin of the artist who is female and produced a song in Bangla, and count them by a bar chart, I want to display by the bars in asc please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What countries are the female artists who sung in the language Bangla from, and count them by a bar chart, list in desc by the X-axis.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the country of origin of the artist who is female and produced a song in Bangla, and count them by a bar chart, and order by the x axis from high to low please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the country of origin of the artist who is female and produced a song in Bangla, and count them by a bar chart, rank by the y-axis from low to high.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What countries are the female artists who sung in the language Bangla from, and count them by a bar chart, and I want to rank by the y-axis in asc.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the country of origin of the artist who is female and produced a song in Bangla, and count them by a bar chart, could you order by the Y from high to low?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What countries are the female artists who sung in the language Bangla from, and count them by a bar chart, and display Y-axis from high to low order.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the shortest duration and lowest rating of songs grouped by genre using a bar chart, could you rank in asc by the bar please?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T1.duration) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T1.duration) ASC"}, "hardness": "Medium"}, {"nl_queries": "Let the shortest duration as bar chart's X-axis and the most poorly rated song for each genre as the Y, show in asc by the min(T1.duration).", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T1.duration) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T1.duration) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the shortest duration and lowest rating of songs grouped by genre using a bar chart, and rank bars from high to low order please.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T1.duration) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T1.duration) DESC"}, "hardness": "Medium"}, {"nl_queries": "Let the shortest duration as bar chart's X-axis and the most poorly rated song for each genre as the Y, and order X-axis in descending order.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T1.duration) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T1.duration) DESC"}, "hardness": "Medium"}, {"nl_queries": "Let the shortest duration as bar chart's X-axis and the most poorly rated song for each genre as the Y, could you list in asc by the total number?", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the shortest duration and lowest rating of songs grouped by genre using a bar chart, I want to show by the Y in asc.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the shortest duration and lowest rating of songs grouped by genre using a bar chart, and display y axis in desc order.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) DESC"}, "hardness": "Medium"}, {"nl_queries": "Let the shortest duration as bar chart's X-axis and the most poorly rated song for each genre as the Y, and list from high to low by the total number.", "db_id": "music_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a pie chart for how many music festivals have had each kind of result, ordered descending by count?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a pie on how many music festivals have had each kind of result, ordered descending by count?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many music festivals have had each kind of result, ordered descending by count. Show a pie chart.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many music festivals have had each kind of result, ordered descending by count?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many music festivals have had each kind of result, ordered descending by count?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many music festivals have had each kind of result, ordered descending by count. Show bar chart.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of music festivals of each category by a pie chart.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category", "binning": ""}, "VQL": "Visualize PIE SELECT Category , COUNT(*) FROM music_festival GROUP BY Category"}, "hardness": "Easy"}, {"nl_queries": "Return the number of music festivals of each category. Show a pie chart.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category", "binning": ""}, "VQL": "Visualize PIE SELECT Category , COUNT(*) FROM music_festival GROUP BY Category"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the total number from different category.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category", "binning": ""}, "VQL": "Visualize PIE SELECT Category , COUNT(*) FROM music_festival GROUP BY Category"}, "hardness": "Easy"}, {"nl_queries": "Return the number of music festivals of each category in a bar chart.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category"}, "hardness": "Easy"}, {"nl_queries": "Return the number of music festivals of each category. ", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category"}, "hardness": "Easy"}, {"nl_queries": "Show me the total number by category in a histogram", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category"}, "hardness": "Easy"}, {"nl_queries": "What are the famous titles and ages of each artist, listed in descending order by age using a bar chart.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Famous_Title , Age FROM artist ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Famous_Title , Age FROM artist ORDER BY Age DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram showing the famous titles and ages of each artist with the age in descending order.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Famous_Title , Age FROM artist ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Famous_Title , Age FROM artist ORDER BY Age DESC"}, "hardness": "Easy"}, {"nl_queries": "What are the category of music festivals with result \"Awarded\", and count them by a pie chart", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category", "binning": ""}, "VQL": "Visualize PIE SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category"}, "hardness": "Medium"}, {"nl_queries": "A pie chart for what are the number of the category of music festivals with result \"Awarded\"?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category", "binning": ""}, "VQL": "Visualize PIE SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the category of music festivals with result \"Awarded\"?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category", "binning": ""}, "VQL": "Visualize PIE SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category"}, "hardness": "Medium"}, {"nl_queries": "Return the number of the categories of music festivals that have the result \"Awarded\".", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category", "binning": ""}, "VQL": "Visualize PIE SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category"}, "hardness": "Medium"}, {"nl_queries": "A pie chart for returning the number of the categories of music festivals that have the result \"Awarded\".", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category", "binning": ""}, "VQL": "Visualize PIE SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category"}, "hardness": "Medium"}, {"nl_queries": "Return the categories of music festivals that have the result \"Awarded\", and count them by a pie chart", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category", "binning": ""}, "VQL": "Visualize PIE SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category"}, "hardness": "Medium"}, {"nl_queries": "What are the category of music festivals with result \"Awarded\", and count them by a bar chart", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the category of music festivals with result \"Awarded\"?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category"}, "hardness": "Medium"}, {"nl_queries": "Return the number of the categories of music festivals that have the result \"Awarded\".", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category"}, "hardness": "Medium"}, {"nl_queries": "Return the categories of music festivals that have the result \"Awarded\", and count them by a bar chart", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the category of music festivals with result \"Awarded\"?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for returning the number of the categories of music festivals that have the result \"Awarded\".", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category"}, "hardness": "Medium"}, {"nl_queries": "Return the results of all music festivals using a pie chart.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "What is the proportion of results for each music festival? Counld you show me the result with a pie chart.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "Please give me a pie chart to show the proportion of results of all music festival.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing the number of result across result.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "Please give me a bar chart to show the distribution of results of all music festival.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "What is the distibution of results for each music festival? Could you show me the result with a bar chart.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "Return the results of all music festivals using a bar chart.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "Plot the number of result by grouped by result as a bar graph", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "Return the number of music festivals of each category in a bar chart, and sort X in ascending order.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY Category ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY Category ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of music festivals of each category, I want to rank by the x-axis in asc.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY Category ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY Category ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by category in a histogram, and order in asc by the names please.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY Category ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY Category ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of music festivals of each category, show by the Category in desc.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY Category DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY Category DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of music festivals of each category in a bar chart, and could you order x axis in descending order?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY Category DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY Category DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by category in a histogram, list in descending by the names.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY Category DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY Category DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of music festivals of each category in a bar chart, could you show by the Y in asc?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of music festivals of each category, show total number from low to high order.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by category in a histogram, show total number from low to high order.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of music festivals of each category, order from high to low by the Y.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by category in a histogram, could you order Y in descending order?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of music festivals of each category in a bar chart, and sort by the y-axis from high to low.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for returning the number of the categories of music festivals that have the result \"Awarded\", sort from low to high by the x-axis.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the category of music festivals with result \"Awarded\", and count them by a bar chart, I want to list x axis in asc order.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the category of music festivals with result \"Awarded\"?, I want to list x axis in asc order.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC"}, "hardness": "Hard"}, {"nl_queries": "Return the categories of music festivals that have the result \"Awarded\", and count them by a bar chart, and I want to rank in ascending by the bars.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the category of music festivals with result \"Awarded\"?, could you order in ascending by the X-axis?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC"}, "hardness": "Hard"}, {"nl_queries": "Return the number of the categories of music festivals that have the result \"Awarded\", and show by the names in asc.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC"}, "hardness": "Hard"}, {"nl_queries": "Return the categories of music festivals that have the result \"Awarded\", and count them by a bar chart, sort by the X in desc please.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for returning the number of the categories of music festivals that have the result \"Awarded\", and rank Category in descending order please.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the category of music festivals with result \"Awarded\"?, and I want to order by the X-axis from high to low.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the category of music festivals with result \"Awarded\"?, show in descending by the x axis.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category DESC"}, "hardness": "Hard"}, {"nl_queries": "Return the number of the categories of music festivals that have the result \"Awarded\", show in descending by the x axis.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the category of music festivals with result \"Awarded\", and count them by a bar chart, and show by the x axis in desc.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the category of music festivals with result \"Awarded\", and count them by a bar chart, show from low to high by the y axis.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for returning the number of the categories of music festivals that have the result \"Awarded\", could you show in ascending by the Y?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the category of music festivals with result \"Awarded\"?, could you list Y from low to high order?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the category of music festivals with result \"Awarded\"?, could you list Y from low to high order?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return the categories of music festivals that have the result \"Awarded\", and count them by a bar chart, and sort by the y-axis from low to high.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return the number of the categories of music festivals that have the result \"Awarded\", show from low to high by the y axis.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return the categories of music festivals that have the result \"Awarded\", and count them by a bar chart, and order by the y axis from high to low.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for returning the number of the categories of music festivals that have the result \"Awarded\", and I want to rank y-axis in desc order please.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the category of music festivals with result \"Awarded\", and count them by a bar chart, and show by the Y-axis from high to low.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return the number of the categories of music festivals that have the result \"Awarded\", and display Y from high to low order.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the category of music festivals with result \"Awarded\"?, I want to rank y-axis in desc order please.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the category of music festivals with result \"Awarded\"?, rank by the Y in descending.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY COUNT(Category) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return the results of all music festivals using a bar chart, and I want to rank x-axis from low to high order.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of result by grouped by result as a bar graph, could you order bar from low to high order please?", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the distibution of results for each music festival? Could you show me the result with a bar chart, and order by the X in ascending please.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart to show the distribution of results of all music festival, and show by the x axis from low to high please.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart to show the distribution of results of all music festival, I want to rank from high to low by the X.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of result by grouped by result as a bar graph, and I want to rank from high to low by the X.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the results of all music festivals using a bar chart, list in descending by the X.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the distibution of results for each music festival? Could you show me the result with a bar chart, list from high to low by the x axis.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart to show the distribution of results of all music festival, and display by the Y-axis from low to high.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the distibution of results for each music festival? Could you show me the result with a bar chart, show by the y axis in ascending please.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of result by grouped by result as a bar graph, and show by the y axis in ascending please.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the results of all music festivals using a bar chart, I want to sort Y in ascending order.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of result by grouped by result as a bar graph, and sort by the Y in descending.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the distibution of results for each music festival? Could you show me the result with a bar chart, show by the y axis in descending.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart to show the distribution of results of all music festival, and order Y from high to low order.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the results of all music festivals using a bar chart, and show Y in desc order.", "db_id": "music_4", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show names of musicals and the number of actors who have appeared in the musicals by a pie chart.", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID"}, "hardness": "Medium"}, {"nl_queries": "Show names of musicals and the number of actors who have appeared in the musicals. ", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID"}, "hardness": "Medium"}, {"nl_queries": "Show me a pie chart for how many actors have appeared in each musical?", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID"}, "hardness": "Medium"}, {"nl_queries": "Draw a pie chart for how many actors have appeared in each musical?", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID"}, "hardness": "Medium"}, {"nl_queries": "How many actors have appeared in each musical. Show a pie chart.", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID"}, "hardness": "Medium"}, {"nl_queries": "Show names of musicals and the number of actors who have appeared in the musicals in a bar chart.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID"}, "hardness": "Medium"}, {"nl_queries": "Show names of musicals and the number of actors who have appeared in the musicals. Show bar chart.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID"}, "hardness": "Medium"}, {"nl_queries": "how many actors have appeared in each musical?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many actors have appeared in each musical?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID"}, "hardness": "Medium"}, {"nl_queries": "How many actors have appeared in each musical. Plot them as bar chart.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID"}, "hardness": "Medium"}, {"nl_queries": "Calculate the number of actors in each duration of actors using a bar chart.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration"}, "hardness": "Easy"}, {"nl_queries": "Group and count the durations for each actor with a bar graph.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis duration y axis how many duration", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration"}, "hardness": "Easy"}, {"nl_queries": "A pie chart for showing the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee", "binning": ""}, "VQL": "Visualize PIE SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee"}, "hardness": "Hard"}, {"nl_queries": "Show the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee", "binning": ""}, "VQL": "Visualize PIE SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee"}, "hardness": "Hard"}, {"nl_queries": "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and count them by a pie chart", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee", "binning": ""}, "VQL": "Visualize PIE SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee"}, "hardness": "Hard"}, {"nl_queries": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards, and count them by a pie chart", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee", "binning": ""}, "VQL": "Visualize PIE SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for showing the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee"}, "hardness": "Hard"}, {"nl_queries": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards, and count them by a bar chart", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee"}, "hardness": "Hard"}, {"nl_queries": "Show the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee"}, "hardness": "Hard"}, {"nl_queries": "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and count them by a bar chart", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee"}, "hardness": "Hard"}, {"nl_queries": "Show different nominees and the number of musicals they have been nominated in a pie chart.", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize PIE SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "Plot a pie chart to show different nominees and the number of musicals they have been nominated.", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize PIE SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "A pie chart about how many musicals has each nominee been nominated for?", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize PIE SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart for how many musicals has each nominee been nominated for?", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize PIE SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "How many musicals has each nominee been nominated for. Show a pie chart.", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize PIE SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each nominee.", "db_id": "musical", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize PIE SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "Show different nominees and the number of musicals they have been nominated in a bar chart.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "Show different nominees and the number of musicals they have been nominated. Plot them as bar chart.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on how many musicals has each nominee been nominated for?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram for how many musicals has each nominee been nominated for?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "How many musicals has each nominee been nominated for. Plot them as bar chart.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis nominee y axis the total number ", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee"}, "hardness": "Easy"}, {"nl_queries": "how many actors have appeared in each musical?, order x-axis in ascending order please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show names of musicals and the number of actors who have appeared in the musicals in a bar chart, and order in asc by the names.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "How many actors have appeared in each musical Plot them as bar chart, and order x axis in asc order please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on how many actors have appeared in each musical?, and show x axis in asc order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show names of musicals and the number of actors who have appeared in the musicals Show bar chart, and rank in asc by the names.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on how many actors have appeared in each musical?, sort bar in desc order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show names of musicals and the number of actors who have appeared in the musicals Show bar chart, sort bar in desc order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show names of musicals and the number of actors who have appeared in the musicals in a bar chart, and could you rank from high to low by the bars?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "how many actors have appeared in each musical?, sort bar in desc order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "How many actors have appeared in each musical Plot them as bar chart, and rank from high to low by the x axis.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "how many actors have appeared in each musical?, and list from low to high by the y-axis please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many actors have appeared in each musical Plot them as bar chart, list in ascending by the Y-axis.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show names of musicals and the number of actors who have appeared in the musicals Show bar chart, and display Y-axis in ascending order please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on how many actors have appeared in each musical?, could you display in asc by the total number?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show names of musicals and the number of actors who have appeared in the musicals in a bar chart, and list from low to high by the y-axis please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on how many actors have appeared in each musical?, and order y-axis in desc order please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many actors have appeared in each musical Plot them as bar chart, and could you rank from high to low by the the total number ?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "how many actors have appeared in each musical?, could you rank in descending by the Y?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show names of musicals and the number of actors who have appeared in the musicals in a bar chart, sort Y-axis in desc order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show names of musicals and the number of actors who have appeared in the musicals Show bar chart, could you rank from high to low by the the total number ?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis duration y axis how many duration, and could you order X from low to high order?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration ASC"}, "hardness": "Medium"}, {"nl_queries": "Group and count the durations for each actor with a bar graph, sort from low to high by the bar please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration ASC"}, "hardness": "Medium"}, {"nl_queries": "Calculate the number of actors in each duration of actors using a bar chart, rank from low to high by the names please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration ASC"}, "hardness": "Medium"}, {"nl_queries": "Group and count the durations for each actor with a bar graph, order in descending by the X-axis please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis duration y axis how many duration, I want to sort in desc by the bar please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration DESC"}, "hardness": "Medium"}, {"nl_queries": "Calculate the number of actors in each duration of actors using a bar chart, could you list X-axis in desc order please?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration DESC"}, "hardness": "Medium"}, {"nl_queries": "Calculate the number of actors in each duration of actors using a bar chart, and I want to list by the total number in ascending.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) ASC"}, "hardness": "Medium"}, {"nl_queries": "Group and count the durations for each actor with a bar graph, order in asc by the total number.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis duration y axis how many duration, display by the y axis in asc.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) ASC"}, "hardness": "Medium"}, {"nl_queries": "Calculate the number of actors in each duration of actors using a bar chart, order by the how many duration in descending.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis duration y axis how many duration, and rank by the y-axis in descending.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) DESC"}, "hardness": "Medium"}, {"nl_queries": "Group and count the durations for each actor with a bar graph, and I want to rank Y-axis in desc order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for showing the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", could you sort names from low to high order please?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards, and count them by a bar chart, and I want to order x-axis in ascending order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", sort x-axis from low to high order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and count them by a bar chart, display by the x-axis in asc please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", I want to sort x axis from high to low order please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and display x-axis in desc order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and count them by a bar chart, and could you list from high to low by the X-axis?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards, and count them by a bar chart, display x-axis in desc order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY Nominee DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and count them by a bar chart, I want to sort y axis in ascending order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", show by the y axis from low to high.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards, and count them by a bar chart, could you show y-axis in ascending order?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and show by the total number in ascending please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards, and count them by a bar chart, display by the y-axis in descending.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and list the number of nominee in desc order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and count them by a bar chart, and could you list from high to low by the total number?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and I want to show from high to low by the y-axis.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = \"Tony Award\" OR Award = \"Cleavant Derricks\" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart on how many musicals has each nominee been nominated for?, and could you order by the X in asc?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC"}, "hardness": "Medium"}, {"nl_queries": "How many musicals has each nominee been nominated for Plot them as bar chart, and display from low to high by the x axis.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different nominees and the number of musicals they have been nominated Plot them as bar chart, and display from low to high by the x axis.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different nominees and the number of musicals they have been nominated in a bar chart, show Nominee from low to high order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nominee y axis the total number, and display from low to high by the x axis.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many musicals has each nominee been nominated for?, and display from low to high by the x axis.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different nominees and the number of musicals they have been nominated Plot them as bar chart, show in desc by the X.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many musicals has each nominee been nominated for?, show in desc by the X.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC"}, "hardness": "Medium"}, {"nl_queries": "How many musicals has each nominee been nominated for Plot them as bar chart, I want to order by the X in desc.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different nominees and the number of musicals they have been nominated in a bar chart, I want to order by the X in desc.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many musicals has each nominee been nominated for?, and I want to show by the x-axis in descending.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nominee y axis the total number, I want to show by the x-axis in descending.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many musicals has each nominee been nominated for?, order Y-axis in ascending order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many musicals has each nominee been nominated for?, show Y in ascending order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nominee y axis the total number, show Y in ascending order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different nominees and the number of musicals they have been nominated Plot them as bar chart, and list Y-axis in ascending order.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many musicals has each nominee been nominated for Plot them as bar chart, show in asc by the total number.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different nominees and the number of musicals they have been nominated in a bar chart, and order by the the total number in asc.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many musicals has each nominee been nominated for Plot them as bar chart, rank in descending by the total number.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many musicals has each nominee been nominated for?, sort by the Y-axis in desc please.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different nominees and the number of musicals they have been nominated Plot them as bar chart, and could you order the total number in desc order?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nominee y axis the total number, and rank in descending by the total number.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many musicals has each nominee been nominated for?, and could you order the total number in desc order?", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different nominees and the number of musicals they have been nominated in a bar chart, sort in desc by the Y-axis.", "db_id": "musical", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the names of each high schooler using a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Can you show me a bar chart to answer how many people with different names for each high schooler?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show the number of name from different name", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Show the names and the total grades of each high schooler by a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Show the names and sum grades of each high schooler. Plot them as bar graph.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what are the names and their total grades for each high schooler?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "What are the names and their total grades for each high schooler? Show me the result using a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "What are the names and total grades for each high schooler. Plot them as a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis name y axis total number of grade", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Show the names and their average grades of each high schooler with a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Show the names and their average grades of each high schooler. ", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Display a bar chart for what are the names and the average grades for each high schooler?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what are the names and the average grades for each high schooler?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "What are the names and the average grades for each high schooler. Plot them as a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show mean grade from different name", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Show the number of names of high school students with a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name"}, "hardness": "Medium"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends with a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends. ", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the names of the high schoolers and how many friends does each have?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "What are the names of the high schoolers and how many friends does each have. Visualize by bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends in a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends. Plot them as bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names of the high schoolers and how many friends does each have?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "What are the names of the high schoolers and how many friends does each have. Show bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name"}, "hardness": "Medium"}, {"nl_queries": "Show the number of names of high schoolers who have likes with a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart to show the number of names of high schoolers who have likes.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name"}, "hardness": "Medium"}, {"nl_queries": "Show me the frequency of names of high schoolers who have likes with a bar chart.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name"}, "hardness": "Medium"}, {"nl_queries": "Count the names of each high schooler using a bar chart, and order by the x axis from low to high.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of name from different name, list bar from low to high order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Can you show me a bar chart to answer how many people with different names for each high schooler?, order by the x axis from low to high.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of name from different name, display by the x axis in desc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the names of each high schooler using a bar chart, display by the x axis in desc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Can you show me a bar chart to answer how many people with different names for each high schooler?, and show from high to low by the x axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of name from different name, and could you order Y in asc order please?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Can you show me a bar chart to answer how many people with different names for each high schooler?, show from low to high by the how many name.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the names of each high schooler using a bar chart, show from low to high by the how many name.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of name from different name, display in descending by the y axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Can you show me a bar chart to answer how many people with different names for each high schooler?, and I want to rank how many name from high to low order please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the names of each high schooler using a bar chart, order in desc by the how many name.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and total grades for each high schooler Plot them as a bar chart, and could you show by the name in asc?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis name y axis total number of grade, show by the bar in ascending.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and the total grades of each high schooler by a bar chart, and could you show by the name in asc?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the names and their total grades for each high schooler?, and order x-axis in asc order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and sum grades of each high schooler Plot them as bar graph, I want to list bar in asc order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and their total grades for each high schooler? Show me the result using a bar chart, and order x-axis in asc order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the names and their total grades for each high schooler?, and display from high to low by the X.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis name y axis total number of grade, display by the bar in desc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and their total grades for each high schooler? Show me the result using a bar chart, and display by the bar in desc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and total grades for each high schooler Plot them as a bar chart, sort name in desc order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and sum grades of each high schooler Plot them as bar graph, could you order from high to low by the x-axis?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and the total grades of each high schooler by a bar chart, sort in desc by the name.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis name y axis total number of grade, and order from low to high by the total number of grade.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and the total grades of each high schooler by a bar chart, display y axis in asc order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and total grades for each high schooler Plot them as a bar chart, and order by the Y in ascending.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the names and their total grades for each high schooler?, could you display in asc by the Y-axis?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and sum grades of each high schooler Plot them as bar graph, and could you sort Y-axis in ascending order?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and their total grades for each high schooler? Show me the result using a bar chart, I want to sort by the y-axis in asc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the names and their total grades for each high schooler?, and show by the y-axis from high to low please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and their total grades for each high schooler? Show me the result using a bar chart, and show in descending by the total number of grade.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis name y axis total number of grade, show by the y-axis from high to low please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and sum grades of each high schooler Plot them as bar graph, and display in desc by the Y-axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and the total grades of each high schooler by a bar chart, list by the total number in descending.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and total grades for each high schooler Plot them as a bar chart, show by the y-axis from high to low please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and their average grades of each high schooler, order X-axis in asc order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show mean grade from different name, could you list by the name from low to high?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and the average grades for each high schooler?, list in asc by the x axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and their average grades of each high schooler with a bar chart, list in asc by the x axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the names and the average grades for each high schooler?, and display in ascending by the bar please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and the average grades for each high schooler Plot them as a bar chart, I want to show X-axis from low to high order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and their average grades of each high schooler with a bar chart, and I want to rank by the bars in descending.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and their average grades of each high schooler, and order in descending by the bar.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show mean grade from different name, and could you rank in descending by the names?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the names and the average grades for each high schooler?, and I want to rank by the bars in descending.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and the average grades for each high schooler Plot them as a bar chart, I want to show from high to low by the X please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and the average grades for each high schooler?, and list X in desc order please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and the average grades for each high schooler?, and list by the y axis from low to high.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and the average grades for each high schooler Plot them as a bar chart, could you display by the Y in asc?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show mean grade from different name, could you order from low to high by the Y please?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and their average grades of each high schooler, and could you order from low to high by the total number please?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the names and the average grades for each high schooler?, and list by the y axis from low to high.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and their average grades of each high schooler with a bar chart, order in ascending by the y axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the names and the average grades for each high schooler?, sort Y from high to low order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and their average grades of each high schooler with a bar chart, could you rank in descending by the Y-axis?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and the average grades for each high schooler Plot them as a bar chart, and could you list in desc by the y axis?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and their average grades of each high schooler, could you list in desc by the y axis?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show mean grade from different name, could you show y-axis in desc order?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and the average grades for each high schooler?, and could you show y-axis in desc order?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of names of high school students with a bar chart, and show in asc by the bars please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of names of high school students with a bar chart, and order from high to low by the name please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of names of high school students with a bar chart, and rank in asc by the y-axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of names of high school students with a bar chart, and sort by the total number in desc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the high schoolers and how many friends does each have Visualize by bar chart, list in asc by the name please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what are the names of the high schoolers and how many friends does each have?, could you list in ascending by the X-axis?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends, I want to sort by the name in ascending please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends with a bar chart, and display from low to high by the x-axis please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?, and could you list in ascending by the X-axis?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends with a bar chart, I want to order by the x axis in desc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?, rank in desc by the X.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what are the names of the high schoolers and how many friends does each have?, and could you rank by the x-axis in desc?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the high schoolers and how many friends does each have Visualize by bar chart, rank in desc by the X.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends, and could you rank by the x-axis in desc?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends with a bar chart, display by the y axis from low to high.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what are the names of the high schoolers and how many friends does each have?, rank in ascending by the Y.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends, and order by the total number in asc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the high schoolers and how many friends does each have Visualize by bar chart, I want to order Y-axis in ascending order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?, and rank in asc by the sum count(*).", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends with a bar chart, order by the Y in descending.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?, and display total number in descending order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends, and could you show by the total number in desc please?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what are the names of the high schoolers and how many friends does each have?, and rank from high to low by the y axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the high schoolers and how many friends does each have Visualize by bar chart, and order by the Y in descending.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends Plot them as bar chart, order by the bar in ascending.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the high schoolers and how many friends does each have Show bar chart, sort by the bar in asc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?, and I want to display X-axis from low to high order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"}, "hardness": "Hard"}, {"nl_queries": "Display a bar chart for what are the names of the high schoolers and how many friends does each have?, order by the bar in ascending.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends in a bar chart, and order X-axis in ascending order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends Plot them as bar chart, and rank in desc by the X-axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?, and display X-axis in desc order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC"}, "hardness": "Hard"}, {"nl_queries": "Display a bar chart for what are the names of the high schoolers and how many friends does each have?, display by the bars in desc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends in a bar chart, and order in descending by the x axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the high schoolers and how many friends does each have Show bar chart, and rank in desc by the X-axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the high schoolers and how many friends does each have Show bar chart, and rank by the Y-axis in asc please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC"}, "hardness": "Hard"}, {"nl_queries": "Display a bar chart for what are the names of the high schoolers and how many friends does each have?, and order in ascending by the total number.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends Plot them as bar chart, rank in ascending by the y axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends in a bar chart, rank in ascending by the y axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?, show in ascending by the Y.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the names of the high schoolers and how many friends does each have?, and display Y-axis in descending order please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends in a bar chart, and show by the Y-axis in desc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of high school students and their corresponding number of friends Plot them as bar chart, display Y-axis in descending order please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the high schoolers and how many friends does each have Show bar chart, and show by the y axis in desc.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC"}, "hardness": "Hard"}, {"nl_queries": "Display a bar chart for what are the names of the high schoolers and how many friends does each have?, and display Y-axis in descending order please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me the frequency of names of high schoolers who have likes with a bar chart, and sort in asc by the names.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of names of high schoolers who have likes with a bar chart, and display names in asc order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart to show the number of names of high schoolers who have likes, and could you list bar from low to high order?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart to show the number of names of high schoolers who have likes, and sort by the X in descending please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me the frequency of names of high schoolers who have likes with a bar chart, rank x-axis from high to low order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of names of high schoolers who have likes with a bar chart, and list from high to low by the names.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart to show the number of names of high schoolers who have likes, and could you sort Y from low to high order?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me the frequency of names of high schoolers who have likes with a bar chart, and could you show by the total number in asc?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of names of high schoolers who have likes with a bar chart, and show by the Y-axis from low to high please.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of names of high schoolers who have likes with a bar chart, show in desc by the Y-axis.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me the frequency of names of high schoolers who have likes with a bar chart, could you rank in descending by the the number of name?", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart to show the number of names of high schoolers who have likes, list y axis from high to low order.", "db_id": "network_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Pie chart. what is average age for different job title?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Show me a pie chart for what is average age for different job title?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "What is average age for different job title. Show the proportion.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart on how old is the average person for each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Display a pie chart for how old is the average person for each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "How old is the average person for each job. Show a pie chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show mean age from different job.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what is average age for different job title?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about what is average age for different job title?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "What is average age for different job title. Visualize by bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on how old is the average person for each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Display a bar chart for how old is the average person for each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "How old is the average person for each job. Show bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis job y axis the average of age", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "what is average age of male for different job title?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "Visualize a pie chart with what is average age of male for different job title?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "What is average age of male for different job title. Show the proportion.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "Draw a pie chart for what is the average age for a male in each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "Return a pie on what is the average age for a male in each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "What is the average age for a male in each job. ", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is average age of male for different job title?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what is average age of male for different job title?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "What is average age of male for different job title. Visualize by bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what is the average age for a male in each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "what is the average age for a male in each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "What is the average age for a male in each job. Visualize by bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job"}, "hardness": "Medium"}, {"nl_queries": "Display a pie chart for what is minimum age for different job title?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Return a pie on what is minimum age for different job title?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "What is minimum age for different job title. Show a pie chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart on how old is the youngest person for each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Pie chart. how old is the youngest person for each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "How old is the youngest person for each job. Show the proportion.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing minimal age across job.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what is minimum age for different job title?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "what is minimum age for different job title?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "What is minimum age for different job title. ", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on how old is the youngest person for each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "how old is the youngest person for each job?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "How old is the youngest person for each job. Visualize by bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Show minimal age from each job", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Find the number of people who is under 40 for each gender. Show the proportion.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender", "binning": ""}, "VQL": "Visualize PIE SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender"}, "hardness": "Medium"}, {"nl_queries": "Give the proportion of how many people are under 40 for each gender?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender", "binning": ""}, "VQL": "Visualize PIE SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender"}, "hardness": "Medium"}, {"nl_queries": "Pie chart. how many people are under 40 for each gender?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender", "binning": ""}, "VQL": "Visualize PIE SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender"}, "hardness": "Medium"}, {"nl_queries": "How many people are under 40 for each gender. Show a pie chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender", "binning": ""}, "VQL": "Visualize PIE SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender"}, "hardness": "Medium"}, {"nl_queries": "Find the number of people who is under 40 for each gender. ", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many people are under 40 for each gender?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender"}, "hardness": "Medium"}, {"nl_queries": "How many people are under 40 for each gender. Plot them as bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender"}, "hardness": "Medium"}, {"nl_queries": "Count the job title of all people using a pie chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , COUNT(job) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , COUNT(job) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "What are the job titles of every person? Please plot the result with a pie chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , COUNT(job) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , COUNT(job) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Compute the total the number of job across job as a pie chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT job , COUNT(job) FROM Person GROUP BY job", "binning": ""}, "VQL": "Visualize PIE SELECT job , COUNT(job) FROM Person GROUP BY job"}, "hardness": "Easy"}, {"nl_queries": "Count job title of all people ordered by their names using a bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , COUNT(job) FROM Person GROUP BY job ORDER BY name", "binning": ""}, "VQL": "Visualize BAR SELECT job , COUNT(job) FROM Person GROUP BY job ORDER BY name"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart to show the names and job titles of every person ordered alphabetically by name?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , COUNT(job) FROM Person GROUP BY job ORDER BY name", "binning": ""}, "VQL": "Visualize BAR SELECT job , COUNT(job) FROM Person GROUP BY job ORDER BY name"}, "hardness": "Medium"}, {"nl_queries": "Can you compute the number of people with different job titles? Plot them as a bar graph.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , COUNT(job) FROM Person GROUP BY job ORDER BY name", "binning": ""}, "VQL": "Visualize BAR SELECT job , COUNT(job) FROM Person GROUP BY job ORDER BY name"}, "hardness": "Medium"}, {"nl_queries": "Who has friends that are older than the average age? Print their names and their ages as well using a pie chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)", "binning": ""}, "VQL": "Visualize PIE SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)"}, "hardness": "Medium"}, {"nl_queries": "Whare the friends, and ages of all people who are older than the average age of a person? Plot the result by a pie chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)", "binning": ""}, "VQL": "Visualize PIE SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)"}, "hardness": "Medium"}, {"nl_queries": "Who has friends that are older than the average age? Print their name and their ages as well using a bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)"}, "hardness": "Medium"}, {"nl_queries": "Give a me a bar graph to show the friends's name, and ages of all people who are older than the average age of a person", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)"}, "hardness": "Medium"}, {"nl_queries": "Who has friends that are older than the average age? Print their friends and their ages as well using a pie chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)", "binning": ""}, "VQL": "Visualize PIE SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)"}, "hardness": "Medium"}, {"nl_queries": "Whare the friends, and ages of all people who are older than the average age of a person? Visualize the result by a pie chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)", "binning": ""}, "VQL": "Visualize PIE SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)"}, "hardness": "Medium"}, {"nl_queries": "Who has friends that are older than the average age? Print their friends and their ages as well using a bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)", "binning": ""}, "VQL": "Visualize BAR SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)"}, "hardness": "Medium"}, {"nl_queries": "Please return me a histogram to show the friends, and ages of all people who are older than the average age of a person? ", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)", "binning": ""}, "VQL": "Visualize BAR SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)"}, "hardness": "Medium"}, {"nl_queries": "Draw a pie chart for what is the average age for each gender?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize PIE SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "Display a pie chart for what is the average age for each gender?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize PIE SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "What is the average age for each gender. Show a pie chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize PIE SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart with how old is each gender, on average?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize PIE SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "Pie. how old is each gender, on average?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize PIE SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "How old is each gender, on average. Show a pie chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize PIE SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the average of age from different gender.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize PIE SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on what is the average age for each gender?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what is the average age for each gender?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "What is the average age for each gender. Visualize by bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram for how old is each gender, on average?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on how old is each gender, on average?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "How old is each gender, on average. Plot them as bar chart.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show the average of age from different gender", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender"}, "hardness": "Easy"}, {"nl_queries": "What is average age for different job title Visualize by bar chart, I want to rank by the bars from low to high.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is average age for different job title?, and display names from low to high order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for how old is the average person for each job?, sort by the X in ascending.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is average age for different job title?, I want to rank by the bars from low to high.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how old is the average person for each job?, and display by the X-axis in asc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Medium"}, {"nl_queries": "How old is the average person for each job Show bar chart, sort by the X in ascending.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis job y axis the average of age, display by the x axis from low to high.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is average age for different job title?, order by the x-axis in desc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how old is the average person for each job?, rank x axis in descending order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Medium"}, {"nl_queries": "What is average age for different job title Visualize by bar chart, I want to display by the job from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is average age for different job title?, I want to display by the bars in descending.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for how old is the average person for each job?, and rank x axis in descending order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis job y axis the average of age, I want to display by the bars in descending.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Medium"}, {"nl_queries": "How old is the average person for each job Show bar chart, list X-axis in descending order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is average age for different job title?, and rank y axis in ascending order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is average age for different job title Visualize by bar chart, and rank y axis in ascending order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how old is the average person for each job?, and display y axis in asc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for how old is the average person for each job?, display y axis in asc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis job y axis the average of age, and sort Y-axis in ascending order please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "How old is the average person for each job Show bar chart, and show by the Y from low to high.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is average age for different job title?, I want to show from low to high by the the average of age.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how old is the average person for each job?, and could you list by the y axis in desc please?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis job y axis the average of age, list by the y-axis in desc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for how old is the average person for each job?, sort in descending by the total number.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is average age for different job title Visualize by bar chart, rank total number from high to low order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is average age for different job title?, and display by the Y-axis from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "How old is the average person for each job Show bar chart, and rank total number from high to low order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is average age for different job title?, and rank by the the average of age in desc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is average age of male for different job title Visualize by bar chart, rank from low to high by the x-axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC"}, "hardness": "Hard"}, {"nl_queries": "what is the average age for a male in each job?, and sort X-axis from low to high order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on what is average age of male for different job title?, sort bar in asc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the average age for a male in each job Visualize by bar chart, and sort X-axis from low to high order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what is the average age for a male in each job?, rank from low to high by the x-axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what is average age of male for different job title?, order by the job in asc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what is average age of male for different job title?, and sort in desc by the x axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on what is average age of male for different job title?, sort bars in descending order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the average age for a male in each job Visualize by bar chart, and show x-axis in desc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what is the average age for a male in each job?, I want to rank by the X from high to low please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC"}, "hardness": "Hard"}, {"nl_queries": "What is average age of male for different job title Visualize by bar chart, and rank by the x axis from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC"}, "hardness": "Hard"}, {"nl_queries": "what is the average age for a male in each job?, rank X in desc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC"}, "hardness": "Hard"}, {"nl_queries": "What is average age of male for different job title Visualize by bar chart, list by the mean age in asc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Hard"}, {"nl_queries": "what is the average age for a male in each job?, list by the mean age in asc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on what is average age of male for different job title?, I want to rank in asc by the Y-axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what is the average age for a male in each job?, and could you show Y-axis in ascending order?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the average age for a male in each job Visualize by bar chart, and show total number in asc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what is average age of male for different job title?, I want to order y axis in ascending order please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what is average age of male for different job title?, and show Y in desc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on what is average age of male for different job title?, and sort y axis in descending order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is average age of male for different job title Visualize by bar chart, sort by the Y in desc please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the average age for a male in each job Visualize by bar chart, and rank by the y-axis in desc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what is the average age for a male in each job?, rank in descending by the Y.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Hard"}, {"nl_queries": "what is the average age for a male in each job?, and sort y axis in descending order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC"}, "hardness": "Hard"}, {"nl_queries": "how old is the youngest person for each job?, and could you order x-axis from low to high order?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on how old is the youngest person for each job?, could you rank by the x-axis in asc?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what is minimum age for different job title?, and display job in asc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Easy"}, {"nl_queries": "Show minimal age from each job, could you order x-axis from low to high order?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Easy"}, {"nl_queries": "How old is the youngest person for each job Visualize by bar chart, could you list in ascending by the names?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Easy"}, {"nl_queries": "what is minimum age for different job title?, order x-axis in ascending order please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Easy"}, {"nl_queries": "What is minimum age for different job title, and could you list names from low to high order please?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC"}, "hardness": "Easy"}, {"nl_queries": "What is minimum age for different job title, sort in descending by the X.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what is minimum age for different job title?, and could you display by the X-axis from high to low?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Easy"}, {"nl_queries": "how old is the youngest person for each job?, and sort in descending by the X.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on how old is the youngest person for each job?, and could you display names in desc order please?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Easy"}, {"nl_queries": "How old is the youngest person for each job Visualize by bar chart, and rank by the X from high to low please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Easy"}, {"nl_queries": "what is minimum age for different job title?, and list by the job in desc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Easy"}, {"nl_queries": "Show minimal age from each job, I want to show by the bars in descending.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on how old is the youngest person for each job?, and order minimal age from low to high order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC"}, "hardness": "Easy"}, {"nl_queries": "How old is the youngest person for each job Visualize by bar chart, I want to sort by the total number in ascending please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC"}, "hardness": "Easy"}, {"nl_queries": "what is minimum age for different job title?, and list y axis in asc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC"}, "hardness": "Easy"}, {"nl_queries": "Show minimal age from each job, and order minimal age from low to high order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC"}, "hardness": "Easy"}, {"nl_queries": "What is minimum age for different job title, and show in asc by the y-axis please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC"}, "hardness": "Easy"}, {"nl_queries": "how old is the youngest person for each job?, display from low to high by the y axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what is minimum age for different job title?, I want to sort by the total number in ascending please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what is minimum age for different job title?, and I want to rank in desc by the y axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC"}, "hardness": "Easy"}, {"nl_queries": "Show minimal age from each job, I want to rank by the minimal age from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC"}, "hardness": "Easy"}, {"nl_queries": "How old is the youngest person for each job Visualize by bar chart, and I want to rank by the minimal age from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC"}, "hardness": "Easy"}, {"nl_queries": "What is minimum age for different job title, show in descending by the total number.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on how old is the youngest person for each job?, and I want to rank by the minimal age from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC"}, "hardness": "Easy"}, {"nl_queries": "what is minimum age for different job title?, and rank by the y-axis from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC"}, "hardness": "Easy"}, {"nl_queries": "how old is the youngest person for each job?, and show y-axis in descending order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC"}, "hardness": "Easy"}, {"nl_queries": "Find the number of people who is under 40 for each gender, and list x axis in asc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many people are under 40 for each gender?, order by the gender from low to high.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender ASC"}, "hardness": "Hard"}, {"nl_queries": "How many people are under 40 for each gender Plot them as bar chart, list x axis in asc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many people are under 40 for each gender?, and rank in desc by the x-axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of people who is under 40 for each gender, list bar in desc order please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender DESC"}, "hardness": "Hard"}, {"nl_queries": "How many people are under 40 for each gender Plot them as bar chart, and could you show by the X in descending?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many people are under 40 for each gender?, and rank from low to high by the the total number .", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many people are under 40 for each gender Plot them as bar chart, list in ascending by the y-axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of people who is under 40 for each gender, and could you order in ascending by the Y?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many people are under 40 for each gender?, display Y in desc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many people are under 40 for each gender Plot them as bar chart, and display Y in desc order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of people who is under 40 for each gender, sort from high to low by the the total number .", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give a me a bar graph to show the friends's name, and ages of all people who are older than the average age of a person, and show by the names from low to high.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.name ASC"}, "hardness": "Hard"}, {"nl_queries": "Who has friends that are older than the average age? Print their name and their ages as well using a bar chart, and list by the X in ascending.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.name ASC"}, "hardness": "Hard"}, {"nl_queries": "Who has friends that are older than the average age? Print their name and their ages as well using a bar chart, and could you show by the name in desc?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.name DESC"}, "hardness": "Hard"}, {"nl_queries": "Give a me a bar graph to show the friends's name, and ages of all people who are older than the average age of a person, show by the X-axis in desc please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.name DESC"}, "hardness": "Hard"}, {"nl_queries": "Give a me a bar graph to show the friends's name, and ages of all people who are older than the average age of a person, and display by the y-axis from low to high please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.age ASC"}, "hardness": "Hard"}, {"nl_queries": "Who has friends that are older than the average age? Print their name and their ages as well using a bar chart, rank by the y axis in asc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.age ASC"}, "hardness": "Hard"}, {"nl_queries": "Who has friends that are older than the average age? Print their name and their ages as well using a bar chart, and I want to rank in descending by the y axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.age DESC"}, "hardness": "Hard"}, {"nl_queries": "Give a me a bar graph to show the friends's name, and ages of all people who are older than the average age of a person, and order by the y-axis in desc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.age DESC"}, "hardness": "Hard"}, {"nl_queries": "Please return me a histogram to show the friends, and ages of all people who are older than the average age of a person?, order from low to high by the x axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY friend ASC", "binning": ""}, "VQL": "Visualize BAR SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY friend ASC"}, "hardness": "Hard"}, {"nl_queries": "Who has friends that are older than the average age? Print their friends and their ages as well using a bar chart, and order from low to high by the x axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY friend ASC", "binning": ""}, "VQL": "Visualize BAR SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY friend ASC"}, "hardness": "Hard"}, {"nl_queries": "Please return me a histogram to show the friends, and ages of all people who are older than the average age of a person?, list in desc by the x-axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY friend DESC", "binning": ""}, "VQL": "Visualize BAR SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY friend DESC"}, "hardness": "Hard"}, {"nl_queries": "Who has friends that are older than the average age? Print their friends and their ages as well using a bar chart, and could you show by the friend in descending?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY friend DESC", "binning": ""}, "VQL": "Visualize BAR SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY friend DESC"}, "hardness": "Hard"}, {"nl_queries": "Please return me a histogram to show the friends, and ages of all people who are older than the average age of a person?, could you rank in ascending by the age?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY age ASC"}, "hardness": "Hard"}, {"nl_queries": "Who has friends that are older than the average age? Print their friends and their ages as well using a bar chart, and order by the age in ascending.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY age ASC"}, "hardness": "Hard"}, {"nl_queries": "Please return me a histogram to show the friends, and ages of all people who are older than the average age of a person?, display by the y-axis from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY age DESC"}, "hardness": "Hard"}, {"nl_queries": "Who has friends that are older than the average age? Print their friends and their ages as well using a bar chart, and display by the Y-axis from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY age DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the average age for each gender Visualize by bar chart, and show X-axis in ascending order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average age for each gender?, and show X-axis in ascending order.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the average of age from different gender, and I want to display in asc by the X-axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how old is each gender, on average?, rank in asc by the x-axis.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC"}, "hardness": "Medium"}, {"nl_queries": "How old is each gender, on average Plot them as bar chart, order by the X-axis in ascending.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how old is each gender, on average?, and could you show bars in asc order please?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what is the average age for each gender?, and could you rank x-axis in asc order?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC"}, "hardness": "Medium"}, {"nl_queries": "How old is each gender, on average Plot them as bar chart, and rank from high to low by the gender.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how old is each gender, on average?, rank from high to low by the gender.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the average of age from different gender, and I want to show by the bars in desc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what is the average age for each gender?, and sort X in descending order please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how old is each gender, on average?, and sort X in descending order please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average age for each gender Visualize by bar chart, and could you rank by the x-axis in descending?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average age for each gender?, and I want to show by the bars in desc.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how old is each gender, on average?, list in ascending by the mean age.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what is the average age for each gender?, and rank by the y-axis from low to high.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average age for each gender?, and could you show by the Y from low to high please?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average age for each gender Visualize by bar chart, I want to order by the Y in asc please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the average of age from different gender, and could you list total number in asc order?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "How old is each gender, on average Plot them as bar chart, I want to order by the Y in asc please.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how old is each gender, on average?, could you show by the Y from low to high please?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what is the average age for each gender?, I want to list by the mean age in descending.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average age for each gender?, I want to sort by the Y from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the average of age from different gender, could you order from high to low by the y-axis?", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average age for each gender Visualize by bar chart, I want to list by the mean age in descending.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how old is each gender, on average?, and show by the Y-axis from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "How old is each gender, on average Plot them as bar chart, I want to sort by the Y from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how old is each gender, on average?, show by the Y-axis from high to low.", "db_id": "network_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the average age of journalists working on different role type, show the result with a pie chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type", "binning": ""}, "VQL": "Visualize PIE SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type"}, "hardness": "Medium"}, {"nl_queries": "Find the average age of journalists working on different role type, show the result with a bar chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type"}, "hardness": "Medium"}, {"nl_queries": "Return me a bar chart to show the average experience working length of journalists working on different role type.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type"}, "hardness": "Medium"}, {"nl_queries": "Visualize the average experience working length of journalists working on different role type using a bar chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type"}, "hardness": "Medium"}, {"nl_queries": "Find the correlation between average age and experience working length of journalists working on different role type with a scatter plot.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(t1.age) , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(t1.age) , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type"}, "hardness": "Medium"}, {"nl_queries": "Please return a scatter chart with two attributes: the  average age and experience working length of journalists working on different role type.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(t1.age) , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(t1.age) , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type"}, "hardness": "Medium"}, {"nl_queries": "Visualize the average experience working length of journalists working on different role type using a pie chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type", "binning": ""}, "VQL": "Visualize PIE SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type"}, "hardness": "Medium"}, {"nl_queries": "Return me a pie chart to show the average experience working length of journalists working on different role type.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type", "binning": ""}, "VQL": "Visualize PIE SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type"}, "hardness": "Medium"}, {"nl_queries": "Find the correlation between average age and experience working length of journalists working on different role type with a scatter plot.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(t1.age) , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY Work_Type", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(t1.age) , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY Work_Type"}, "hardness": "Medium"}, {"nl_queries": "Please return a scatter chart with two attributes: the average age and experience working length of journalists working on different role type.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(t1.age) , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY Work_Type", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(t1.age) , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY Work_Type"}, "hardness": "Medium"}, {"nl_queries": "Show the different nationalities and the number of journalists of each nationality with a pie chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show the different nationalities and the number of journalists of each nationality. Show the proportion.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing the total number across nationality.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show the different nationalities and the number of journalists of each nationality in a bar chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show the different nationalities and the number of journalists of each nationality. Visualize by bar chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Plot the total number by grouped by nationality as a bar graph", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show me the propotion of the journalist's nationality using a pie chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart, count and group by nationality from the journalist table.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing how many nationality across nationality.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Compare the total number of journalist with different nationality using a bar chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart, count and group by nationality from the journalist table.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show the number of nationality from different nationality", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on what are the nationalities and the total ages of journalists?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what are the nationalities and total ages of journalists?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "What are the nationalities and the taotal ages of journalists. Visualize by a bar chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of sum age from each nationality", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the nationalities and their average ages of journalists?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about what are the nationalities and their average ages of journalists?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "What are the nationalities and their average ages of journalists. Show me a bar chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of nationality versus the average of age", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show me a pie chart for what are the nationalities and the total ages of journalists?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart with what are the nationalities and the total ages of journalists?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "What are the nationalities and the total ages of journalists. Return me a pie chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing total number of age across nationality.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show the names of journalists and the number of events they reported in a bar chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name"}, "hardness": "Medium"}, {"nl_queries": "Show the names of journalists and the number of events they reported. Visualize by bar chart.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name"}, "hardness": "Medium"}, {"nl_queries": "Find the average age of journalists working on different role type, show the result with a bar chart, and list by the x-axis from low to high.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the average age of journalists working on different role type, show the result with a bar chart, and I want to rank by the Work_Type from high to low please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the average age of journalists working on different role type, show the result with a bar chart, sort y axis in ascending order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(t1.age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(t1.age) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the average age of journalists working on different role type, show the result with a bar chart, and sort by the y axis in descending please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(t1.age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(t1.age) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return me a bar chart to show the average experience working length of journalists working on different role type, I want to display by the bar in asc.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type ASC"}, "hardness": "Hard"}, {"nl_queries": "Visualize the average experience working length of journalists working on different role type using a bar chart, list X from low to high order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type ASC"}, "hardness": "Hard"}, {"nl_queries": "Return me a bar chart to show the average experience working length of journalists working on different role type, rank by the x axis in descending.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize the average experience working length of journalists working on different role type using a bar chart, and sort X from high to low order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type DESC"}, "hardness": "Hard"}, {"nl_queries": "Return me a bar chart to show the average experience working length of journalists working on different role type, list by the Y-axis from low to high.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(Years_working) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(Years_working) ASC"}, "hardness": "Hard"}, {"nl_queries": "Visualize the average experience working length of journalists working on different role type using a bar chart, and display from low to high by the total number.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(Years_working) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(Years_working) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return me a bar chart to show the average experience working length of journalists working on different role type, I want to display by the y axis in descending.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(Years_working) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(Years_working) DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize the average experience working length of journalists working on different role type using a bar chart, and could you rank in descending by the total number?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(Years_working) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(Years_working) DESC"}, "hardness": "Hard"}, {"nl_queries": "Plot the total number by grouped by nationality as a bar graph, and I want to order x-axis from low to high order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the different nationalities and the number of journalists of each nationality Visualize by bar chart, and I want to order x-axis from low to high order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the different nationalities and the number of journalists of each nationality in a bar chart, and I want to sort in ascending by the x axis.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the different nationalities and the number of journalists of each nationality in a bar chart, and display names in descending order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the different nationalities and the number of journalists of each nationality Visualize by bar chart, could you display by the x axis in desc?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by nationality as a bar graph, rank bar from high to low order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the different nationalities and the number of journalists of each nationality in a bar chart, and I want to display by the y axis in asc.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the different nationalities and the number of journalists of each nationality Visualize by bar chart, order in asc by the the total number .", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by nationality as a bar graph, I want to list by the Y in ascending.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the different nationalities and the number of journalists of each nationality in a bar chart, and could you display from high to low by the Y?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the different nationalities and the number of journalists of each nationality Visualize by bar chart, order y axis in descending order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by nationality as a bar graph, and sort Y-axis in desc order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, count and group by nationality from the journalist table, show x-axis in ascending order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of journalist with different nationality using a bar chart, I want to order by the names in ascending.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of nationality from different nationality, and order by the Nationality in asc.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of nationality from different nationality, list in descending by the Nationality.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, count and group by nationality from the journalist table, list X in descending order please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of journalist with different nationality using a bar chart, and list in descending by the Nationality.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, count and group by nationality from the journalist table, rank in ascending by the Y-axis please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of journalist with different nationality using a bar chart, and show in ascending by the how many nationality.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of nationality from different nationality, and rank from low to high by the Y.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, count and group by nationality from the journalist table, display by the total number in descending please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of journalist with different nationality using a bar chart, and rank by the Y from high to low.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of nationality from different nationality, and rank by the Y from high to low.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the nationalities and the taotal ages of journalists Visualize by a bar chart, show from low to high by the X-axis.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of sum age from each nationality, could you rank X in asc order?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the nationalities and the total ages of journalists?, I want to rank X from low to high order please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the nationalities and total ages of journalists?, I want to sort by the x-axis in asc.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of sum age from each nationality, and display by the x axis from high to low.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the nationalities and total ages of journalists?, I want to rank by the bar in descending.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the nationalities and the total ages of journalists?, I want to rank by the bar in descending.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the nationalities and the taotal ages of journalists Visualize by a bar chart, could you list bars in descending order?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the nationalities and total ages of journalists?, and display from low to high by the total number.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of sum age from each nationality, and list by the Y in asc.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the nationalities and the total ages of journalists?, and list by the Y in asc.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the nationalities and the taotal ages of journalists Visualize by a bar chart, sort y-axis from low to high order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the nationalities and the total ages of journalists?, and I want to show by the total number of age in desc.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the nationalities and total ages of journalists?, and list Y-axis in descending order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of sum age from each nationality, and I want to show by the total number of age in desc.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the nationalities and the taotal ages of journalists Visualize by a bar chart, I want to show by the total number of age in desc.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the nationalities and their average ages of journalists Show me a bar chart, and list x-axis from low to high order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of nationality versus the average of age, and I want to order in ascending by the names please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the nationalities and their average ages of journalists?, I want to rank by the x axis from low to high.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the nationalities and their average ages of journalists?, could you list Nationality from low to high order?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the nationalities and their average ages of journalists?, and rank X-axis from high to low order please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of nationality versus the average of age, list from high to low by the bars.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the nationalities and their average ages of journalists Show me a bar chart, order in descending by the names.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the nationalities and their average ages of journalists?, and I want to show from high to low by the X.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the nationalities and their average ages of journalists Show me a bar chart, and order by the Y from low to high please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the nationalities and their average ages of journalists?, show in asc by the total number please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the nationalities and their average ages of journalists?, could you list from low to high by the total number?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of nationality versus the average of age, and list in asc by the Y-axis.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the nationalities and their average ages of journalists?, and order y-axis from high to low order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of nationality versus the average of age, I want to order total number from high to low order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the nationalities and their average ages of journalists?, order total number in desc order please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the nationalities and their average ages of journalists Show me a bar chart, order total number in desc order please.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names of journalists and the number of events they reported Visualize by bar chart, and list by the bar in ascending.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY T3.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY T3.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of journalists and the number of events they reported in a bar chart, and could you display bar in ascending order?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY T3.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY T3.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of journalists and the number of events they reported in a bar chart, show X from high to low order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY T3.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY T3.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of journalists and the number of events they reported Visualize by bar chart, and show X from high to low order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY T3.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY T3.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of journalists and the number of events they reported in a bar chart, could you list by the the total number in asc?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of journalists and the number of events they reported Visualize by bar chart, and list in asc by the Y-axis.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of journalists and the number of events they reported in a bar chart, and I want to sort y-axis from high to low order.", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of journalists and the number of events they reported Visualize by bar chart, could you show by the Y in descending?", "db_id": "news_report", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Display a bar chart for how many orchestras does each record company manage?", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for how many orchestras does each record company manage?", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company"}, "hardness": "Easy"}, {"nl_queries": "How many orchestras does each record company manage. Show bar chart.", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of record company versus the total number ", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company"}, "hardness": "Easy"}, {"nl_queries": "What are the record companies of orchestras in descending order of years in which they were founded, and count them by a bar chart", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the record companies of orchestras, sorted descending by the years in which they were founded, and count them by a bar chart", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the record companies of orchestras in descending order of years in which they were founded?", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for returning the number of the record companies of orchestras, sorted descending by the years in which they were founded.", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of the record companies of orchestras, sorted descending by the years in which they were founded.", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the record companies of orchestras in descending order of years in which they were founded?", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many orchestras does each record company manage?, rank by the Record_Company from low to high.", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company ASC"}, "hardness": "Medium"}, {"nl_queries": "How many orchestras does each record company manage Show bar chart, and could you display by the bars in ascending?", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for how many orchestras does each record company manage?, and could you show in ascending by the bar?", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of record company versus the total number, and I want to list in ascending by the X-axis.", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many orchestras does each record company manage?, could you list by the x-axis in desc please?", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC"}, "hardness": "Medium"}, {"nl_queries": "How many orchestras does each record company manage Show bar chart, and I want to list in desc by the bars.", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for how many orchestras does each record company manage?, and I want to show by the names from high to low.", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of record company versus the total number, I want to show by the names from high to low.", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for how many orchestras does each record company manage?, display by the Y in ascending.", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many orchestras does each record company manage Show bar chart, I want to rank in ascending by the the total number .", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many orchestras does each record company manage?, could you list by the the total number in asc?", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of record company versus the total number, and I want to rank in ascending by the the total number .", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for how many orchestras does each record company manage?, could you sort by the y-axis in descending please?", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of record company versus the total number, rank in descending by the the total number .", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many orchestras does each record company manage?, display by the y-axis from high to low.", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many orchestras does each record company manage Show bar chart, show by the y-axis in desc.", "db_id": "orchestra", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number of the first year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT First_year , COUNT(First_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY First_year", "binning": ""}, "VQL": "Visualize BAR SELECT First_year , COUNT(First_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY First_year"}, "hardness": "Medium"}, {"nl_queries": " Count the last year of parties with theme \"Spring\" or \"Teqnology\" with a bar grpah.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year", "binning": ""}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year"}, "hardness": "Medium"}, {"nl_queries": "What are the last year of the parties whose theme is \"Spring\" or \"Teqnology\"? Count the last year for a bar chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year", "binning": ""}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year"}, "hardness": "Medium"}, {"nl_queries": "Show the total number of the first year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, bin the first year into weekday interval and count the first year.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT First_year , COUNT(First_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"", "binning": "BIN First_year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT First_year , COUNT(First_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" BIN First_year BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show the total number of the last year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, bin the last year into weekday interval, and count the first year.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"", "binning": "BIN Last_year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" BIN Last_year BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What are the last year of the parties whose theme is \"Spring\" or \"Teqnology\"? Bin the last year into weekday interval and count them.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"", "binning": "BIN Last_year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" BIN Last_year BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality by a pie chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality. Show a pie chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show me a pie chart for how many hosts does each nationality have? List the nationality and the count.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Display a pie chart for how many hosts does each nationality have? List the nationality and the count.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count in a pie chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count. Plot them as pie chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing the total number across nationality.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality in a bar chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality. Visualize by bar chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about how many hosts does each nationality have? List the nationality and the count.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on how many hosts does each nationality have? List the nationality and the count.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count with a bar chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count. Visualize by bar chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis nationality y axis the total number ", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Count the total number of different locations of parties using a pie chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM party GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Give me the proportion about the location of each party with a pie chart.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM party GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing the number of location across location.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM party GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart, that group by location and count them.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM party GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing how many location across location", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM party GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Show the total number of the first year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, and show by the the number of first year in ascending.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT First_year , COUNT(First_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY First_year ORDER BY COUNT(First_year) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT First_year , COUNT(First_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY First_year ORDER BY COUNT(First_year) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the total number of the first year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, and display in desc by the Y.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT First_year , COUNT(First_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY First_year ORDER BY COUNT(First_year) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT First_year , COUNT(First_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY First_year ORDER BY COUNT(First_year) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the last year of the parties whose theme is \"Spring\" or \"Teqnology\"? Count the last year for a bar chart, could you list by the Y in asc?", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year ORDER BY COUNT(Last_year) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year ORDER BY COUNT(Last_year) ASC"}, "hardness": "Hard"}, {"nl_queries": "Count the last year of parties with theme \"Spring\" or \"Teqnology\" with a bar grpah, and I want to show in ascending by the the number of last year.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year ORDER BY COUNT(Last_year) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year ORDER BY COUNT(Last_year) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the last year of the parties whose theme is \"Spring\" or \"Teqnology\"? Count the last year for a bar chart, I want to rank y axis in desc order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year ORDER BY COUNT(Last_year) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year ORDER BY COUNT(Last_year) DESC"}, "hardness": "Hard"}, {"nl_queries": "Count the last year of parties with theme \"Spring\" or \"Teqnology\" with a bar grpah, I want to rank in descending by the Y.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year ORDER BY COUNT(Last_year) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year ORDER BY COUNT(Last_year) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the total number of the first year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, bin the first year into weekday interval and count the first year, and I want to display y axis from low to high order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT First_year , COUNT(First_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(First_year) ASC", "binning": "BIN First_year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT First_year , COUNT(First_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(First_year) ASC BIN First_year BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the total number of the first year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, bin the first year into weekday interval and count the first year, rank by the Y in descending please.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT First_year , COUNT(First_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(First_year) DESC", "binning": "BIN First_year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT First_year , COUNT(First_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(First_year) DESC BIN First_year BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the last year of the parties whose theme is \"Spring\" or \"Teqnology\"? Bin the last year into weekday interval and count them, display total number in ascending order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(Last_year) ASC", "binning": "BIN Last_year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(Last_year) ASC BIN Last_year BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the total number of the last year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, bin the last year into weekday interval, and count the first year, and order by the Y in ascending please.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(Last_year) ASC", "binning": "BIN Last_year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(Last_year) ASC BIN Last_year BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the total number of the last year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, bin the last year into weekday interval, and count the first year, and rank y-axis from high to low order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(Last_year) DESC", "binning": "BIN Last_year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(Last_year) DESC BIN Last_year BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the last year of the parties whose theme is \"Spring\" or \"Teqnology\"? Bin the last year into weekday interval and count them, and could you display y-axis in descending order please?", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(Last_year) DESC", "binning": "BIN Last_year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\"  ORDER BY COUNT(Last_year) DESC BIN Last_year BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count Visualize by bar chart, and could you sort by the x axis in ascending?", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many hosts does each nationality have? List the nationality and the count, and could you rank by the names from low to high?", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count with a bar chart, and could you order names in asc order please?", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality Visualize by bar chart, I want to list in ascending by the x-axis.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many hosts does each nationality have? List the nationality and the count, and order in ascending by the names.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis the total number, show by the X-axis from low to high.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality in a bar chart, and could you sort by the X in asc?", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count with a bar chart, and sort X-axis from high to low order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis the total number, rank in desc by the x axis.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many hosts does each nationality have? List the nationality and the count, and order by the names from high to low.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many hosts does each nationality have? List the nationality and the count, and sort X-axis from high to low order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality Visualize by bar chart, and show from high to low by the X.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count Visualize by bar chart, and sort X-axis from high to low order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality in a bar chart, order by the names from high to low.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count Visualize by bar chart, could you list in ascending by the y axis?", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality in a bar chart, and could you list in ascending by the y axis?", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count with a bar chart, display by the Y in ascending.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality Visualize by bar chart, and sort the total number from low to high order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis the total number, could you list in ascending by the y axis?", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many hosts does each nationality have? List the nationality and the count, and display by the Y in ascending.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many hosts does each nationality have? List the nationality and the count, display by the Y in ascending.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many hosts does each nationality have? List the nationality and the count, show in descending by the y axis please.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count Visualize by bar chart, order in descending by the Y-axis please.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis the total number, sort in descending by the total number please.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality Visualize by bar chart, and display from high to low by the Y.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many hosts does each nationality have? List the nationality and the count with a bar chart, display in descending by the Y.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many hosts does each nationality have? List the nationality and the count, could you list in desc by the y axis?", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different nationalities along with the number of hosts of each nationality in a bar chart, and display y-axis in desc order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart, that group by location and count them, rank x axis in ascending order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many location across location, sort X from low to high order please.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many location across location, could you rank from high to low by the names?", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart, that group by location and count them, show by the Location in descending.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart, that group by location and count them, and sort by the the number of location from low to high please.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many location across location, and display by the total number from low to high.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart, that group by location and count them, list Y in descending order.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many location across location, and sort by the the number of location from high to low please.", "db_id": "party_host", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show party names and the number of events for each party by a pie chart.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize PIE SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Show party names and the number of events for each party. Visualize by pie chart.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize PIE SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Visualize a pie chart with how many events are there for each party?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize PIE SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Return a pie chart on how many events are there for each party?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize PIE SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "How many events are there for each party. Show a pie chart.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize PIE SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Show party names and the number of events for each party in a bar chart.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Show party names and the number of events for each party. ", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many events are there for each party?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many events are there for each party?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "How many events are there for each party. ", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Show all party names and the number of members in each party by a pie chart.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize PIE SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Show all party names and the number of members in each party. Show the proportion.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize PIE SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Return a pie on how many members are in each party?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize PIE SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "How many members are in each party. Visualize by pie chart.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize PIE SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Show all party names and the number of members in each party with a bar chart.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Show all party names and the number of members in each party. Show bar chart.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many members are in each party?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many members are in each party?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "How many members are in each party. Show bar chart.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"}, "hardness": "Medium"}, {"nl_queries": "Which ministers are not a part of the Progress Party, and count them by a pie chart", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister", "binning": ""}, "VQL": "Visualize PIE SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister"}, "hardness": "Medium"}, {"nl_queries": "Show all ministers who do not belong to Progress Party, and count them by a pie chart", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister", "binning": ""}, "VQL": "Visualize PIE SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister"}, "hardness": "Medium"}, {"nl_queries": "Which ministers are not a part of the Progress Party, and count them by a bar chart", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister"}, "hardness": "Medium"}, {"nl_queries": "Show all ministers who do not belong to Progress Party, and count them by a bar chart", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister"}, "hardness": "Medium"}, {"nl_queries": "Please tell me the repeat times of each ministers using a pie chart.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister", "binning": ""}, "VQL": "Visualize PIE SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each minister.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister", "binning": ""}, "VQL": "Visualize PIE SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart showing the total number of each minister.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister"}, "hardness": "Easy"}, {"nl_queries": "Plot how many minister by grouped by minister as a bar graph", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister"}, "hardness": "Easy"}, {"nl_queries": "How many parties of the time they took office, binning the took office into Year interval, and then split by the minister's name.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister", "binning": "BIN Took_office BY YEAR"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister BIN Took_office BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Stack bar chart of how many took office vs Minister based on took office", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister", "binning": "BIN Took_office BY YEAR"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister BIN Took_office BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "How many parties of the time they left office, binning the left office time into Year interval, and then split by the minister's name.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister", "binning": "BIN Left_office BY YEAR"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister BIN Left_office BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar chart of the number of left office for with each Minister in each left office", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister", "binning": "BIN Left_office BY YEAR"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister BIN Left_office BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "How many parties of the time they took office, binning the took office into Weekday interval, and then split by the minister's name.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister", "binning": "BIN Took_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister BIN Took_office BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar of took office and how many took office colored by Minister", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister", "binning": "BIN Took_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister BIN Took_office BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "How many parties of the time they took office, binning the left office into Weekday interval, and then split by the minister's name.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister", "binning": "BIN Left_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister BIN Left_office BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar chart of the number of left office for with each Minister in each left office", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister", "binning": "BIN Left_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister BIN Left_office BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "How many parties of the time they took office, binning the took office into WEEKDAY interval", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party", "binning": "BIN Took_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party BIN Took_office BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show the number of took office from different took office", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party", "binning": "BIN Took_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party BIN Took_office BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "How many parties of the time they leave office, binning the leave office into WEEKDAY interval", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party", "binning": "BIN Left_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party BIN Left_office BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis left office y axis the number of left office", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party", "binning": "BIN Left_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party BIN Left_office BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Show the proportion of all ministers using a pie chart.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister", "binning": ""}, "VQL": "Visualize PIE SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister"}, "hardness": "Easy"}, {"nl_queries": "Compute the total how many minister across minister as a pie chart.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister", "binning": ""}, "VQL": "Visualize PIE SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister"}, "hardness": "Easy"}, {"nl_queries": "Compare the total number of each minister using a bar graph.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis minister y axis how many minister", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram for how many events are there for each party?, and display by the bars in asc.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many events are there for each party?, and display by the bars in asc.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show party names and the number of events for each party in a bar chart, and list by the X-axis in asc.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC"}, "hardness": "Hard"}, {"nl_queries": "How many events are there for each party, and show in asc by the x axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show party names and the number of events for each party, and rank Party_name in asc order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show party names and the number of events for each party in a bar chart, could you order by the x axis from high to low?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "How many events are there for each party, show by the x-axis from high to low.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many events are there for each party?, and could you order by the x axis from high to low?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for how many events are there for each party?, could you order by the x axis from high to low?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show party names and the number of events for each party, list x axis in descending order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show party names and the number of events for each party, and show in ascending by the Y-axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for how many events are there for each party?, and show in ascending by the Y-axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many events are there for each party?, could you display by the Y-axis in asc?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show party names and the number of events for each party in a bar chart, I want to sort in asc by the Y.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many events are there for each party, and sort in asc by the the total number .", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show party names and the number of events for each party in a bar chart, show in descending by the y-axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many events are there for each party, order by the the total number in desc please.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show party names and the number of events for each party, order by the the total number in desc please.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many events are there for each party?, and order in descending by the y axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for how many events are there for each party?, and list by the total number in descending.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all party names and the number of members in each party with a bar chart, rank by the Party_name from low to high please.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show all party names and the number of members in each party Show bar chart, and rank by the names from low to high please.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many members are in each party?, rank by the Party_name in asc please.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for how many members are in each party?, and rank from low to high by the bar.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC"}, "hardness": "Hard"}, {"nl_queries": "How many members are in each party Show bar chart, rank by the Party_name from low to high please.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show all party names and the number of members in each party with a bar chart, and list in desc by the bars.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for how many members are in each party?, and I want to order in descending by the X.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all party names and the number of members in each party Show bar chart, show by the X-axis in desc.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many members are in each party?, and display by the X in desc.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "How many members are in each party Show bar chart, show X-axis from high to low order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all party names and the number of members in each party Show bar chart, and order the total number in ascending order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many members are in each party?, rank in asc by the y axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show all party names and the number of members in each party with a bar chart, rank in asc by the y axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many members are in each party Show bar chart, and rank by the the total number in asc.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for how many members are in each party?, display by the Y from low to high.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for how many members are in each party?, and could you list by the y-axis from high to low?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many members are in each party Show bar chart, and rank in desc by the y-axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many members are in each party?, could you list by the y-axis from high to low?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all party names and the number of members in each party with a bar chart, and rank in desc by the y-axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all party names and the number of members in each party Show bar chart, and rank in desc by the y-axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Which ministers are not a part of the Progress Party, and count them by a bar chart, list by the Minister from low to high.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister ASC"}, "hardness": "Hard"}, {"nl_queries": "Show all ministers who do not belong to Progress Party, and count them by a bar chart, rank in asc by the bars.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister ASC"}, "hardness": "Hard"}, {"nl_queries": "Show all ministers who do not belong to Progress Party, and count them by a bar chart, sort by the x-axis from high to low.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister DESC"}, "hardness": "Hard"}, {"nl_queries": "Which ministers are not a part of the Progress Party, and count them by a bar chart, and I want to order by the x-axis from high to low.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all ministers who do not belong to Progress Party, and count them by a bar chart, and order in asc by the Y.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) ASC"}, "hardness": "Hard"}, {"nl_queries": "Which ministers are not a part of the Progress Party, and count them by a bar chart, order in asc by the Y.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) ASC"}, "hardness": "Hard"}, {"nl_queries": "Which ministers are not a part of the Progress Party, and count them by a bar chart, I want to show Y-axis from high to low order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all ministers who do not belong to Progress Party, and count them by a bar chart, and could you show total number from high to low order?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) DESC"}, "hardness": "Hard"}, {"nl_queries": "Plot how many minister by grouped by minister as a bar graph, and order by the Minister in ascending.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart showing the total number of each minister, and show by the x-axis in asc.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot how many minister by grouped by minister as a bar graph, and rank by the bar from high to low.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart showing the total number of each minister, display by the bars in desc please.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot how many minister by grouped by minister as a bar graph, display y-axis in ascending order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart showing the total number of each minister, I want to list in asc by the total number.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot how many minister by grouped by minister as a bar graph, and list in desc by the y axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart showing the total number of each minister, and sort y axis in descending order please.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many parties of the time they took office, binning the took office into Year interval, and then split by the minister's name, rank by the the number of took office from low to high.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC", "binning": "BIN Took_office BY YEAR"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC BIN Took_office BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Stack bar chart of how many took office vs Minister based on took office, and could you sort by the y axis from low to high?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC", "binning": "BIN Took_office BY YEAR"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC BIN Took_office BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "How many parties of the time they took office, binning the took office into Year interval, and then split by the minister's name, and sort Y in desc order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC", "binning": "BIN Took_office BY YEAR"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC BIN Took_office BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Stack bar chart of how many took office vs Minister based on took office, list by the y-axis from high to low please.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC", "binning": "BIN Took_office BY YEAR"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC BIN Took_office BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "How many parties of the time they left office, binning the left office time into Year interval, and then split by the minister's name, I want to display in ascending by the Y.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC", "binning": "BIN Left_office BY YEAR"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC BIN Left_office BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Stacked bar chart of the number of left office for with each Minister in each left office, could you display in asc by the y-axis?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC", "binning": "BIN Left_office BY YEAR"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC BIN Left_office BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Stacked bar chart of the number of left office for with each Minister in each left office, list the number of left office in desc order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC", "binning": "BIN Left_office BY YEAR"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC BIN Left_office BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "How many parties of the time they left office, binning the left office time into Year interval, and then split by the minister's name, sort in desc by the y-axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC", "binning": "BIN Left_office BY YEAR"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC BIN Left_office BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Stacked bar of took office and how many took office colored by Minister, and sort Y from low to high order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC", "binning": "BIN Took_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC BIN Took_office BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "How many parties of the time they took office, binning the took office into Weekday interval, and then split by the minister's name, list in ascending by the how many took office.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC", "binning": "BIN Took_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC BIN Took_office BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Stacked bar of took office and how many took office colored by Minister, and display by the Y-axis in descending.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC", "binning": "BIN Took_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC BIN Took_office BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "How many parties of the time they took office, binning the took office into Weekday interval, and then split by the minister's name, and show y axis from high to low order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC", "binning": "BIN Took_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC BIN Took_office BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "How many parties of the time they took office, binning the left office into Weekday interval, and then split by the minister's name, and display in ascending by the Y-axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC", "binning": "BIN Left_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC BIN Left_office BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Stacked bar chart of the number of left office for with each Minister in each left office, and I want to list Y in asc order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC", "binning": "BIN Left_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC BIN Left_office BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Stacked bar chart of the number of left office for with each Minister in each left office, could you sort by the Y in descending please?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC", "binning": "BIN Left_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC BIN Left_office BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "How many parties of the time they took office, binning the left office into Weekday interval, and then split by the minister's name, and rank by the how many left office in descending.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC", "binning": "BIN Left_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC BIN Left_office BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "How many parties of the time they took office, binning the took office into WEEKDAY interval, could you rank y-axis in ascending order?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) ASC", "binning": "BIN Took_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) ASC BIN Took_office BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of took office from different took office, and show by the Y in ascending.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) ASC", "binning": "BIN Took_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) ASC BIN Took_office BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "How many parties of the time they took office, binning the took office into WEEKDAY interval, I want to show by the Y-axis in descending.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) DESC", "binning": "BIN Took_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) DESC BIN Took_office BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of took office from different took office, I want to sort in desc by the Y please.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) DESC", "binning": "BIN Took_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) DESC BIN Took_office BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis left office y axis the number of left office, show total number from low to high order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) ASC", "binning": "BIN Left_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) ASC BIN Left_office BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "How many parties of the time they leave office, binning the leave office into WEEKDAY interval, show by the y-axis in ascending.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) ASC", "binning": "BIN Left_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) ASC BIN Left_office BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis left office y axis the number of left office, order by the total number in descending.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) DESC", "binning": "BIN Left_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) DESC BIN Left_office BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "How many parties of the time they leave office, binning the leave office into WEEKDAY interval, display by the how many left office in descending please.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) DESC", "binning": "BIN Left_office BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) DESC BIN Left_office BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of each minister using a bar graph, and list by the X in ascending.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis minister y axis how many minister, list names from low to high order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of each minister using a bar graph, rank in descending by the x-axis.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis minister y axis how many minister, could you sort by the X-axis in descending?", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of each minister using a bar graph, list the number of minister in ascending order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis minister y axis how many minister, and rank by the total number in ascending.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of each minister using a bar graph, display by the total number in descending.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis minister y axis how many minister, display the number of minister in descending order.", "db_id": "party_people", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different locations and the number of performances at each location with a pie chart.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Show different locations and the number of performances at each location. ", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Compute the total the total number across location as a pie chart.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Show different locations and the number of performances at each location by a bar chart.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Show different locations and the number of performances at each location. Visualize by bar chart.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of the total number from each location", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "A pie chart for showing the number of the dates of performances with attending members whose roles are \"Violin\".", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date", "binning": ""}, "VQL": "Visualize PIE SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date"}, "hardness": "Hard"}, {"nl_queries": "Show the number of the dates of performances with attending members whose roles are \"Violin\".", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date", "binning": ""}, "VQL": "Visualize PIE SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date"}, "hardness": "Hard"}, {"nl_queries": "Show the dates of performances with attending members whose roles are \"Violin\", and count them by a pie chart", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date", "binning": ""}, "VQL": "Visualize PIE SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for showing the number of the dates of performances with attending members whose roles are \"Violin\".", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date"}, "hardness": "Hard"}, {"nl_queries": "Show the number of the dates of performances with attending members whose roles are \"Violin\".", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date"}, "hardness": "Hard"}, {"nl_queries": "Show the dates of performances with attending members whose roles are \"Violin\", and count them by a bar chart", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date"}, "hardness": "Hard"}, {"nl_queries": "How many performances of each location? Show me the proportion using a pie chart.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM performance GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Compute the total the number of location across location as a pie chart.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM performance GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Compare the total number of locations in each location using a bar graph.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM performance GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis location y axis how many location", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM performance GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Show the names of members and the location of the performances they attended. Compute the total number of each location using a pie chart.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID GROUP BY Location"}, "hardness": "Medium"}, {"nl_queries": "Show different locations and the number of performances at each location Visualize by bar chart, I want to display from low to high by the x-axis.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the total number from each location, I want to order bars in asc order.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different locations and the number of performances at each location by a bar chart, sort x-axis in ascending order.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the total number from each location, I want to sort by the bars from high to low.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different locations and the number of performances at each location Visualize by bar chart, and sort x axis in desc order.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different locations and the number of performances at each location by a bar chart, and I want to sort by the bars from high to low.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different locations and the number of performances at each location by a bar chart, and could you list from low to high by the Y?", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the total number from each location, and could you list from low to high by the Y?", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different locations and the number of performances at each location Visualize by bar chart, display the total number from low to high order.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different locations and the number of performances at each location by a bar chart, I want to display y-axis in desc order.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different locations and the number of performances at each location Visualize by bar chart, and display by the Y-axis in descending.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the total number from each location, order total number from high to low order please.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of the dates of performances with attending members whose roles are \"Violin\", and could you display x-axis in asc order?", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY Date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY Date ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the dates of performances with attending members whose roles are \"Violin\", and I want to list X in ascending order.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY Date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY Date ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the dates of performances with attending members whose roles are \"Violin\", and count them by a bar chart, and display by the x-axis from low to high.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY Date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY Date ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the dates of performances with attending members whose roles are \"Violin\", I want to rank from high to low by the bar.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY Date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY Date DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the dates of performances with attending members whose roles are \"Violin\", and list by the Date in descending.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY Date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY Date DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the dates of performances with attending members whose roles are \"Violin\", and count them by a bar chart, sort in descending by the X please.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY Date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY Date DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the dates of performances with attending members whose roles are \"Violin\", and order by the total number in ascending.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the dates of performances with attending members whose roles are \"Violin\", and count them by a bar chart, and display from low to high by the Y.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the dates of performances with attending members whose roles are \"Violin\", could you list how many date in asc order please?", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the dates of performances with attending members whose roles are \"Violin\", rank Y-axis in descending order.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the dates of performances with attending members whose roles are \"Violin\", and count them by a bar chart, and order in desc by the how many date.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the dates of performances with attending members whose roles are \"Violin\", show by the total number in descending please.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Bar chart x axis location y axis how many location, and rank by the bars in asc.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of locations in each location using a bar graph, and list bars in asc order.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of locations in each location using a bar graph, and display x axis from high to low order please.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis location y axis how many location, I want to display names from high to low order please.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of locations in each location using a bar graph, and order by the Y-axis from low to high.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY COUNT(Location) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY COUNT(Location) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis location y axis how many location, and order by the Y-axis from low to high.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY COUNT(Location) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY COUNT(Location) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis location y axis how many location, order Y-axis in descending order.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY COUNT(Location) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY COUNT(Location) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of locations in each location using a bar graph, rank from high to low by the y axis please.", "db_id": "performance_attendance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY COUNT(Location) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY COUNT(Location) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a pie chart with what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Show me the proportion on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there. ", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each country.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there. Plot them as bar chart.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis country y axis the total number ", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, I want to rank by the X-axis from low to high.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis country y axis the total number, and sort X-axis in asc order.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, I want to rank by the X-axis from low to high.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there Plot them as bar chart, I want to show names from low to high order.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there Plot them as bar chart, and rank by the x-axis from high to low.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, could you display in descending by the x axis?", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis country y axis the total number, sort x-axis in descending order please.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, sort x-axis in descending order please.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis country y axis the total number, and list by the total number from low to high.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, and list from low to high by the Y-axis.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there Plot them as bar chart, and could you sort total number in ascending order please?", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, I want to order y-axis in ascending order.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, and list in descending by the y axis please.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis country y axis the total number, list total number from high to low order.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, and display by the Y-axis in descending please.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there Plot them as bar chart, and sort by the the total number in descending.", "db_id": "perpetrator", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart to show the average age for each type of pet.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "What is the average age for each pet type? Show me a histogram.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Return a bar graph to visualize the average age for each pet type. ", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of the average of pet age from each pettype", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum age for each type of pet. Visualize them as a pie chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , max(pet_age) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "What is the maximum age for each pet type? Give me the result in a pie chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , max(pet_age) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the maximum age for each pet type.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , max(pet_age) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of max pet age for each pettype.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , max(pet_age) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum age for each type of pet. Return the result with a bar chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "What is the maximum age for each pet type? Please show me a bar chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Bar graph, the X-axis is the pet types and the Y-axis is their max pet age.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Show maximal pet age from each pettype", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Find the relationship between the average and maximum age for each type of pet using a scatter plot.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Please plot a scatter chart to tell me what is the correlation between average and maximum age for each pet type?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Plot a scatter chart, avg(pet age) by maximal pet age.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Find the average age for each type of pet. Visualize them as a pie chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the average of pet age from different pettype.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Find the relationship between the average and maximum age for each type of pet using a scatter plot.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Please plot a scatter chart to tell me what is the correlation between average and maximum age for each pet type?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between avg(pet age) and maximal pet age for each PetType using a scatter chart", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Find the id and weight of all pets whose age is older than 1. Visualize by bar chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about what is the id and weight of every pet who is older than 1?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what is the id and weight of every pet who is older than 1?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1"}, "hardness": "Easy"}, {"nl_queries": "What is the id and weight of every pet who is older than 1. ", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum weight for each type of pet. List the maximum weight and pet type. Plot them as pie chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , max(weight) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "List the maximum weight and type for each type of pet in a pie chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , max(weight) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "List the maximum weight and type for each type of pet. Show a pie chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , max(weight) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Compute the total maximal weight across pettype as a pie chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , max(weight) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum weight for each type of pet. List the maximum weight and pet type. Visualize by bar chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "List the maximum weight and type for each type of pet with a bar chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "List the maximum weight and type for each type of pet. ", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show maximal weight from different pettype", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType"}, "hardness": "Easy"}, {"nl_queries": "Find the average weight for each pet type. Plot them as pie chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , avg(weight) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Display a pie chart for what is the average weight for each type of pet?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , avg(weight) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Give the proportion of what is the average weight for each type of pet?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , avg(weight) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "What is the average weight for each type of pet. Show a pie chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , avg(weight) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show mean weight from different pettype.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize PIE SELECT PetType , avg(weight) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Find the average weight for each pet type. ", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what is the average weight for each type of pet?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "what is the average weight for each type of pet?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "What is the average weight for each type of pet. Show bar chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for the average of weight of each pettype", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype"}, "hardness": "Easy"}, {"nl_queries": "Find the major and age of students who do not have a cat pet. Visualize by scatter chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Major , Age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')", "binning": ""}, "VQL": "Visualize SCATTER SELECT Major , Age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')"}, "hardness": "Medium"}, {"nl_queries": "Scatter. what major is every student who does not own a cat as a pet, and also how old are they?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Major , Age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')", "binning": ""}, "VQL": "Visualize SCATTER SELECT Major , Age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')"}, "hardness": "Medium"}, {"nl_queries": "A scatter chart about what major is every student who does not own a cat as a pet, and also how old are they?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Major , Age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')", "binning": ""}, "VQL": "Visualize SCATTER SELECT Major , Age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')"}, "hardness": "Medium"}, {"nl_queries": "What major is every student who does not own a cat as a pet, and also how old are they. ", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Major , Age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')", "binning": ""}, "VQL": "Visualize SCATTER SELECT Major , Age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')"}, "hardness": "Medium"}, {"nl_queries": "Find the first name and age of students who have a pet. ", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid", "binning": ""}, "VQL": "Visualize PIE SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid"}, "hardness": "Easy"}, {"nl_queries": "Show me a pie chart for what are the different first names and ages of the students who do have pets?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid", "binning": ""}, "VQL": "Visualize PIE SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid"}, "hardness": "Easy"}, {"nl_queries": "Display a pie chart for what are the different first names and ages of the students who do have pets?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid", "binning": ""}, "VQL": "Visualize PIE SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid"}, "hardness": "Easy"}, {"nl_queries": "What are the different first names and ages of the students who do have pets. Visualize by pie chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid", "binning": ""}, "VQL": "Visualize PIE SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid"}, "hardness": "Easy"}, {"nl_queries": "Find the first name and age of students who have a pet. ", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what are the different first names and ages of the students who do have pets?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram for what are the different first names and ages of the students who do have pets?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid"}, "hardness": "Easy"}, {"nl_queries": "What are the different first names and ages of the students who do have pets. Visualize by bar chart.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid"}, "hardness": "Easy"}, {"nl_queries": "What is the average age for each pet type? Show me a histogram, and order X in ascending order please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the average of pet age from each pettype, and sort in asc by the X.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar graph to visualize the average age for each pet type, order X in ascending order please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart to show the average age for each type of pet, and order from low to high by the bar please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar graph to visualize the average age for each pet type, and show x axis in desc order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the average of pet age from each pettype, and could you list names in descending order please?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart to show the average age for each type of pet, list by the PetType in descending.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average age for each pet type? Show me a histogram, display PetType in descending order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average age for each pet type? Show me a histogram, and sort in ascending by the Y.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart to show the average age for each type of pet, and could you list by the Y-axis in asc?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar graph to visualize the average age for each pet type, and rank by the y axis in ascending.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the average of pet age from each pettype, display y-axis in asc order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the average of pet age from each pettype, and display in desc by the y axis please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average age for each pet type? Show me a histogram, and could you sort by the Y-axis in desc?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart to show the average age for each type of pet, rank the average of pet age from high to low order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar graph to visualize the average age for each pet type, rank in desc by the total number.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the maximum age for each pet type? Please show me a bar chart, rank by the X in ascending.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType ASC"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum age for each type of pet Return the result with a bar chart, display from low to high by the names please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph, the X-axis is the pet types and the Y-axis is their max pet age, could you list PetType in asc order please?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType ASC"}, "hardness": "Easy"}, {"nl_queries": "Show maximal pet age from each pettype, I want to order from low to high by the bars.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType ASC"}, "hardness": "Easy"}, {"nl_queries": "Show maximal pet age from each pettype, and rank names in descending order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph, the X-axis is the pet types and the Y-axis is their max pet age, I want to show X from high to low order please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType DESC"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum age for each type of pet Return the result with a bar chart, and could you show by the x axis in descending please?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType DESC"}, "hardness": "Easy"}, {"nl_queries": "What is the maximum age for each pet type? Please show me a bar chart, order PetType in descending order please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph, the X-axis is the pet types and the Y-axis is their max pet age, and list Y in asc order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) ASC"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum age for each type of pet Return the result with a bar chart, and rank by the Y-axis from low to high.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) ASC"}, "hardness": "Easy"}, {"nl_queries": "Show maximal pet age from each pettype, and show from low to high by the total number.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) ASC"}, "hardness": "Easy"}, {"nl_queries": "What is the maximum age for each pet type? Please show me a bar chart, and show y-axis from low to high order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) ASC"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum age for each type of pet Return the result with a bar chart, and list Y-axis from high to low order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) DESC"}, "hardness": "Easy"}, {"nl_queries": "Show maximal pet age from each pettype, order from high to low by the y-axis.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) DESC"}, "hardness": "Easy"}, {"nl_queries": "What is the maximum age for each pet type? Please show me a bar chart, show in desc by the y-axis please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph, the X-axis is the pet types and the Y-axis is their max pet age, and could you show from high to low by the y-axis?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) DESC"}, "hardness": "Easy"}, {"nl_queries": "What is the id and weight of every pet who is older than 1, and order X in ascending order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the id and weight of all pets whose age is older than 1 Visualize by bar chart, order in ascending by the x-axis.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the id and weight of every pet who is older than 1?, show x axis from low to high order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is the id and weight of every pet who is older than 1?, display bar from low to high order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the id and weight of every pet who is older than 1?, could you list by the names in descending?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the id and weight of every pet who is older than 1, and show by the bars in descending.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is the id and weight of every pet who is older than 1?, and I want to list in desc by the X.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the id and weight of all pets whose age is older than 1 Visualize by bar chart, sort in descending by the names.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the id and weight of every pet who is older than 1, rank y axis in ascending order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is the id and weight of every pet who is older than 1?, and order from low to high by the y axis please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the id and weight of every pet who is older than 1?, and could you show in ascending by the y-axis please?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the id and weight of all pets whose age is older than 1 Visualize by bar chart, and show weight from low to high order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is the id and weight of every pet who is older than 1?, order Y from high to low order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the id and weight of all pets whose age is older than 1 Visualize by bar chart, sort by the Y-axis from high to low.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the id and weight of every pet who is older than 1?, sort weight in desc order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the id and weight of every pet who is older than 1, order in desc by the y axis.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight DESC"}, "hardness": "Medium"}, {"nl_queries": "List the maximum weight and type for each type of pet, and display in asc by the x-axis please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType ASC"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum weight for each type of pet List the maximum weight and pet type Visualize by bar chart, I want to rank from low to high by the bar.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show maximal weight from different pettype, display in asc by the x-axis please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType ASC"}, "hardness": "Easy"}, {"nl_queries": "List the maximum weight and type for each type of pet with a bar chart, and show by the PetType in asc.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType ASC"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum weight for each type of pet List the maximum weight and pet type Visualize by bar chart, and order by the x axis from high to low.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show maximal weight from different pettype, and rank bars from high to low order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType DESC"}, "hardness": "Easy"}, {"nl_queries": "List the maximum weight and type for each type of pet with a bar chart, and I want to list in desc by the x-axis.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType DESC"}, "hardness": "Easy"}, {"nl_queries": "List the maximum weight and type for each type of pet, and order by the bar in descending.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType DESC"}, "hardness": "Easy"}, {"nl_queries": "List the maximum weight and type for each type of pet with a bar chart, order by the Y-axis in ascending please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) ASC"}, "hardness": "Easy"}, {"nl_queries": "List the maximum weight and type for each type of pet, could you rank maximal weight from low to high order please?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) ASC"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum weight for each type of pet List the maximum weight and pet type Visualize by bar chart, and could you order maximal weight in ascending order?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show maximal weight from different pettype, list by the Y-axis in asc.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) ASC"}, "hardness": "Easy"}, {"nl_queries": "Find the maximum weight for each type of pet List the maximum weight and pet type Visualize by bar chart, rank in descending by the maximal weight.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) DESC"}, "hardness": "Easy"}, {"nl_queries": "List the maximum weight and type for each type of pet, and list in desc by the Y.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show maximal weight from different pettype, and sort by the Y in descending.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) DESC"}, "hardness": "Easy"}, {"nl_queries": "List the maximum weight and type for each type of pet with a bar chart, show by the maximal weight from high to low.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) DESC"}, "hardness": "Easy"}, {"nl_queries": "What is the average weight for each type of pet Show bar chart, and could you display in ascending by the bars?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the average of weight of each pettype, and sort by the X in asc.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the average weight for each pet type, and display by the PetType from low to high.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC"}, "hardness": "Medium"}, {"nl_queries": "what is the average weight for each type of pet?, and display by the PetType from low to high.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is the average weight for each type of pet?, and display by the PetType from low to high.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average weight for each type of pet Show bar chart, and could you display X-axis in descending order?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the average of weight of each pettype, and sort bar from high to low order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is the average weight for each type of pet?, and sort from high to low by the X.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the average weight for each pet type, and sort bar from high to low order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType DESC"}, "hardness": "Medium"}, {"nl_queries": "what is the average weight for each type of pet?, could you rank X from high to low order?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the average weight for each pet type, display y axis from low to high order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the average of weight of each pettype, I want to order from low to high by the Y-axis.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average weight for each type of pet Show bar chart, list in ascending by the y-axis.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is the average weight for each type of pet?, and I want to rank by the Y-axis from low to high.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC"}, "hardness": "Medium"}, {"nl_queries": "what is the average weight for each type of pet?, could you order by the total number from low to high?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC"}, "hardness": "Medium"}, {"nl_queries": "what is the average weight for each type of pet?, I want to list Y from high to low order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average weight for each type of pet Show bar chart, and I want to sort by the Y-axis from high to low please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the average of weight of each pettype, could you list in desc by the Y?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is the average weight for each type of pet?, could you show y axis from high to low order?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the average weight for each pet type, I want to order in descending by the the average of weight.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the different first names and ages of the students who do have pets?, rank by the bars from low to high.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the different first names and ages of the students who do have pets Visualize by bar chart, list X-axis in ascending order please.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the first name and age of students who have a pet, list by the names from low to high.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different first names and ages of the students who do have pets?, rank by the X-axis in asc.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the different first names and ages of the students who do have pets?, and display in desc by the names.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different first names and ages of the students who do have pets Visualize by bar chart, I want to rank in descending by the bar.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different first names and ages of the students who do have pets?, and could you order in desc by the bars?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the first name and age of students who have a pet, and I want to rank in descending by the bar.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the different first names and ages of the students who do have pets?, and display in asc by the y-axis.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the first name and age of students who have a pet, display in asc by the y-axis.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the different first names and ages of the students who do have pets Visualize by bar chart, order by the total number from low to high.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different first names and ages of the students who do have pets?, and order in ascending by the Y.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the different first names and ages of the students who do have pets Visualize by bar chart, and display Y from high to low order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the different first names and ages of the students who do have pets?, could you sort by the Y-axis in desc?", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different first names and ages of the students who do have pets?, and order by the Y in desc.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the first name and age of students who have a pet, display Age from high to low order.", "db_id": "pets_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age DESC"}, "hardness": "Medium"}, {"nl_queries": "Tell me the proportion of the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a pie chart.", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Company_name , COUNT(T2.Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY T2.Company_name", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Company_name , COUNT(T2.Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY T2.Company_name"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a bar chart.", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name", "binning": ""}, "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name"}, "hardness": "Hard"}, {"nl_queries": "Compute the total number of chips of different company names for all the phones that were launched in year 2002 or have RAM size greater than 32.", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company_name , COUNT(Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32 GROUP BY Company_name", "binning": ""}, "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32 GROUP BY Company_name"}, "hardness": "Extra Hard"}, {"nl_queries": "Compare the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a bar chart, list by the Company_name in asc please.", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY Company_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY Company_name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compare the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a bar chart, could you order by the X from high to low?", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY Company_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY Company_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compare the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a bar chart, order in ascending by the how many company name.", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY COUNT(Company_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY COUNT(Company_name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compare the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a bar chart, list in descending by the total number.", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY COUNT(Company_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY COUNT(Company_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compute the total number of chips of different company names for all the phones that were launched in year 2002 or have RAM size greater than 32, and could you show by the bar in asc?", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company_name , COUNT(Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32 GROUP BY Company_name ORDER BY Company_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32 GROUP BY Company_name ORDER BY Company_name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compute the total number of chips of different company names for all the phones that were launched in year 2002 or have RAM size greater than 32, I want to order by the X-axis from high to low.", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company_name , COUNT(Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32 GROUP BY Company_name ORDER BY Company_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32 GROUP BY Company_name ORDER BY Company_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compute the total number of chips of different company names for all the phones that were launched in year 2002 or have RAM size greater than 32, rank in ascending by the y-axis.", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company_name , COUNT(Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32 GROUP BY Company_name ORDER BY COUNT(Company_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32 GROUP BY Company_name ORDER BY COUNT(Company_name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compute the total number of chips of different company names for all the phones that were launched in year 2002 or have RAM size greater than 32, list y-axis in desc order.", "db_id": "phone_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Company_name , COUNT(Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32 GROUP BY Company_name ORDER BY COUNT(Company_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32 GROUP BY Company_name ORDER BY COUNT(Company_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier by a pie chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize PIE SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier. ", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize PIE SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each carrier.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize PIE SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier by a bar chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier. Plot them as bar chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Plot the total number by grouped by carrier as a bar graph", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "What is the number of carriers of phones? Give me a bar chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Can you show a bar chart to visualize the number of carriers?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis carrier y axis the number of carrier", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "What is the proportion of carriers of phones? ", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize PIE SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Can you visualize a pie chart to show the proportion of carriers?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize PIE SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing the number of carrier across carrier.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize PIE SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart on what are the memories and carriers of phones?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize PIE SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Show me a pie chart for what are the memories and carriers of phones?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize PIE SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "What are the memories and carriers of phones. Show the proportion.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize PIE SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show total number of memory in g from different carrier.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize PIE SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about what are the memories and carriers of phones?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "What are the memories and carriers of phones. ", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Plot total number of memory in g by grouped by carrier as a bar graph", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about what are the memories and carriers of phones?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram for what are the memories and carriers of phones?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "What are the memories and carriers of phones. Show bar chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show mean memory in g from different carrier", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier"}, "hardness": "Easy"}, {"nl_queries": "For each phone, show its names and total number of stocks. ", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize PIE SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name"}, "hardness": "Medium"}, {"nl_queries": "For each phone, show its names and total number of stocks. Visualize by bar chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name"}, "hardness": "Medium"}, {"nl_queries": "Show the proportion of names of phones with a pie chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name", "binning": ""}, "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of the names of phones by a bar chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart to visualize the number of the districts of markets they are on, in ascending order of the ranking of the market.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY T2.Ranking", "binning": ""}, "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY T2.Ranking"}, "hardness": "Hard"}, {"nl_queries": "Show the proportion of the districts of markets they are on, a pie chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District", "binning": ""}, "VQL": "Visualize PIE SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District"}, "hardness": "Medium"}, {"nl_queries": "Show the proportion of names of phones with a pie chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name", "binning": ""}, "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Show the number of names of phones in a bar chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "I want to compare the number of the names of phones by a bar chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart to visualize the number of the districts of markets they are on.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District", "binning": ""}, "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District"}, "hardness": "Medium"}, {"nl_queries": "I want to know the number of districts of markets they are on.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District", "binning": ""}, "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District"}, "hardness": "Medium"}, {"nl_queries": "Show the proportion of the districts of markets they are on, a pie chart.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District", "binning": ""}, "VQL": "Visualize PIE SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District"}, "hardness": "Medium"}, {"nl_queries": "How about grouping and counting the district for visualizing a pie chart?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District", "binning": ""}, "VQL": "Visualize PIE SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by carrier as a bar graph, and I want to list in asc by the names.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier by a bar chart, and rank by the X in asc.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier Plot them as bar chart, order in asc by the x-axis please.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier by a bar chart, order by the x axis in descending.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier Plot them as bar chart, I want to list from high to low by the X-axis.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by carrier as a bar graph, and list in desc by the x axis.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by carrier as a bar graph, I want to show by the Y from low to high.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier Plot them as bar chart, show from low to high by the the total number please.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier by a bar chart, could you rank by the Y in asc?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier Plot them as bar chart, show by the Y-axis in desc.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different carriers of phones together with the number of phones with each carrier by a bar chart, and order by the total number from high to low.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by carrier as a bar graph, and could you show in descending by the Y-axis?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis carrier y axis the number of carrier, show by the X in asc.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of carriers of phones? Give me a bar chart, and sort X in asc order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "Can you show a bar chart to visualize the number of carriers?, and I want to display in ascending by the x-axis.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis carrier y axis the number of carrier, display bar from high to low order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of carriers of phones? Give me a bar chart, could you order in desc by the Carrier?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "Can you show a bar chart to visualize the number of carriers?, and list x axis from high to low order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis carrier y axis the number of carrier, and rank by the Y in ascending.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) ASC"}, "hardness": "Medium"}, {"nl_queries": "Can you show a bar chart to visualize the number of carriers?, order in ascending by the y axis please.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of carriers of phones? Give me a bar chart, and show Y-axis from low to high order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis carrier y axis the number of carrier, sort in desc by the total number.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of carriers of phones? Give me a bar chart, sort in desc by the total number.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) DESC"}, "hardness": "Medium"}, {"nl_queries": "Can you show a bar chart to visualize the number of carriers?, sort in desc by the total number.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier ORDER BY COUNT(Carrier) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the memories and carriers of phones, order by the x-axis from low to high.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the memories and carriers of phones?, and order by the x-axis from low to high.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot total number of memory in g by grouped by carrier as a bar graph, and list Carrier in ascending order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the memories and carriers of phones, rank X-axis in descending order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the memories and carriers of phones?, and display by the bars from high to low.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot total number of memory in g by grouped by carrier as a bar graph, could you rank by the x axis from high to low please?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the memories and carriers of phones, show in ascending by the sum memory in g.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the memories and carriers of phones?, could you list in ascending by the y-axis?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot total number of memory in g by grouped by carrier as a bar graph, display by the sum memory in g in asc.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the memories and carriers of phones, could you sort total number in desc order please?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot total number of memory in g by grouped by carrier as a bar graph, and I want to list by the y axis from high to low.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the memories and carriers of phones?, and order by the Y-axis in descending.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the memories and carriers of phones?, list bars from low to high order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the memories and carriers of phones?, sort x-axis from low to high order please.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show mean memory in g from different carrier, rank in asc by the X.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the memories and carriers of phones Show bar chart, could you rank by the X-axis from low to high?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show mean memory in g from different carrier, sort X-axis from high to low order please.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the memories and carriers of phones?, list x axis in desc order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the memories and carriers of phones Show bar chart, order in descending by the x-axis.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the memories and carriers of phones?, list by the x axis in desc.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the memories and carriers of phones?, rank total number in ascending order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the memories and carriers of phones Show bar chart, rank total number in ascending order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the memories and carriers of phones?, and could you rank by the total number from low to high?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show mean memory in g from different carrier, rank Y-axis in asc order please.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show mean memory in g from different carrier, and could you order from high to low by the Y-axis?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the memories and carriers of phones?, and show Y in descending order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the memories and carriers of phones?, and show by the total number in desc.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the memories and carriers of phones Show bar chart, and show by the mean memory in g in descending.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each phone, show its names and total number of stocks Visualize by bar chart, and could you sort in ascending by the names?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "For each phone, show its names and total number of stocks Visualize by bar chart, and rank by the bars in desc please.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For each phone, show its names and total number of stocks Visualize by bar chart, rank by the Y-axis in ascending please.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY sum(T1.Num_of_stock) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY sum(T1.Num_of_stock) ASC"}, "hardness": "Hard"}, {"nl_queries": "For each phone, show its names and total number of stocks Visualize by bar chart, and rank num of stock in descending order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY sum(T1.Num_of_stock) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY sum(T1.Num_of_stock) DESC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of the names of phones by a bar chart, and display by the x axis in asc.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of the names of phones by a bar chart, and order in descending by the x-axis.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of the names of phones by a bar chart, and I want to order by the y axis from low to high.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of the names of phones by a bar chart, I want to rank Y-axis in desc order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "I want to compare the number of the names of phones by a bar chart, and list by the Name in ascending.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of names of phones in a bar chart, list by the Name in ascending.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of names of phones in a bar chart, and list by the X in descending.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "I want to compare the number of the names of phones by a bar chart, and show bars from high to low order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of names of phones in a bar chart, display by the y-axis in asc.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "I want to compare the number of the names of phones by a bar chart, and display from low to high by the total number.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of names of phones in a bar chart, and could you show the number of name in descending order?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "I want to compare the number of the names of phones by a bar chart, could you rank by the the number of name in desc?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart to visualize the number of the districts of markets they are on, and I want to order from low to high by the X.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY District ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY District ASC"}, "hardness": "Hard"}, {"nl_queries": "I want to know the number of districts of markets they are on, and order by the x-axis in ascending.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY District ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY District ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart to visualize the number of the districts of markets they are on, and display bars in descending order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY District DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY District DESC"}, "hardness": "Hard"}, {"nl_queries": "I want to know the number of districts of markets they are on, and list X from high to low order.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY District DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY District DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart to visualize the number of the districts of markets they are on, order by the how many district in ascending.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY COUNT(District) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY COUNT(District) ASC"}, "hardness": "Hard"}, {"nl_queries": "I want to know the number of districts of markets they are on, and could you display in ascending by the y axis?", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY COUNT(District) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY COUNT(District) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart to visualize the number of the districts of markets they are on, and list by the total number from high to low.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY COUNT(District) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY COUNT(District) DESC"}, "hardness": "Hard"}, {"nl_queries": "I want to know the number of districts of markets they are on, list from high to low by the total number please.", "db_id": "phone_market", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY COUNT(District) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY COUNT(District) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the proportion of positions of pilots?", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position", "binning": ""}, "VQL": "Visualize PIE SELECT Position , COUNT(Position) FROM pilot GROUP BY Position"}, "hardness": "Easy"}, {"nl_queries": "Show a pie chart to compare the number of each position of the pilot.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position", "binning": ""}, "VQL": "Visualize PIE SELECT Position , COUNT(Position) FROM pilot GROUP BY Position"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each position.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position", "binning": ""}, "VQL": "Visualize PIE SELECT Position , COUNT(Position) FROM pilot GROUP BY Position"}, "hardness": "Easy"}, {"nl_queries": "Please compare the frequency of the position of the pilots using a bar chart.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position"}, "hardness": "Easy"}, {"nl_queries": "Can you draw a bar chart to show the number of positions of the pilots?", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of the number of position from each position", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position"}, "hardness": "Easy"}, {"nl_queries": "Show me a pie chart for what are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "what are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality. ", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Compute the total the total number across nationality as a pie chart.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality. Show bar chart.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show the total number from different nationality", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of the number of position from each position, and list in ascending by the Position.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position ASC"}, "hardness": "Medium"}, {"nl_queries": "Please compare the frequency of the position of the pilots using a bar chart, and could you sort from low to high by the bar please?", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position ASC"}, "hardness": "Medium"}, {"nl_queries": "Can you draw a bar chart to show the number of positions of the pilots?, and I want to order bar in ascending order.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of position from each position, list by the names in desc.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position DESC"}, "hardness": "Medium"}, {"nl_queries": "Can you draw a bar chart to show the number of positions of the pilots?, list in desc by the X please.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position DESC"}, "hardness": "Medium"}, {"nl_queries": "Please compare the frequency of the position of the pilots using a bar chart, and could you order by the bars from high to low?", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position DESC"}, "hardness": "Medium"}, {"nl_queries": "Can you draw a bar chart to show the number of positions of the pilots?, and I want to rank by the Y from low to high.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY COUNT(Position) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY COUNT(Position) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of position from each position, and could you sort the number of position in asc order please?", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY COUNT(Position) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY COUNT(Position) ASC"}, "hardness": "Medium"}, {"nl_queries": "Please compare the frequency of the position of the pilots using a bar chart, and order Y in ascending order.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY COUNT(Position) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY COUNT(Position) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of position from each position, rank by the Y from high to low please.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY COUNT(Position) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY COUNT(Position) DESC"}, "hardness": "Medium"}, {"nl_queries": "Please compare the frequency of the position of the pilots using a bar chart, and could you list in descending by the Y-axis?", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY COUNT(Position) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY COUNT(Position) DESC"}, "hardness": "Medium"}, {"nl_queries": "Can you draw a bar chart to show the number of positions of the pilots?, rank in descending by the total number please.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY COUNT(Position) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY COUNT(Position) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality, and I want to list by the names in ascending.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different nationality, I want to show by the X-axis from low to high.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality Show bar chart, list by the x axis in ascending.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different nationality, and show in desc by the X.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality Show bar chart, display by the names in desc.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality, and display by the names in desc.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different nationality, list in ascending by the the total number .", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality Show bar chart, display in asc by the total number.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality, and could you display total number from low to high order?", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different nationality, sort total number in desc order.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality Show bar chart, and sort total number in desc order.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality, display by the total number in desc.", "db_id": "pilot_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the final tables made and the best finishes of poker players in a scatter chart", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Final_Table_Made , Best_Finish FROM poker_player", "binning": ""}, "VQL": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player"}, "hardness": "Easy"}, {"nl_queries": "List the final tables made and the best finishes of poker players. Show the correlation.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Final_Table_Made , Best_Finish FROM poker_player", "binning": ""}, "VQL": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart on what are the final tables made and best finishes for all poker players?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Final_Table_Made , Best_Finish FROM poker_player", "binning": ""}, "VQL": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart about what are the final tables made and best finishes for all poker players?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Final_Table_Made , Best_Finish FROM poker_player", "binning": ""}, "VQL": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player"}, "hardness": "Easy"}, {"nl_queries": "What are the final tables made and best finishes for all poker players. Plot them as scatter chart.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Final_Table_Made , Best_Finish FROM poker_player", "binning": ""}, "VQL": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player"}, "hardness": "Easy"}, {"nl_queries": "Plot a scatter chart, final table made by best_finish.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Final_Table_Made , Best_Finish FROM poker_player", "binning": ""}, "VQL": "Visualize SCATTER SELECT Final_Table_Made , Best_Finish FROM poker_player"}, "hardness": "Easy"}, {"nl_queries": "what are different nationalities of people and the corresponding number of people from each nation?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Give the proportion of what are different nationalities of people and the corresponding number of people from each nation?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "What are different nationalities of people and the corresponding number of people from each nation. ", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Give the proportion of how many people are there of each nationality?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Return a pie on how many people are there of each nationality?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "How many people are there of each nationality. Visualize by pie chart.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the total number from different nationality.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "what are different nationalities of people and the corresponding number of people from each nation?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on what are different nationalities of people and the corresponding number of people from each nation?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "What are different nationalities of people and the corresponding number of people from each nation. Visualize by bar chart.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for how many people are there of each nationality?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for how many people are there of each nationality?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "How many people are there of each nationality. Visualize by bar chart.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of nationality versus the total number ", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for how many people are there of each nationality?, and I want to rank in ascending by the names.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "what are different nationalities of people and the corresponding number of people from each nation?, rank from low to high by the bar.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "What are different nationalities of people and the corresponding number of people from each nation Visualize by bar chart, and list X in asc order.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many people are there of each nationality?, and list X in asc order.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are different nationalities of people and the corresponding number of people from each nation?, and I want to rank in asc by the X-axis please.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of nationality versus the total number, and I want to rank in ascending by the names.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "How many people are there of each nationality Visualize by bar chart, show bars in asc order.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are different nationalities of people and the corresponding number of people from each nation?, display bar from high to low order.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many people are there of each nationality?, list in descending by the bars.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "How many people are there of each nationality Visualize by bar chart, and I want to display by the bars in descending.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many people are there of each nationality?, and could you display from high to low by the x-axis?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of nationality versus the total number, and list in descending by the bars.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "what are different nationalities of people and the corresponding number of people from each nation?, and list in descending by the bars.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "What are different nationalities of people and the corresponding number of people from each nation Visualize by bar chart, order by the bar in descending.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many people are there of each nationality?, I want to order y axis from low to high order.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many people are there of each nationality?, could you list by the Y-axis in ascending?", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are different nationalities of people and the corresponding number of people from each nation Visualize by bar chart, rank from low to high by the y-axis.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many people are there of each nationality Visualize by bar chart, list in asc by the total number please.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are different nationalities of people and the corresponding number of people from each nation?, display in asc by the y axis.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "what are different nationalities of people and the corresponding number of people from each nation?, display in asc by the y axis.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of nationality versus the total number, sort total number from low to high order please.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "what are different nationalities of people and the corresponding number of people from each nation?, order from high to low by the y axis.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many people are there of each nationality?, order from high to low by the y-axis.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are different nationalities of people and the corresponding number of people from each nation Visualize by bar chart, and order from high to low by the Y-axis.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many people are there of each nationality?, list in descending by the Y please.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many people are there of each nationality Visualize by bar chart, order Y from high to low order please.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are different nationalities of people and the corresponding number of people from each nation?, and order Y from high to low order please.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of nationality versus the total number, and sort from high to low by the total number.", "db_id": "poker_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compute how many attributes in each name of the attribute definitions with attribute value 0. Show the result with a pie chart.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name", "binning": ""}, "VQL": "Visualize PIE SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name"}, "hardness": "Hard"}, {"nl_queries": "Which attribute definitions have attribute value 0? Give me the proportion of each attribute name.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name", "binning": ""}, "VQL": "Visualize PIE SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name"}, "hardness": "Hard"}, {"nl_queries": "Compute how many attributes in each name of the attribute definitions with attribute value 0. Show the result with a bar chart.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name"}, "hardness": "Hard"}, {"nl_queries": "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name"}, "hardness": "Hard"}, {"nl_queries": "Find the names and publication dates of all catalogs that have catalog level number greater than 5. Bin publication dates into Year interval, and count catalog and group by catalog name.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name", "binning": "BIN date_of_publication BY YEAR"}, "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name BIN date_of_publication BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names and publication dates of all catalogs that have catalog level numbers greater than 5. Bin publication dates into Year interval, and count catalog as a bar chart.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5", "binning": "BIN date_of_publication BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 BIN date_of_publication BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a bar chart.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs", "binning": "BIN date_of_latest_revision BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs BIN date_of_latest_revision BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis date of latest revision y axis the number of date of latest revision", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs", "binning": "BIN date_of_latest_revision BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs BIN date_of_latest_revision BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a line chart.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs", "binning": "BIN date_of_latest_revision BY MONTH"}, "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs BIN date_of_latest_revision BY MONTH"}, "hardness": "Easy"}, {"nl_queries": "On which days more than one revisions were made on catalogs, bin the date into weekday interval and count them to show the trend.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs", "binning": "BIN date_of_latest_revision BY MONTH"}, "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs BIN date_of_latest_revision BY MONTH"}, "hardness": "Easy"}, {"nl_queries": "Plot date of latest revision by the number of date of latest revision as a line chart", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs", "binning": "BIN date_of_latest_revision BY MONTH"}, "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs BIN date_of_latest_revision BY MONTH"}, "hardness": "Easy"}, {"nl_queries": "Find the name and level of catalog structure with level between 5 and 10. ", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart for what are the name and level of catalog structure with level number between 5 and 10", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"}, "hardness": "Easy"}, {"nl_queries": "Show me the proportion on what are the name and level of catalog structure with level number between 5 and 10", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"}, "hardness": "Easy"}, {"nl_queries": "What are the name and level of catalog structure with level number between 5 and 1. Show a pie chart.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"}, "hardness": "Easy"}, {"nl_queries": "Find the name and level of catalog structure with level between 5 and 10. ", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"}, "hardness": "Easy"}, {"nl_queries": "What are the name and level of catalog structure with level number between 5 and 1. Show bar chart.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"}, "hardness": "Easy"}, {"nl_queries": "Find the name and capacity of products with price greater than 700 (in USD). Visualize by pie chart.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"}, "hardness": "Easy"}, {"nl_queries": "Pie. which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"}, "hardness": "Easy"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities with a pie chart.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"}, "hardness": "Easy"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities. Show the proportion.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"}, "hardness": "Easy"}, {"nl_queries": "Find the name and capacity of products with price greater than 700 (in USD). Show bar chart.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"}, "hardness": "Easy"}, {"nl_queries": "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"}, "hardness": "Easy"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"}, "hardness": "Easy"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities. ", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"}, "hardness": "Easy"}, {"nl_queries": "What are the names of catalog entries with level number 8, and count them by a pie chart", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"}, "hardness": "Hard"}, {"nl_queries": "Find the names of catalog entries with level number 8, and count them by a pie chart", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"}, "hardness": "Hard"}, {"nl_queries": "A pie chart for finding the number of the names of catalog entries with level number 8.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"}, "hardness": "Hard"}, {"nl_queries": "Find the number of the names of catalog entries with level number 8.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"}, "hardness": "Hard"}, {"nl_queries": "A pie chart for what are the number of the names of catalog entries with level number 8?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the names of catalog entries with level number 8?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name", "binning": ""}, "VQL": "Visualize PIE SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"}, "hardness": "Hard"}, {"nl_queries": "What are the names of catalog entries with level number 8, and count them by a bar chart", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for finding the number of the names of catalog entries with level number 8.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"}, "hardness": "Hard"}, {"nl_queries": "Find the names of catalog entries with level number 8, and count them by a bar chart", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"}, "hardness": "Hard"}, {"nl_queries": "Find the number of the names of catalog entries with level number 8.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the names of catalog entries with level number 8?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the names of catalog entries with level number 8?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name"}, "hardness": "Hard"}, {"nl_queries": "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, sort in ascending by the x axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name, rank from low to high by the names please.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name, I want to show from high to low by the X.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, list from high to low by the x axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name, and show total number from low to high order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, show y axis in asc order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name, and I want to display the number of attribute name in descending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, I want to display the number of attribute name in descending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names and publication dates of all catalogs that have catalog level number greater than 5 Bin publication dates into Year interval, and count catalog and group by catalog name, order the number of date of publication from low to high order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name ORDER BY COUNT(date_of_publication) ASC", "binning": "BIN date_of_publication BY YEAR"}, "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name ORDER BY COUNT(date_of_publication) ASC BIN date_of_publication BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names and publication dates of all catalogs that have catalog level number greater than 5 Bin publication dates into Year interval, and count catalog and group by catalog name, and display Y in descending order please.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name ORDER BY COUNT(date_of_publication) DESC", "binning": "BIN date_of_publication BY YEAR"}, "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name ORDER BY COUNT(date_of_publication) DESC BIN date_of_publication BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names and publication dates of all catalogs that have catalog level numbers greater than 5 Bin publication dates into Year interval, and count catalog as a bar chart, display by the Y from low to high.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5  ORDER BY COUNT(date_of_publication) ASC", "binning": "BIN date_of_publication BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5  ORDER BY COUNT(date_of_publication) ASC BIN date_of_publication BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names and publication dates of all catalogs that have catalog level numbers greater than 5 Bin publication dates into Year interval, and count catalog as a bar chart, and could you order Y-axis from high to low order?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5  ORDER BY COUNT(date_of_publication) DESC", "binning": "BIN date_of_publication BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5  ORDER BY COUNT(date_of_publication) DESC BIN date_of_publication BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a bar chart, and rank Y from low to high order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) ASC", "binning": "BIN date_of_latest_revision BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) ASC BIN date_of_latest_revision BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis date of latest revision y axis the number of date of latest revision, and display y axis in ascending order please.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) ASC", "binning": "BIN date_of_latest_revision BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) ASC BIN date_of_latest_revision BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis date of latest revision y axis the number of date of latest revision, could you rank in desc by the Y-axis?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) DESC", "binning": "BIN date_of_latest_revision BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) DESC BIN date_of_latest_revision BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a bar chart, and I want to list in desc by the Y-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) DESC", "binning": "BIN date_of_latest_revision BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) DESC BIN date_of_latest_revision BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a line chart, sort by the x axis from low to high.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision ASC", "binning": "BIN date_of_latest_revision BY MONTH"}, "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision ASC BIN date_of_latest_revision BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Plot date of latest revision by the number of date of latest revision as a line chart, rank by the x axis in asc please.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision ASC", "binning": "BIN date_of_latest_revision BY MONTH"}, "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision ASC BIN date_of_latest_revision BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "On which days more than one revisions were made on catalogs, bin the date into weekday interval and count them to show the trend, list in asc by the date_of_latest_revision please.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision ASC", "binning": "BIN date_of_latest_revision BY MONTH"}, "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision ASC BIN date_of_latest_revision BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "On which days more than one revisions were made on catalogs, bin the date into weekday interval and count them to show the trend, and sort by the date_of_latest_revision in descending.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision DESC", "binning": "BIN date_of_latest_revision BY MONTH"}, "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision DESC BIN date_of_latest_revision BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a line chart, I want to order by the x axis from high to low please.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision DESC", "binning": "BIN date_of_latest_revision BY MONTH"}, "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision DESC BIN date_of_latest_revision BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Plot date of latest revision by the number of date of latest revision as a line chart, and list date_of_latest_revision from high to low order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision DESC", "binning": "BIN date_of_latest_revision BY MONTH"}, "VQL": "Visualize LINE SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY date_of_latest_revision DESC BIN date_of_latest_revision BY MONTH"}, "hardness": "Medium"}, {"nl_queries": "Find the name and level of catalog structure with level between 5 and 10, rank by the bars in asc.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10, list from low to high by the X-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the name and level of catalog structure with level number between 5 and 1 Show bar chart, and list from low to high by the X-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10, could you order X-axis from low to high order?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10, and show from high to low by the x-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10, list by the x axis in desc.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the name and level of catalog structure with level number between 5 and 1 Show bar chart, and list names in desc order please.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and level of catalog structure with level between 5 and 10, could you sort by the catalog_level_name from high to low?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the name and level of catalog structure with level number between 5 and 1 Show bar chart, and display in ascending by the y-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10, and I want to list in ascending by the y axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10, and sort y-axis in asc order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and level of catalog structure with level between 5 and 10, and list by the y axis in ascending.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10, and could you sort Y-axis from high to low order?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the name and level of catalog structure with level number between 5 and 1 Show bar chart, and rank by the Y-axis in descending.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and level of catalog structure with level between 5 and 10, show by the total number from high to low.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10, and rank total number in descending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, I want to list in asc by the x axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, list by the X in ascending.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, display by the names from low to high please.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, order in asc by the x-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, and I want to list in asc by the x axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, list in desc by the x-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, could you sort bars in desc order?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, show bar from high to low order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, could you list x axis in desc order?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, and could you list catalog_entry_name from high to low order please?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, and show Y-axis in ascending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC"}, "hardness": "Medium"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, list total number in ascending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC"}, "hardness": "Medium"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, could you order capacity in asc order please?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, order in asc by the y axis please.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, and display by the Y-axis from low to high please.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, I want to show in desc by the y axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC"}, "hardness": "Medium"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, and show y axis in descending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, and I want to show in desc by the y axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC"}, "hardness": "Medium"}, {"nl_queries": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, I want to list in descending by the y-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, and show by the y axis from high to low.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY capacity DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names of catalog entries with level number 8, and count them by a bar chart, and sort x axis from low to high order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the names of catalog entries with level number 8?, I want to sort by the names in ascending.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the names of catalog entries with level number 8?, and order names in ascending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the names of catalog entries with level number 8, order in ascending by the names.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the names of catalog entries with level number 8, and order names in ascending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names of catalog entries with level number 8, and count them by a bar chart, could you display in ascending by the names?", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the names of catalog entries with level number 8?, and rank from high to low by the X-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the names of catalog entries with level number 8?, rank from high to low by the X-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the names of catalog entries with level number 8, and count them by a bar chart, and order by the X in descending.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the names of catalog entries with level number 8, and I want to show x-axis in desc order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names of catalog entries with level number 8, and count them by a bar chart, I want to show x-axis in desc order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the names of catalog entries with level number 8, list by the x axis in desc.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the names of catalog entries with level number 8, display Y-axis in ascending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the names of catalog entries with level number 8?, sort by the Y in ascending.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names of catalog entries with level number 8, and count them by a bar chart, list by the y-axis in ascending.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the names of catalog entries with level number 8, display Y-axis in ascending order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the names of catalog entries with level number 8, and count them by a bar chart, and rank Y in asc order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the names of catalog entries with level number 8?, and list in asc by the Y please.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the names of catalog entries with level number 8, and rank in descending by the y axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the names of catalog entries with level number 8?, I want to order in descending by the Y-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names of catalog entries with level number 8, and count them by a bar chart, and rank in descending by the y axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the names of catalog entries with level number 8, and I want to rank y axis in desc order.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the names of catalog entries with level number 8?, and list by the Y in desc.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the names of catalog entries with level number 8, and count them by a bar chart, and display from high to low by the Y-axis.", "db_id": "product_catalog", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good'", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good'"}, "hardness": "Easy"}, {"nl_queries": "Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart, and order by their last name.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY last_name", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY last_name"}, "hardness": "Medium"}, {"nl_queries": "How many bookings did each customer make? List the customer id and the count in the scatter chart.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.customer_id , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.customer_id , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id"}, "hardness": "Medium"}, {"nl_queries": "How many bookings did each customer make? Show the customer id as the Y-axis and the first name as the X-axis in a bar chart.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.first_name , T1.customer_id FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id", "binning": ""}, "VQL": "Visualize BAR SELECT T1.first_name , T1.customer_id FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id"}, "hardness": "Easy"}, {"nl_queries": "How many bookings did each customer make? List the first name as the X-axis, and the count as the Y-axis in the bar chart.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id"}, "hardness": "Medium"}, {"nl_queries": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a bar chart", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' BIN payment_date BY MONTH"}, "hardness": "Hard"}, {"nl_queries": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a bar chart", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' BIN payment_date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a line chart", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date"}, "hardness": "Hard"}, {"nl_queries": "Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart, and sort by the names in asc.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY first_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY first_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart, could you sort from high to low by the first_name please?", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY first_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY first_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart, list by the Y in asc.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY gender_mf ASC", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY gender_mf ASC"}, "hardness": "Medium"}, {"nl_queries": "Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart, show y-axis in descending order.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY gender_mf DESC", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY gender_mf DESC"}, "hardness": "Medium"}, {"nl_queries": "How many bookings did each customer make? Show the customer id as the Y-axis and the first name as the X-axis in a bar chart, and could you sort by the X-axis from low to high?", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.first_name , T1.customer_id FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.first_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.first_name , T1.customer_id FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.first_name ASC"}, "hardness": "Medium"}, {"nl_queries": "How many bookings did each customer make? Show the customer id as the Y-axis and the first name as the X-axis in a bar chart, rank from high to low by the X-axis.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.first_name , T1.customer_id FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.first_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.first_name , T1.customer_id FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.first_name DESC"}, "hardness": "Medium"}, {"nl_queries": "How many bookings did each customer make? Show the customer id as the Y-axis and the first name as the X-axis in a bar chart, and rank by the customer_id in asc.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.first_name , T1.customer_id FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.customer_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.first_name , T1.customer_id FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.customer_id ASC"}, "hardness": "Medium"}, {"nl_queries": "How many bookings did each customer make? Show the customer id as the Y-axis and the first name as the X-axis in a bar chart, sort Y in descending order.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.first_name , T1.customer_id FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.customer_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.first_name , T1.customer_id FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.customer_id DESC"}, "hardness": "Medium"}, {"nl_queries": "How many bookings did each customer make? List the first name as the X-axis, and the count as the Y-axis in the bar chart, show in ascending by the X-axis please.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY first_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY first_name ASC"}, "hardness": "Hard"}, {"nl_queries": "How many bookings did each customer make? List the first name as the X-axis, and the count as the Y-axis in the bar chart, and show by the x axis in desc.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY first_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY first_name DESC"}, "hardness": "Hard"}, {"nl_queries": "How many bookings did each customer make? List the first name as the X-axis, and the count as the Y-axis in the bar chart, list the total number in asc order.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many bookings did each customer make? List the first name as the X-axis, and the count as the Y-axis in the bar chart, could you order by the total number in descending please?", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a bar chart, order by the y axis from low to high.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) ASC", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) ASC BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a bar chart, order in desc by the y axis.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) DESC", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) DESC BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a bar chart, and I want to rank y-axis in ascending order.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) ASC", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) ASC BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a bar chart, show in descending by the y axis.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) DESC", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'  ORDER BY COUNT(payment_date) DESC BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a line chart, show X from low to high order.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date ORDER BY payment_date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date ORDER BY payment_date ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a line chart, order x-axis in ascending order.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date ORDER BY payment_date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date ORDER BY payment_date ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a line chart, and show X from high to low order.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date ORDER BY payment_date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date ORDER BY payment_date DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a line chart, and display in descending by the payment_date.", "db_id": "products_for_hire", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date ORDER BY payment_date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date ORDER BY payment_date DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the category descriptions of the products whose descriptions include letter 't'.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize PIE SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "A pie chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize PIE SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a pie chart", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize PIE SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize PIE SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the category descriptions of the products whose descriptions include letter 't', and count them by a pie chart", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize PIE SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "A pie chart for finding the number of the category descriptions of the products whose descriptions include letter 't'.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize PIE SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the category descriptions of the products whose descriptions include letter 't'.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't'.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the category descriptions of the products whose descriptions include letter 't', list names in ascending order.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't', and could you rank x axis from low to high order?", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, and list names in ascending order.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, and order product_category_description in ascending order.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, list x axis in ascending order.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart, could you rank x axis from low to high order?", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, I want to display by the names in descending please.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, could you order by the names in descending?", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the category descriptions of the products whose descriptions include letter 't', could you order by the names in descending?", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart, and display from high to low by the bars.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, and I want to display by the names in descending please.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't', and I want to display by the bar from high to low please.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, rank y-axis in ascending order.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, order from low to high by the total number.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the category descriptions of the products whose descriptions include letter 't', and order total number in ascending order.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, and rank y-axis in ascending order.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart, could you list by the y axis in asc?", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't', sort in ascending by the Y-axis.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart, display by the y-axis from high to low.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, and display by the y-axis from high to low.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the category descriptions of the products whose descriptions include letter 't', I want to sort y-axis in descending order.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, display Y from high to low order.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, display by the total number in desc.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't', and display Y in desc order.", "db_id": "products_gen_characteristics", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Count the number of programs broadcast for each time section of a day by a pie chart.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day", "binning": ""}, "VQL": "Visualize PIE SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day"}, "hardness": "Easy"}, {"nl_queries": "Count the number of programs broadcast for each time section of a day. Visualize by pie chart.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day", "binning": ""}, "VQL": "Visualize PIE SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each time of day.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day", "binning": ""}, "VQL": "Visualize PIE SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day"}, "hardness": "Easy"}, {"nl_queries": "Count the number of programs broadcast for each time section of a day in a bar chart.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day"}, "hardness": "Easy"}, {"nl_queries": "Count the number of programs broadcast for each time section of a day. Show bar chart.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day"}, "hardness": "Easy"}, {"nl_queries": "Plot the total number by grouped by time of day as a bar graph", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day"}, "hardness": "Easy"}, {"nl_queries": "Find the total rating ratio for each channel owner. Show a pie chart.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER", "binning": ""}, "VQL": "Visualize PIE SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart on what is the total rating of channel for each channel owner?", "db_id": "program_share", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER", "binning": ""}, "VQL": "Visualize PIE SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER"}, "hardness": "Easy"}, {"nl_queries": "Show me the proportion on what is the total rating of channel for each channel owner?", "db_id": "program_share", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER", "binning": ""}, "VQL": "Visualize PIE SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER"}, "hardness": "Easy"}, {"nl_queries": "What is the total rating of channel for each channel owner. Plot them as pie chart.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER", "binning": ""}, "VQL": "Visualize PIE SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER"}, "hardness": "Easy"}, {"nl_queries": "Compute the total total number of rating in percent across owner as a pie chart.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER", "binning": ""}, "VQL": "Visualize PIE SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER"}, "hardness": "Easy"}, {"nl_queries": "Find the total rating ratio for each channel owner. Visualize by bar chart.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what is the total rating of channel for each channel owner?", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about what is the total rating of channel for each channel owner?", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER"}, "hardness": "Easy"}, {"nl_queries": "What is the total rating of channel for each channel owner. Plot them as bar chart.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of owner versus total number of rating in percent", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER"}, "hardness": "Easy"}, {"nl_queries": "Count the number of programs broadcast for each time section of a day in a bar chart, sort names from low to high order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by time of day as a bar graph, rank X-axis in ascending order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of programs broadcast for each time section of a day Show bar chart, could you show by the x-axis in asc please?", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by time of day as a bar graph, and list from high to low by the names.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of programs broadcast for each time section of a day Show bar chart, display X in descending order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of programs broadcast for each time section of a day in a bar chart, and could you order in desc by the x axis?", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by time of day as a bar graph, rank in ascending by the total number.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of programs broadcast for each time section of a day Show bar chart, order Y-axis in ascending order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of programs broadcast for each time section of a day in a bar chart, order y axis in asc order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of programs broadcast for each time section of a day in a bar chart, sort Y in descending order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of programs broadcast for each time section of a day Show bar chart, could you rank by the the total number in desc?", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by time of day as a bar graph, and list Y in descending order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total rating of channel for each channel owner Plot them as bar chart, rank x axis in ascending order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the total rating of channel for each channel owner?, and could you show by the X from low to high?", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of owner versus total number of rating in percent, and display in ascending by the X.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the total rating of channel for each channel owner?, and display in ascending by the X.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the total rating ratio for each channel owner Visualize by bar chart, could you show X-axis in ascending order please?", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the total rating of channel for each channel owner?, sort in descending by the bars.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total rating of channel for each channel owner Plot them as bar chart, and sort bar from high to low order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the total rating ratio for each channel owner Visualize by bar chart, sort in descending by the bars.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the total rating of channel for each channel owner?, and rank X from high to low order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of owner versus total number of rating in percent, rank X from high to low order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the total rating ratio for each channel owner Visualize by bar chart, display Y-axis from low to high order please.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total rating of channel for each channel owner Plot them as bar chart, and sort Y-axis in asc order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the total rating of channel for each channel owner?, and show in ascending by the total number.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the total rating of channel for each channel owner?, display in ascending by the y axis.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of owner versus total number of rating in percent, and sort Y-axis in asc order.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the total rating of channel for each channel owner?, I want to list by the y-axis in descending.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of owner versus total number of rating in percent, and order in descending by the y axis.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is the total rating of channel for each channel owner?, and I want to list by the sum rating in percent in desc.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total rating of channel for each channel owner Plot them as bar chart, and I want to list by the sum rating in percent in desc.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the total rating ratio for each channel owner Visualize by bar chart, and I want to list by the y-axis in descending.", "db_id": "program_share", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each building, show the name of the building and the number of institutions in it. Plot them as bar chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart showing institution types, along with the number of institutions for each type.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of type versus the total number ", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Please give me a pie chart showing institution types, along with the total enrollment for each type.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Please tell me the proportion of total enrollment for each type using a pie chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show sum enrollment from different type.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Please give me a bar chart showing institution types, along with the total enrollment for each type.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Please compare the total enrollment for each type using a bar chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis type y axis total number of enrollment", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Please tell me the proportion of the number of institutions for each type using a pie chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , count(*) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Please give me a pie chart showing institution types, along with the number of institutions for each type.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , count(*) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Compute the total the total number across type as a pie chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , count(*) FROM institution GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Show the relationship between the number of institutions and total enrollment for each type with a scatter plot.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE"}, "hardness": "Medium"}, {"nl_queries": "Give me a scatter to show the correlations between the number of institutions and total enrollment for each type.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE"}, "hardness": "Medium"}, {"nl_queries": "Scatter plot to show count(*) on x axis and total number of enrollment on y axis.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE"}, "hardness": "Medium"}, {"nl_queries": "Show the relationship between the number of institutions and total enrollment for each type with a scatter plot.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type"}, "hardness": "Medium"}, {"nl_queries": "Give me a scatter to show the correlations between the number of institutions and total enrollment for each type.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type"}, "hardness": "Medium"}, {"nl_queries": "Show count(*) vs sum enrollment as scatter plot use a different color for each Type", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type"}, "hardness": "Medium"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 in a pie chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880"}, "hardness": "Medium"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880. Show the proportion.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880"}, "hardness": "Medium"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880"}, "hardness": "Medium"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880. Plot them as bar chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart that the name as the X-axis, and the number of floors for all buildings as Y-axis, and ordered by the number of floors.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Floors FROM building ORDER BY floors", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Floors FROM building ORDER BY floors"}, "hardness": "Easy"}, {"nl_queries": "Please compare the number of floors for all building names using a bar chart, and order by the number of floors.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Floors FROM building ORDER BY floors", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Floors FROM building ORDER BY floors"}, "hardness": "Easy"}, {"nl_queries": "Please compare the number of floors for all street address using a bar chart, and order by the number of floors.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Street_address , Floors FROM building ORDER BY floors", "binning": ""}, "VQL": "Visualize BAR SELECT Street_address , Floors FROM building ORDER BY floors"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart that the street address as the X-axis, and the number of floors for all buildings as Y-axis, and ordered by the number of floors.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Street_address , Floors FROM building ORDER BY floors", "binning": ""}, "VQL": "Visualize BAR SELECT Street_address , Floors FROM building ORDER BY floors"}, "hardness": "Easy"}, {"nl_queries": "Show institution names along with the number of proteins for each institution by a pie chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id", "binning": ""}, "VQL": "Visualize PIE SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id"}, "hardness": "Medium"}, {"nl_queries": "Show institution names along with the number of proteins for each institution. Plot them as pie chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id", "binning": ""}, "VQL": "Visualize PIE SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id"}, "hardness": "Medium"}, {"nl_queries": "Show institution names along with the number of proteins for each institution in a bar chart.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id", "binning": ""}, "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id"}, "hardness": "Medium"}, {"nl_queries": "Show institution names along with the number of proteins for each institution. ", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id", "binning": ""}, "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id"}, "hardness": "Medium"}, {"nl_queries": "For each building, show the name of the building and the number of institutions in it Plot them as bar chart, and display X from low to high order.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "For each building, show the name of the building and the number of institutions in it Plot them as bar chart, and could you show bars in desc order?", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For each building, show the name of the building and the number of institutions in it Plot them as bar chart, rank by the the total number in asc please.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "For each building, show the name of the building and the number of institutions in it Plot them as bar chart, and rank in desc by the Y-axis please.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart of type versus the total number, and I want to rank in ascending by the x-axis.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart showing institution types, along with the number of institutions for each type, and could you rank x-axis in asc order?", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, and show bar in asc order please.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of type versus the total number, I want to sort x axis in desc order.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, rank bars in descending order.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart showing institution types, along with the number of institutions for each type, and display bars from high to low order.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, rank from low to high by the y axis.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart showing institution types, along with the number of institutions for each type, could you show from low to high by the y axis?", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of type versus the total number, and order from low to high by the the total number .", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, could you order in desc by the Y-axis?", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of type versus the total number, could you order in descending by the the total number ?", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart showing institution types, along with the number of institutions for each type, I want to rank in desc by the total number.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis total number of enrollment, and could you sort bars in asc order?", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart showing institution types, along with the total enrollment for each type, sort by the X from low to high.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Please compare the total enrollment for each type using a bar chart, display by the x axis in asc please.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis total number of enrollment, rank by the X in desc.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart showing institution types, along with the total enrollment for each type, could you order by the x axis in desc?", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Please compare the total enrollment for each type using a bar chart, list in desc by the X-axis.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Please compare the total enrollment for each type using a bar chart, and could you list in asc by the total number of enrollment please?", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart showing institution types, along with the total enrollment for each type, and show Y-axis from low to high order.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis total number of enrollment, and rank y axis in asc order please.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart showing institution types, along with the total enrollment for each type, order total number in desc order.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis total number of enrollment, and rank by the Y from high to low.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) DESC"}, "hardness": "Medium"}, {"nl_queries": "Please compare the total enrollment for each type using a bar chart, and could you sort total number of enrollment in descending order?", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, and sort by the names from low to high.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, and order by the bar from low to high.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, I want to show from high to low by the bar.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, and rank names in desc order.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, and could you order by the total number from low to high please?", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, and list by the Y in ascending.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, show in desc by the Y.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, and I want to show Y-axis in descending order.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet DESC"}, "hardness": "Hard"}, {"nl_queries": "Show institution names along with the number of proteins for each institution, and rank by the Institution in asc.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution ASC"}, "hardness": "Hard"}, {"nl_queries": "Show institution names along with the number of proteins for each institution in a bar chart, and I want to list from low to high by the X.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution ASC"}, "hardness": "Hard"}, {"nl_queries": "Show institution names along with the number of proteins for each institution in a bar chart, and rank by the X in descending.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution DESC"}, "hardness": "Hard"}, {"nl_queries": "Show institution names along with the number of proteins for each institution, and display names in descending order.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution DESC"}, "hardness": "Hard"}, {"nl_queries": "Show institution names along with the number of proteins for each institution in a bar chart, and I want to display by the total number in ascending.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show institution names along with the number of proteins for each institution, I want to show by the total number from low to high.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show institution names along with the number of proteins for each institution, sort Y-axis from high to low order.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show institution names along with the number of proteins for each institution in a bar chart, and order by the y-axis in desc.", "db_id": "protein_institute", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the name of track and the number of races in each track by a bar chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id"}, "hardness": "Medium"}, {"nl_queries": "Show the name of track and the number of races in each track. Visualize by bar chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the names of different tracks, and how many races has each had?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the names of different tracks, and how many races has each had?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id"}, "hardness": "Medium"}, {"nl_queries": "What are the names of different tracks, and how many races has each had. Plot them as bar chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id"}, "hardness": "Medium"}, {"nl_queries": "Show me the proportion of classes of all races using a pie chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class", "binning": ""}, "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM race GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "What is the proportion of classes of all races? Give me a pie chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class", "binning": ""}, "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM race GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing how many class across class.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class", "binning": ""}, "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM race GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Show me how many in each class of all races using a bar chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing how many class across class", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Show names and seatings for all tracks opened after 2000 by a pie chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Seating FROM track WHERE year_opened > 2000"}, "hardness": "Easy"}, {"nl_queries": "Show names and seatings for all tracks opened after 2000. ", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Seating FROM track WHERE year_opened > 2000"}, "hardness": "Easy"}, {"nl_queries": "Show me the proportion on what are the names and seatings for all tracks opened after 2000?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Seating FROM track WHERE year_opened > 2000"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart with what are the names and seatings for all tracks opened after 2000?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Seating FROM track WHERE year_opened > 2000"}, "hardness": "Easy"}, {"nl_queries": "What are the names and seatings for all tracks opened after 2000, ordered by seating. Show the proportion.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Seating FROM track WHERE year_opened > 2000"}, "hardness": "Easy"}, {"nl_queries": "Show names and seatings, ordered by seating for all tracks opened after 2000 in a bar chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating"}, "hardness": "Medium"}, {"nl_queries": "Show names and seatings, ordered by seating for all tracks opened after 2000. Plot them as bar chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the names and seatings for all tracks opened after 2000, ordered by seating?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the names and seatings for all tracks opened after 2000, ordered by seating?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating"}, "hardness": "Medium"}, {"nl_queries": "What are the names and seatings for all tracks opened after 2000, ordered by seating. Visualize by bar chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating"}, "hardness": "Medium"}, {"nl_queries": "Show the race class and number of races in each class in a pie chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize PIE SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Show the race class and number of races in each class. ", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize PIE SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Display a pie chart for what are the different classes of races, and how many races correspond to each?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize PIE SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart with what are the different classes of races, and how many races correspond to each?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize PIE SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "What are the different classes of races, and how many races correspond to each. Show the proportion.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize PIE SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Compute the total the total number across class as a pie chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize PIE SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Show the race class and number of races in each class with a bar chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Show the race class and number of races in each class. ", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what are the different classes of races, and how many races correspond to each?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "What are the different classes of races, and how many races correspond to each. Show bar chart.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for the total number of each class", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the names of different tracks, and how many races has each had?, sort Name in asc order please.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the name of track and the number of races in each track Visualize by bar chart, and rank from low to high by the bar.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the name of track and the number of races in each track by a bar chart, rank from low to high by the bar.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of different tracks, and how many races has each had Plot them as bar chart, and could you sort in asc by the x axis?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on what are the names of different tracks, and how many races has each had?, and sort from low to high by the bar.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the name of track and the number of races in each track by a bar chart, and I want to rank by the bars in descending.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the name of track and the number of races in each track Visualize by bar chart, order in desc by the Name.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for what are the names of different tracks, and how many races has each had?, and could you rank by the x-axis in descending?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on what are the names of different tracks, and how many races has each had?, and sort by the Name from high to low.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of different tracks, and how many races has each had Plot them as bar chart, display by the bar from high to low please.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for what are the names of different tracks, and how many races has each had?, and could you list in asc by the Y-axis?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of different tracks, and how many races has each had Plot them as bar chart, could you list in asc by the Y-axis?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the name of track and the number of races in each track by a bar chart, and show Y in ascending order please.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on what are the names of different tracks, and how many races has each had?, and show Y in ascending order please.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the name of track and the number of races in each track Visualize by bar chart, and could you order y-axis from low to high order?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of different tracks, and how many races has each had Plot them as bar chart, and I want to order by the the total number in desc.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the name of track and the number of races in each track by a bar chart, and list Y in descending order.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the name of track and the number of races in each track Visualize by bar chart, and list in desc by the Y-axis please.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for what are the names of different tracks, and how many races has each had?, and display y axis from high to low order.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on what are the names of different tracks, and how many races has each had?, and could you display by the y-axis in descending?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Create a bar chart showing how many class across class, show by the X-axis in ascending.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me how many in each class of all races using a bar chart, and show by the X-axis in ascending.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me how many in each class of all races using a bar chart, and I want to order in descending by the Class.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many class across class, and list from high to low by the x-axis please.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many class across class, sort y axis from low to high order.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me how many in each class of all races using a bar chart, and sort by the the number of class in ascending.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me how many in each class of all races using a bar chart, show in descending by the Y-axis.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many class across class, could you order Y-axis in desc order?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY COUNT(Class) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different classes of races, and how many races correspond to each Show bar chart, and could you sort by the X-axis from low to high?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the race class and number of races in each class, and could you display bar from low to high order please?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each class, and order x axis in asc order.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different classes of races, and how many races correspond to each?, and list x axis in asc order please.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?, order x axis in asc order.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the race class and number of races in each class with a bar chart, and list x axis in asc order please.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the race class and number of races in each class with a bar chart, and sort in desc by the bars.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?, and sort in desc by the bars.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different classes of races, and how many races correspond to each Show bar chart, could you rank by the X in desc?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the race class and number of races in each class, and could you display x axis in desc order please?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different classes of races, and how many races correspond to each?, sort from high to low by the names please.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each class, sort in desc by the bars.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each class, display in asc by the Y-axis.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the race class and number of races in each class, and could you sort total number in ascending order?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different classes of races, and how many races correspond to each?, and show in asc by the total number.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?, and could you order in ascending by the Y?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the different classes of races, and how many races correspond to each Show bar chart, order from low to high by the total number.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the race class and number of races in each class with a bar chart, could you show in ascending by the total number?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?, list by the y-axis from high to low.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the race class and number of races in each class with a bar chart, and list by the y-axis from high to low.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different classes of races, and how many races correspond to each Show bar chart, could you list y-axis in desc order?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each class, and could you sort from high to low by the y-axis please?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the race class and number of races in each class, and could you rank Y-axis in desc order?", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different classes of races, and how many races correspond to each?, and rank y-axis in descending order.", "db_id": "race_track", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the working years of managers in descending order of their level, and count them by a bar chart", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC", "binning": "BIN Working_year_starts BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC BIN Working_year_starts BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for showing the number of the working years of managers in descending order of their level.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC", "binning": "BIN Working_year_starts BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC BIN Working_year_starts BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show the number of the working years of managers in descending order of their level.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC", "binning": "BIN Working_year_starts BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC BIN Working_year_starts BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "A line chart for showing the number of the working years of managers in descending order of their level.", "db_id": "railway", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC", "binning": "BIN Working_year_starts BY YEAR"}, "VQL": "Visualize LINE SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC BIN Working_year_starts BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show the number of the working years of managers in descending order of their level.", "db_id": "railway", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC", "binning": "BIN Working_year_starts BY YEAR"}, "VQL": "Visualize LINE SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC BIN Working_year_starts BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show the working years of managers in descending order of their level, and count them by a line chart", "db_id": "railway", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC", "binning": "BIN Working_year_starts BY YEAR"}, "VQL": "Visualize LINE SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC BIN Working_year_starts BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for listing the number of the builders of railways in ascending alphabetical order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(Builder) FROM railway GROUP BY Builder ORDER BY Builder ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(Builder) FROM railway GROUP BY Builder ORDER BY Builder ASC"}, "hardness": "Medium"}, {"nl_queries": "List the number of the builders of railways in ascending alphabetical order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(Builder) FROM railway GROUP BY Builder ORDER BY Builder ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(Builder) FROM railway GROUP BY Builder ORDER BY Builder ASC"}, "hardness": "Medium"}, {"nl_queries": "List the builders of railways in ascending alphabetical order, and count them by a bar chart", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(Builder) FROM railway GROUP BY Builder ORDER BY Builder ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(Builder) FROM railway GROUP BY Builder ORDER BY Builder ASC"}, "hardness": "Medium"}, {"nl_queries": "Show id and location of railways that are associated with more than one train with a pie chart.", "db_id": "railway", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID", "binning": ""}, "VQL": "Visualize PIE SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID"}, "hardness": "Easy"}, {"nl_queries": "Show id and location of railways that are associated with more than one train. Show the proportion.", "db_id": "railway", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID", "binning": ""}, "VQL": "Visualize PIE SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID"}, "hardness": "Easy"}, {"nl_queries": "Show id and location of railways that are associated with more than one train by a bar chart.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID"}, "hardness": "Easy"}, {"nl_queries": "Show id and location of railways that are associated with more than one train. Visualize by bar chart.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID"}, "hardness": "Easy"}, {"nl_queries": "Show different builders of railways, along with the corresponding number of railways using each builder by a bar chart.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder"}, "hardness": "Easy"}, {"nl_queries": "Show different builders of railways, along with the corresponding number of railways using each builder. Show bar chart.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing the total number across builder", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder"}, "hardness": "Easy"}, {"nl_queries": "Show the number of the countries that have managers of age above 50 or below 46.", "db_id": "railway", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country"}, "hardness": "Hard"}, {"nl_queries": "Show the countries that have managers of age above 50 or below 46, and count them by a pie chart", "db_id": "railway", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country"}, "hardness": "Hard"}, {"nl_queries": "A pie chart for showing the number of the countries that have managers of age above 50 or below 46.", "db_id": "railway", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country"}, "hardness": "Hard"}, {"nl_queries": "Show the number of the countries that have managers of age above 50 or below 46.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country"}, "hardness": "Hard"}, {"nl_queries": "Show the countries that have managers of age above 50 or below 46, and count them by a bar chart", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for showing the number of the countries that have managers of age above 50 or below 46.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country"}, "hardness": "Hard"}, {"nl_queries": "How many trains in each name category, give me the result with a bar chart.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name"}, "hardness": "Easy"}, {"nl_queries": "Compare the total number of trains in each name by a bar graph.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for how many name of each name", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name"}, "hardness": "Easy"}, {"nl_queries": "Tell me the distribution of the number of trains at each arrival time with a bar chart.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart, the x-axis is the arrival time, and the y-axis is the total number of trains in each arrival time.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing how many arrival across arrival", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival"}, "hardness": "Easy"}, {"nl_queries": "Show id and location of railways that are associated with more than one train Visualize by bar chart, and could you display by the x-axis in ascending?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Show id and location of railways that are associated with more than one train by a bar chart, and could you sort bars from low to high order?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Show id and location of railways that are associated with more than one train Visualize by bar chart, could you sort x axis in desc order?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Show id and location of railways that are associated with more than one train by a bar chart, sort by the X-axis in desc.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Show id and location of railways that are associated with more than one train Visualize by bar chart, and could you rank Y-axis in asc order?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Railway_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Railway_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Show id and location of railways that are associated with more than one train by a bar chart, order in asc by the Y.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Railway_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Railway_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Show id and location of railways that are associated with more than one train Visualize by bar chart, and show in descending by the total number.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Railway_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Railway_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show id and location of railways that are associated with more than one train by a bar chart, and could you display Y-axis from high to low order?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Railway_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Railway_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different builders of railways, along with the corresponding number of railways using each builder by a bar chart, and order x-axis in ascending order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the total number across builder, and list by the x axis from low to high.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different builders of railways, along with the corresponding number of railways using each builder Show bar chart, and display x-axis in asc order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the total number across builder, I want to list x-axis in desc order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different builders of railways, along with the corresponding number of railways using each builder by a bar chart, show in desc by the Builder.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different builders of railways, along with the corresponding number of railways using each builder Show bar chart, and show in desc by the Builder.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different builders of railways, along with the corresponding number of railways using each builder by a bar chart, show Y in ascending order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the total number across builder, and I want to show Y from low to high order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different builders of railways, along with the corresponding number of railways using each builder Show bar chart, and order in asc by the y axis.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different builders of railways, along with the corresponding number of railways using each builder Show bar chart, could you order from high to low by the y axis?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different builders of railways, along with the corresponding number of railways using each builder by a bar chart, could you order from high to low by the y axis?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the total number across builder, and could you rank Y in desc order?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the countries that have managers of age above 50 or below 46, and count them by a bar chart, and sort in ascending by the bar.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the countries that have managers of age above 50 or below 46, and could you show by the bars from low to high?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the countries that have managers of age above 50 or below 46, could you order x-axis from low to high order?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the countries that have managers of age above 50 or below 46, and count them by a bar chart, and show names in desc order please.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the countries that have managers of age above 50 or below 46, list in descending by the bars.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the countries that have managers of age above 50 or below 46, list in descending by the bars.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the countries that have managers of age above 50 or below 46, and I want to rank by the total number in ascending.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the countries that have managers of age above 50 or below 46, and count them by a bar chart, order by the y axis from low to high.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the countries that have managers of age above 50 or below 46, I want to rank by the total number in ascending.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the countries that have managers of age above 50 or below 46, and list in descending by the Y.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the countries that have managers of age above 50 or below 46, and could you show from high to low by the total number?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the countries that have managers of age above 50 or below 46, and count them by a bar chart, could you rank the number of country from high to low order please?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a bar chart for how many name of each name, could you show x-axis from low to high order please?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "How many trains in each name category, give me the result with a bar chart, and list bars in ascending order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of trains in each name by a bar graph, and sort by the Name in ascending.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of trains in each name by a bar graph, and order by the Name from high to low.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "How many trains in each name category, give me the result with a bar chart, and order by the Name from high to low.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for how many name of each name, and could you show x-axis from high to low order?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "How many trains in each name category, give me the result with a bar chart, and could you show from low to high by the the number of name?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of trains in each name by a bar graph, sort by the total number in ascending.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for how many name of each name, and could you sort by the y-axis in ascending?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for how many name of each name, and sort y-axis in desc order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of trains in each name by a bar graph, sort y-axis in desc order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many trains in each name category, give me the result with a bar chart, and could you order y axis in desc order?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Tell me the distribution of the number of trains at each arrival time with a bar chart, rank bar in ascending order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, the x-axis is the arrival time, and the y-axis is the total number of trains in each arrival time, and sort x-axis in asc order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many arrival across arrival, sort x-axis in asc order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival ASC"}, "hardness": "Medium"}, {"nl_queries": "Tell me the distribution of the number of trains at each arrival time with a bar chart, could you display in descending by the x axis?", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many arrival across arrival, I want to display by the names from high to low.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, the x-axis is the arrival time, and the y-axis is the total number of trains in each arrival time, and order names in descending order please.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, the x-axis is the arrival time, and the y-axis is the total number of trains in each arrival time, and show Y in ascending order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many arrival across arrival, list by the the number of arrival in ascending.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) ASC"}, "hardness": "Medium"}, {"nl_queries": "Tell me the distribution of the number of trains at each arrival time with a bar chart, and show Y in ascending order.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many arrival across arrival, rank in desc by the y axis.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, the x-axis is the arrival time, and the y-axis is the total number of trains in each arrival time, display by the Y-axis from high to low.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) DESC"}, "hardness": "Medium"}, {"nl_queries": "Tell me the distribution of the number of trains at each arrival time with a bar chart, and display by the Y-axis from high to low.", "db_id": "railway", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) DESC"}, "hardness": "Medium"}, {"nl_queries": "", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Major , count(*) FROM Student GROUP BY Major", "binning": ""}, "VQL": "Visualize SCATTER SELECT Major , count(*) FROM Student GROUP BY Major"}, "hardness": "Easy"}, {"nl_queries": "Show me a scatter plot of major and the total number for .", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Major , count(*) FROM Student GROUP BY Major", "binning": ""}, "VQL": "Visualize SCATTER SELECT Major , count(*) FROM Student GROUP BY Major"}, "hardness": "Easy"}, {"nl_queries": "For those female students with age is older than 18 who are not majoring in 600, visualize the proportion of students' first names with a pie chart.", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname", "binning": ""}, "VQL": "Visualize PIE SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname"}, "hardness": "Medium"}, {"nl_queries": "For those female students with age is older than 18 who are not majoring in 600, tell me how many students of different first names using a bar chart.", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname"}, "hardness": "Medium"}, {"nl_queries": "List how many students in each last name who majored in 600 using a bar chart.", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName", "binning": ""}, "VQL": "Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName"}, "hardness": "Medium"}, {"nl_queries": "For those female students with age is older than 18 who are not majoring in 600, tell me how many students of different first names using a bar chart, sort bar from low to high order.", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY Fname ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY Fname ASC"}, "hardness": "Hard"}, {"nl_queries": "For those female students with age is older than 18 who are not majoring in 600, tell me how many students of different first names using a bar chart, display in descending by the x axis please.", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY Fname DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY Fname DESC"}, "hardness": "Hard"}, {"nl_queries": "For those female students with age is older than 18 who are not majoring in 600, tell me how many students of different first names using a bar chart, display in asc by the how many fname.", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) ASC"}, "hardness": "Hard"}, {"nl_queries": "For those female students with age is older than 18 who are not majoring in 600, tell me how many students of different first names using a bar chart, rank by the how many fname in desc please.", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) DESC"}, "hardness": "Hard"}, {"nl_queries": "List how many students in each last name who majored in 600 using a bar chart, and sort by the bars from low to high.", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY LName ASC", "binning": ""}, "VQL": "Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY LName ASC"}, "hardness": "Hard"}, {"nl_queries": "List how many students in each last name who majored in 600 using a bar chart, and show names from high to low order.", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY LName DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY LName DESC"}, "hardness": "Hard"}, {"nl_queries": "List how many students in each last name who majored in 600 using a bar chart, I want to show from low to high by the y-axis.", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY COUNT(LName) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY COUNT(LName) ASC"}, "hardness": "Hard"}, {"nl_queries": "List how many students in each last name who majored in 600 using a bar chart, and I want to rank by the Y in desc.", "db_id": "restaurant_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY COUNT(LName) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY COUNT(LName) DESC"}, "hardness": "Hard"}, {"nl_queries": "For players whose occupation is not \"Researcher\", tell me the proportion of their residences with a pie chart.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence", "binning": ""}, "VQL": "Visualize PIE SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence"}, "hardness": "Medium"}, {"nl_queries": "For players whose occupation is not \"Researcher\", tell me the distribution of their residences with a bar chart.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence", "binning": ""}, "VQL": "Visualize BAR SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence"}, "hardness": "Medium"}, {"nl_queries": "What is the proportion of the gender of players?", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender", "binning": ""}, "VQL": "Visualize PIE SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender"}, "hardness": "Easy"}, {"nl_queries": "Please give me a pie chart to show the proportion of all players' genders.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender", "binning": ""}, "VQL": "Visualize PIE SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each gender.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender", "binning": ""}, "VQL": "Visualize PIE SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender"}, "hardness": "Easy"}, {"nl_queries": "Compare the distribution of the players' gender using a bar chart.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of gender versus the number of gender", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender"}, "hardness": "Easy"}, {"nl_queries": "Compare the number of players of different occupations using a bar chart.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart to show how many players in each occupation.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis occupation y axis how many occupation", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation"}, "hardness": "Easy"}, {"nl_queries": "Show different occupations along with the number of players in each occupation with a bar chart.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation"}, "hardness": "Easy"}, {"nl_queries": "Show different occupations along with the number of players in each occupation. Show bar chart.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis occupation y axis the total number ", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation"}, "hardness": "Easy"}, {"nl_queries": "For players whose occupation is not \"Researcher\", tell me the distribution of their residences with a bar chart, and list names in ascending order.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence ORDER BY Residence ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence ORDER BY Residence ASC"}, "hardness": "Hard"}, {"nl_queries": "For players whose occupation is not \"Researcher\", tell me the distribution of their residences with a bar chart, and order bars in desc order.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence ORDER BY Residence DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence ORDER BY Residence DESC"}, "hardness": "Hard"}, {"nl_queries": "For players whose occupation is not \"Researcher\", tell me the distribution of their residences with a bar chart, and I want to show y axis from low to high order.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence ORDER BY COUNT(Residence) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence ORDER BY COUNT(Residence) ASC"}, "hardness": "Hard"}, {"nl_queries": "For players whose occupation is not \"Researcher\", tell me the distribution of their residences with a bar chart, and could you display by the total number in desc?", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence ORDER BY COUNT(Residence) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != \"Researcher\" GROUP BY Residence ORDER BY COUNT(Residence) DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis, show from low to high by the X.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of gender versus the number of gender, I want to list X from low to high order.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the distribution of the players' gender using a bar chart, and could you display in ascending by the x axis?", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the distribution of the players' gender using a bar chart, and rank in descending by the bar please.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis, and rank from high to low by the bars please.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of gender versus the number of gender, order in descending by the names.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the distribution of the players' gender using a bar chart, rank by the total number in ascending.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of gender versus the number of gender, and rank by the Y in asc.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis, and could you list y axis in ascending order?", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis, show total number in descending order.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of gender versus the number of gender, and rank by the y axis from high to low.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the distribution of the players' gender using a bar chart, show by the total number from high to low please.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of players of different occupations using a bar chart, I want to show in asc by the Occupation.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart to show how many players in each occupation, and I want to list names in ascending order.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis occupation y axis how many occupation, I want to show in asc by the Occupation.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart to show how many players in each occupation, order X in desc order.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of players of different occupations using a bar chart, order by the Occupation in descending.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis occupation y axis how many occupation, display in descending by the bars.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis occupation y axis how many occupation, and rank by the y-axis from low to high.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart to show how many players in each occupation, and show from low to high by the y-axis please.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of players of different occupations using a bar chart, order in ascending by the Y-axis.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of players of different occupations using a bar chart, list y-axis in desc order.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart to show how many players in each occupation, and I want to show by the Y-axis from high to low please.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis occupation y axis how many occupation, display in descending by the Y-axis.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different occupations along with the number of players in each occupation Show bar chart, show in ascending by the bar.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis occupation y axis the total number, and show in ascending by the bar.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different occupations along with the number of players in each occupation with a bar chart, and list by the x axis in asc.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different occupations along with the number of players in each occupation Show bar chart, and show x-axis from high to low order.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different occupations along with the number of players in each occupation with a bar chart, could you order by the names from high to low?", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis occupation y axis the total number, and I want to rank in desc by the x axis.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different occupations along with the number of players in each occupation with a bar chart, and could you list Y-axis in ascending order please?", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different occupations along with the number of players in each occupation Show bar chart, could you list Y-axis in ascending order please?", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis occupation y axis the total number, and I want to sort total number in asc order please.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different occupations along with the number of players in each occupation Show bar chart, and show y-axis from high to low order.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis occupation y axis the total number, and rank Y from high to low order please.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different occupations along with the number of players in each occupation with a bar chart, and sort by the Y in descending.", "db_id": "riding_club", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country by a pie chart.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize PIE SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name"}, "hardness": "Medium"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country. Show a pie chart.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize PIE SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name"}, "hardness": "Medium"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country with a bar chart.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name"}, "hardness": "Medium"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country. Plot them as bar chart.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name"}, "hardness": "Medium"}, {"nl_queries": "Return a scatter on what are the lengths and heights of roller coasters?", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Length , Height FROM roller_coaster", "binning": ""}, "VQL": "Visualize SCATTER SELECT Length , Height FROM roller_coaster"}, "hardness": "Easy"}, {"nl_queries": " what are the lengths and heights of roller coasters?", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Length , Height FROM roller_coaster", "binning": ""}, "VQL": "Visualize SCATTER SELECT Length , Height FROM roller_coaster"}, "hardness": "Easy"}, {"nl_queries": "What are the lengths and heights of roller coasters. Show scatter chart.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Length , Height FROM roller_coaster", "binning": ""}, "VQL": "Visualize SCATTER SELECT Length , Height FROM roller_coaster"}, "hardness": "Easy"}, {"nl_queries": "Scatter plot to show length on x axis and height on y axis.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Length , Height FROM roller_coaster", "binning": ""}, "VQL": "Visualize SCATTER SELECT Length , Height FROM roller_coaster"}, "hardness": "Easy"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country Plot them as bar chart, and sort in asc by the bars.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country with a bar chart, sort in asc by the bars.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country Plot them as bar chart, sort from high to low by the Name please.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country with a bar chart, and show by the bars in desc please.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country Plot them as bar chart, and could you show in asc by the Y?", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country with a bar chart, display by the y-axis in asc.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country Plot them as bar chart, and could you show y-axis from high to low order?", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of countries and the average speed of roller coasters from each country with a bar chart, and I want to display by the y axis from high to low.", "db_id": "roller_coaster", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a bar chart", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa'", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa'", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa'", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa'", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a bar chart", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa'", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa'", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa'", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa'", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a line chart", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date"}, "hardness": "Extra Hard"}, {"nl_queries": "A line chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a line chart", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date"}, "hardness": "Extra Hard"}, {"nl_queries": "List the genre name and genre id using a bar chart.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id"}, "hardness": "Easy"}, {"nl_queries": "What are the names and ids of the different categories? Show me the bar chart.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id"}, "hardness": "Easy"}, {"nl_queries": "How many films are there in each category? List the genre name and the count with a bar chart.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id"}, "hardness": "Medium"}, {"nl_queries": "What are the names of the different categories, and how many films are in each? Show me the bar graph.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id"}, "hardness": "Medium"}, {"nl_queries": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a bar chart, and show by the total number in asc please.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart, and list total number from low to high order.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and show by the total number in asc please.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and list total number from low to high order.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and I want to display by the Y in descending.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart, could you list from high to low by the Y-axis please?", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a bar chart, I want to display by the Y in descending.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, I want to display by the Y in descending.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC", "binning": "BIN payment_date BY MONTH"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC BIN payment_date BY MONTH"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a bar chart, I want to sort by the y axis in ascending.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart, and order by the total number from low to high please.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and rank by the y-axis in ascending.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, I want to sort by the y axis in ascending.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart, order Y in desc order.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, rank in desc by the y-axis please.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a bar chart, and order Y in desc order.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, order Y in desc order.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC", "binning": "BIN payment_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC BIN payment_date BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a line chart, and order in ascending by the X.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A line chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and show payment_date in asc order.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and show payment_date in asc order.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a line chart, and show payment_date from low to high order.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a line chart, rank from high to low by the payment_date please.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and could you display by the X from high to low?", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A line chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and show by the payment_date in descending.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a line chart, rank from high to low by the payment_date please.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the names and ids of the different categories? Show me the bar chart, sort from low to high by the X-axis.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T2.name ASC"}, "hardness": "Medium"}, {"nl_queries": "List the genre name and genre id using a bar chart, and show from low to high by the bar please.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T2.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T2.name ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and ids of the different categories? Show me the bar chart, and I want to show in descending by the names.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T2.name DESC"}, "hardness": "Medium"}, {"nl_queries": "List the genre name and genre id using a bar chart, and sort by the x axis in descending.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T2.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T2.name DESC"}, "hardness": "Medium"}, {"nl_queries": "List the genre name and genre id using a bar chart, and list by the y-axis in asc.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T1.category_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T1.category_id ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and ids of the different categories? Show me the bar chart, and display Y-axis in ascending order.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T1.category_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T1.category_id ASC"}, "hardness": "Medium"}, {"nl_queries": "List the genre name and genre id using a bar chart, list by the category_id in desc.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T1.category_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T1.category_id DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and ids of the different categories? Show me the bar chart, list by the category_id in desc.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T1.category_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T1.category_id DESC"}, "hardness": "Medium"}, {"nl_queries": "How many films are there in each category? List the genre name and the count with a bar chart, and rank by the X-axis from low to high.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY name ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the different categories, and how many films are in each? Show me the bar graph, could you rank X-axis in asc order please?", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY name ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the different categories, and how many films are in each? Show me the bar graph, and sort names from high to low order.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY name DESC"}, "hardness": "Hard"}, {"nl_queries": "How many films are there in each category? List the genre name and the count with a bar chart, and rank in descending by the X-axis.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY name DESC"}, "hardness": "Hard"}, {"nl_queries": "How many films are there in each category? List the genre name and the count with a bar chart, and list the total number in asc order please.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the different categories, and how many films are in each? Show me the bar graph, rank y-axis in asc order.", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many films are there in each category? List the genre name and the count with a bar chart, could you order by the the total number from high to low?", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the different categories, and how many films are in each? Show me the bar graph, show in descending by the the total number .", "db_id": "sakila_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the type of school and the number of buses for each type by a pie chart.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type", "binning": ""}, "VQL": "Visualize PIE SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type"}, "hardness": "Medium"}, {"nl_queries": "Show the type of school and the number of buses for each type. Visualize by pie chart.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type", "binning": ""}, "VQL": "Visualize PIE SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type"}, "hardness": "Medium"}, {"nl_queries": "Show the type of school and the number of buses for each type in a bar chart.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type"}, "hardness": "Medium"}, {"nl_queries": "Show the type of school and the number of buses for each type. ", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type"}, "hardness": "Medium"}, {"nl_queries": "Show the proportion of the home city of all drivers with a pie chart.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city", "binning": ""}, "VQL": "Visualize PIE SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city"}, "hardness": "Easy"}, {"nl_queries": "Please give me a pie chart to show the proportion of the home city of all drivers ", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city", "binning": ""}, "VQL": "Visualize PIE SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show how many home city from different home city.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city", "binning": ""}, "VQL": "Visualize PIE SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city"}, "hardness": "Easy"}, {"nl_queries": "Show the comparison of the total number of the home city of all drivers with a bar chart.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city"}, "hardness": "Easy"}, {"nl_queries": "Please give me a pie chart to show the number of home cities of all drivers", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city"}, "hardness": "Easy"}, {"nl_queries": "Plot the number of home city by grouped by home city as a bar graph", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city"}, "hardness": "Easy"}, {"nl_queries": "Show the average age of drivers from the same home city using a bar graph.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city"}, "hardness": "Easy"}, {"nl_queries": "Compare the average age of drivers from the same home city with a bar chart.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city"}, "hardness": "Easy"}, {"nl_queries": "Plot the average of age by grouped by home city as a bar graph", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city"}, "hardness": "Easy"}, {"nl_queries": "Show the name and age for all drivers with a bar chart.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart to show the name and age for all drivers.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show age from different name", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver"}, "hardness": "Easy"}, {"nl_queries": "Show the party and the number of drivers in each party by a pie chart.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party", "binning": ""}, "VQL": "Visualize PIE SELECT Party , count(*) FROM driver GROUP BY party"}, "hardness": "Easy"}, {"nl_queries": "Show the party and the number of drivers in each party. Visualize by pie chart.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party", "binning": ""}, "VQL": "Visualize PIE SELECT Party , count(*) FROM driver GROUP BY party"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the total number from different party.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party", "binning": ""}, "VQL": "Visualize PIE SELECT Party , count(*) FROM driver GROUP BY party"}, "hardness": "Easy"}, {"nl_queries": "Show the party and the number of drivers in each party with a bar chart.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party"}, "hardness": "Easy"}, {"nl_queries": "Show the party and the number of drivers in each party. Plot them as bar chart.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing the total number across party", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party"}, "hardness": "Easy"}, {"nl_queries": "Show the type of school and the number of buses for each type, and could you show by the x axis in ascending?", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY Type ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the type of school and the number of buses for each type in a bar chart, show by the Type in ascending.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY Type ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the type of school and the number of buses for each type, could you list by the bars in descending?", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY Type DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the type of school and the number of buses for each type in a bar chart, list x-axis in descending order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY Type DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the type of school and the number of buses for each type, rank in asc by the total number.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the type of school and the number of buses for each type in a bar chart, rank by the the total number from low to high.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the type of school and the number of buses for each type in a bar chart, display y axis in descending order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the type of school and the number of buses for each type, and I want to list by the y axis in descending.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the comparison of the total number of the home city of all drivers with a bar chart, and show by the x axis from low to high.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a pie chart to show the number of home cities of all drivers, show by the x axis from low to high.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of home city by grouped by home city as a bar graph, could you sort by the x axis in asc?", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of home city by grouped by home city as a bar graph, I want to rank in descending by the bars.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the comparison of the total number of the home city of all drivers with a bar chart, I want to rank in descending by the bars.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a pie chart to show the number of home cities of all drivers, show by the names in descending.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of home city by grouped by home city as a bar graph, could you order in asc by the total number?", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a pie chart to show the number of home cities of all drivers, order in asc by the the number of home city.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the comparison of the total number of the home city of all drivers with a bar chart, and rank Y in asc order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of home city by grouped by home city as a bar graph, and show from high to low by the Y-axis.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the comparison of the total number of the home city of all drivers with a bar chart, and could you order the number of home city from high to low order?", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a pie chart to show the number of home cities of all drivers, I want to show by the y axis from high to low.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the average age of drivers from the same home city with a bar chart, display bars in ascending order please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the average age of drivers from the same home city using a bar graph, and show X in asc order please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the average of age by grouped by home city as a bar graph, and show X in asc order please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the average age of drivers from the same home city using a bar graph, could you rank X from high to low order?", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the average of age by grouped by home city as a bar graph, could you sort by the bar from high to low?", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the average age of drivers from the same home city with a bar chart, sort in descending by the X.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the average age of drivers from the same home city using a bar graph, sort total number from low to high order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the average age of drivers from the same home city with a bar chart, and could you list by the y-axis in asc?", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the average of age by grouped by home city as a bar graph, and sort total number from low to high order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the average age of drivers from the same home city using a bar graph, and sort total number from high to low order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the average age of drivers from the same home city with a bar chart, could you rank in descending by the Y-axis please?", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the average of age by grouped by home city as a bar graph, show from high to low by the total number.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show age from different name, list x axis in asc order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Show the name and age for all drivers with a bar chart, and sort by the x-axis from low to high.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart to show the name and age for all drivers, and order bar in asc order please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show age from different name, display by the x-axis from high to low please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Show the name and age for all drivers with a bar chart, I want to show from high to low by the X-axis.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart to show the name and age for all drivers, sort by the names in desc.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart to show the name and age for all drivers, list by the Y in ascending.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Age ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show age from different name, and display from low to high by the y-axis please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Age ASC"}, "hardness": "Easy"}, {"nl_queries": "Show the name and age for all drivers with a bar chart, and display by the total number from low to high.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Age ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show age from different name, sort Y in descending order please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Age DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart to show the name and age for all drivers, could you rank in descending by the total number?", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Age DESC"}, "hardness": "Easy"}, {"nl_queries": "Show the name and age for all drivers with a bar chart, rank in descending by the y-axis please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM driver ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM driver ORDER BY Age DESC"}, "hardness": "Easy"}, {"nl_queries": "Show the party and the number of drivers in each party with a bar chart, and order from low to high by the bars.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the party and the number of drivers in each party Plot them as bar chart, and order in asc by the X-axis please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the total number across party, and show in asc by the X.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the total number across party, sort bars in descending order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the party and the number of drivers in each party with a bar chart, and sort bars in descending order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the party and the number of drivers in each party Plot them as bar chart, show bar in descending order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the total number across party, and order y-axis in asc order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the party and the number of drivers in each party Plot them as bar chart, and display total number from low to high order.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the party and the number of drivers in each party with a bar chart, display from low to high by the Y.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the total number across party, and sort in desc by the y-axis.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the party and the number of drivers in each party Plot them as bar chart, and I want to rank y-axis from high to low order please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the party and the number of drivers in each party with a bar chart, and I want to order in desc by the the total number please.", "db_id": "school_bus", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "List each donator name and the amount of endowment in descending order of the amount of endowment by a bar chart.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT donator_name , sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT donator_name , sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC"}, "hardness": "Medium"}, {"nl_queries": "List each donator name and the amount of endowment in descending order of the amount of endowment. Plot them as bar chart.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT donator_name , sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT donator_name , sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show each county along with the number of schools.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart showing the number of schools in each county.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of county versus the total number ", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "Show the proportion of the total enrollment in each county with a pie chart.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize PIE SELECT County , sum(enrollment) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "Please give me a pie chart for the proportion of the total enrollment in each county.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize PIE SELECT County , sum(enrollment) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "Compute the total sum enrollment across county as a pie chart.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize PIE SELECT County , sum(enrollment) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "Compare the total enrollment in each county with a bar chart.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "Please give me a bar chart for the total enrollment in each county.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "Show sum enrollment from each county", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "Show each county along with the number of schools with a pie chart.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize PIE SELECT County , count(*) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "What is the proportion of the number of schools in different counties?", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize PIE SELECT County , count(*) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing the total number across county.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize PIE SELECT County , count(*) FROM school GROUP BY county"}, "hardness": "Easy"}, {"nl_queries": "Show the relationship between the number of schools in each county and total enrollment in each county by a scatter plot.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , sum(enrollment) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM school GROUP BY county"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of schools and total enrollment in each county with a scatter chart.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , sum(enrollment) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM school GROUP BY county"}, "hardness": "Medium"}, {"nl_queries": "Plot a scatter chart, count(*) by sum enrollment.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , sum(enrollment) FROM school GROUP BY county", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM school GROUP BY county"}, "hardness": "Medium"}, {"nl_queries": "Show the relationship between the number of schools in each county and total enrollment in each county by a scatter plot.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , sum(enrollment) FROM school GROUP BY County", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM school GROUP BY County"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of schools and total enrollment in each county with a scatter chart.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , sum(enrollment) FROM school GROUP BY County", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM school GROUP BY County"}, "hardness": "Medium"}, {"nl_queries": "Show count(*) vs total number of enrollment as scatter plot use a different color for each County", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , sum(enrollment) FROM school GROUP BY County", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM school GROUP BY County"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of county versus the total number, and display by the X in asc.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY County ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the number of schools in each county, order X in ascending order.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY County ASC"}, "hardness": "Medium"}, {"nl_queries": "Show each county along with the number of schools, and could you rank by the x-axis in asc?", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY County ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of county versus the total number, order in descending by the bars.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY County DESC"}, "hardness": "Medium"}, {"nl_queries": "Show each county along with the number of schools, I want to display in desc by the x axis please.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY County DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the number of schools in each county, and display in desc by the x-axis please.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY County DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the number of schools in each county, and display y-axis in ascending order.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show each county along with the number of schools, and display in ascending by the the total number .", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of county versus the total number, order by the Y in ascending please.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of county versus the total number, show by the y axis in desc.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show each county along with the number of schools, and display Y in desc order.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the number of schools in each county, and rank y axis from high to low order please.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show sum enrollment from each county, and sort by the x axis in ascending.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart for the total enrollment in each county, display by the x-axis from low to high.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total enrollment in each county with a bar chart, and list by the names from low to high please.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart for the total enrollment in each county, could you rank County in descending order?", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total enrollment in each county with a bar chart, and could you order in desc by the x axis?", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County DESC"}, "hardness": "Medium"}, {"nl_queries": "Show sum enrollment from each county, and I want to list X in desc order please.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY County DESC"}, "hardness": "Medium"}, {"nl_queries": "Show sum enrollment from each county, sort y-axis from low to high order.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total enrollment in each county with a bar chart, sort y-axis from low to high order.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart for the total enrollment in each county, sort in asc by the total number.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show sum enrollment from each county, sort from high to low by the y axis.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total enrollment in each county with a bar chart, show y axis in descending order.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart for the total enrollment in each county, and order by the sum enrollment in desc.", "db_id": "school_finance", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) DESC"}, "hardness": "Medium"}, {"nl_queries": "", "db_id": "school_player", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize PIE SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "", "db_id": "school_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each denomination, return the denomination and the count of schools with that denomination. Visualize by pie chart.", "db_id": "school_player", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination", "binning": ""}, "VQL": "Visualize PIE SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the total number from different denomination.", "db_id": "school_player", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination", "binning": ""}, "VQL": "Visualize PIE SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination"}, "hardness": "Easy"}, {"nl_queries": "For each denomination, return the denomination and the count of schools with that denomination. Visualize by bar chart.", "db_id": "school_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination", "binning": ""}, "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing the total number across denomination", "db_id": "school_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination", "binning": ""}, "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing the total number across denomination, and rank by the Denomination in asc.", "db_id": "school_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY Denomination ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY Denomination ASC"}, "hardness": "Medium"}, {"nl_queries": "For each denomination, return the denomination and the count of schools with that denomination Visualize by bar chart, and could you list Denomination in asc order?", "db_id": "school_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY Denomination ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY Denomination ASC"}, "hardness": "Medium"}, {"nl_queries": "For each denomination, return the denomination and the count of schools with that denomination Visualize by bar chart, order X-axis in desc order.", "db_id": "school_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY Denomination DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY Denomination DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the total number across denomination, I want to sort by the Denomination from high to low.", "db_id": "school_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY Denomination DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY Denomination DESC"}, "hardness": "Medium"}, {"nl_queries": "For each denomination, return the denomination and the count of schools with that denomination Visualize by bar chart, list from low to high by the Y.", "db_id": "school_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the total number across denomination, and could you show y-axis in ascending order?", "db_id": "school_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each denomination, return the denomination and the count of schools with that denomination Visualize by bar chart, and rank total number from high to low order please.", "db_id": "school_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the total number across denomination, rank in desc by the Y-axis.", "db_id": "school_player", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of scientists involved for the projects that require more than 300 hours. Show a pie chart.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name"}, "hardness": "Hard"}, {"nl_queries": "Return a pie chart on what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name"}, "hardness": "Hard"}, {"nl_queries": "A pie chart about what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name"}, "hardness": "Hard"}, {"nl_queries": "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each. ", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name"}, "hardness": "Hard"}, {"nl_queries": "Find the number of scientists involved for the projects that require more than 300 hours. Show bar chart.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name"}, "hardness": "Hard"}, {"nl_queries": "what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name"}, "hardness": "Hard"}, {"nl_queries": "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each. ", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name"}, "hardness": "Hard"}, {"nl_queries": "Find the number of scientists involved for each project name. ", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the naems of all the projects, and how many scientists were assigned to each of them?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the naems of all the projects, and how many scientists were assigned to each of them?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name"}, "hardness": "Medium"}, {"nl_queries": "What are the naems of all the projects, and how many scientists were assigned to each of them. ", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name"}, "hardness": "Medium"}, {"nl_queries": "Find the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name"}, "hardness": "Extra Hard"}, {"nl_queries": "A pie chart for finding the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a pie chart", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith', and count them by a pie chart", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize PIE SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a bar chart", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith', and count them by a bar chart", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each, and show bar in ascending order.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a histogram for what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, and display in asc by the x axis.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of scientists involved for the projects that require more than 300 hours Show bar chart, and list X-axis in ascending order.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, could you show in ascending by the x-axis?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a histogram for what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, and list by the Name in desc.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each, list by the x-axis in descending please.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of scientists involved for the projects that require more than 300 hours Show bar chart, could you show in desc by the x axis?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, list by the Name in desc.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each, and display by the total number in asc.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, list by the Y-axis in asc please.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a histogram for what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, display by the total number in asc.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of scientists involved for the projects that require more than 300 hours Show bar chart, and display by the total number in asc.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each, and list from high to low by the the total number .", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of scientists involved for the projects that require more than 300 hours Show bar chart, order by the Y-axis in descending.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, and show total number in desc order.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a histogram for what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, list from high to low by the the total number .", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart for what are the naems of all the projects, and how many scientists were assigned to each of them?, and show by the bar in ascending please.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what are the naems of all the projects, and how many scientists were assigned to each of them?, list from low to high by the x axis.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the naems of all the projects, and how many scientists were assigned to each of them, and rank in ascending by the X.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of scientists involved for each project name, display from low to high by the names.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the naems of all the projects, and how many scientists were assigned to each of them, rank x axis in descending order.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for what are the naems of all the projects, and how many scientists were assigned to each of them?, and rank x axis from high to low order.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what are the naems of all the projects, and how many scientists were assigned to each of them?, I want to list names in desc order.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of scientists involved for each project name, and sort by the X-axis in desc.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of scientists involved for each project name, and display by the y-axis in ascending.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for what are the naems of all the projects, and how many scientists were assigned to each of them?, and display by the y-axis in ascending.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what are the naems of all the projects, and how many scientists were assigned to each of them?, and sort by the Y from low to high.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the naems of all the projects, and how many scientists were assigned to each of them, list total number from low to high order please.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of scientists involved for each project name, I want to sort the total number in descending order.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the naems of all the projects, and how many scientists were assigned to each of them, rank in descending by the Y.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for what are the naems of all the projects, and how many scientists were assigned to each of them?, and I want to rank y axis in desc order.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what are the naems of all the projects, and how many scientists were assigned to each of them?, and show y-axis in desc order.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, display X-axis from low to high order.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a bar chart, I want to rank in ascending by the x axis.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, I want to rank in ascending by the x axis.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith', and count them by a bar chart, could you order names from low to high order please?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and list in descending by the bar.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a bar chart, could you order by the x-axis in descending?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, rank from high to low by the bars.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith', and count them by a bar chart, and could you show bar in descending order?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and rank by the how many name in ascending please.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a bar chart, and I want to rank by the y-axis in asc.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, I want to order in asc by the total number.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith', and count them by a bar chart, I want to order in asc by the total number.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a bar chart, and show by the how many name in descending please.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and show by the how many name in descending please.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith', and count them by a bar chart, and show by the how many name in descending please.", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, could you rank by the Y-axis from high to low?", "db_id": "scientist_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me the proportion of the flag of ships that are not steered by any captain with Midshipman rank using a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag", "binning": ""}, "VQL": "Visualize PIE SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag"}, "hardness": "Medium"}, {"nl_queries": "What is the proportion of flags of ships that do not have a captain with the rank of Midshipman? Show the result using a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag", "binning": ""}, "VQL": "Visualize PIE SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number of the flag of ships that are not steered by any captain with Midshipman rank using a bar graph.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of flags of ships that do not have a captain with the rank of Midshipman? Show the result using a bar chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag"}, "hardness": "Medium"}, {"nl_queries": "Draw a pie chart for how many captains with younger than 50 are in each rank?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank"}, "hardness": "Medium"}, {"nl_queries": "Show me the proportion on how many captains with younger than 50 are in each rank?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank"}, "hardness": "Medium"}, {"nl_queries": "How many captains with younger than 50 are in each rank. Visualize by pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank"}, "hardness": "Medium"}, {"nl_queries": "Count the number of captains younger than 50 of each rank in a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank"}, "hardness": "Medium"}, {"nl_queries": "Count the number of captains younger than 50 of each rank. Plot them as pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many captains with younger than 50 are in each rank?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many captains with younger than 50 are in each rank?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank"}, "hardness": "Medium"}, {"nl_queries": "How many captains with younger than 50 are in each rank. ", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank"}, "hardness": "Medium"}, {"nl_queries": "Count the number of captains younger than 50 of each rank by a bar chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank"}, "hardness": "Medium"}, {"nl_queries": "Count the number of captains younger than 50 of each rank. ", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank"}, "hardness": "Medium"}, {"nl_queries": "Show me a pie chart for what are the different ship flags, and how many ships have each?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag", "binning": ""}, "VQL": "Visualize PIE SELECT Flag , count(*) FROM ship GROUP BY flag"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart for what are the different ship flags, and how many ships have each?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag", "binning": ""}, "VQL": "Visualize PIE SELECT Flag , count(*) FROM ship GROUP BY flag"}, "hardness": "Easy"}, {"nl_queries": "What are the different ship flags, and how many ships have each. Show a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag", "binning": ""}, "VQL": "Visualize PIE SELECT Flag , count(*) FROM ship GROUP BY flag"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the total number from different flag.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag", "binning": ""}, "VQL": "Visualize PIE SELECT Flag , count(*) FROM ship GROUP BY flag"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what are the different ship flags, and how many ships have each?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on what are the different ship flags, and how many ships have each?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag"}, "hardness": "Easy"}, {"nl_queries": "What are the different ship flags, and how many ships have each. Plot them as bar chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag"}, "hardness": "Easy"}, {"nl_queries": "Show the total number from each flag", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag"}, "hardness": "Easy"}, {"nl_queries": "What is the average age of captains in different classes?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Return the average age of captains in each class.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart showing the average age of captains in each class.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Plot the average of age by grouped by class as a bar graph", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between the average and minimum age of captains in different classes?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(age) , min(age) FROM captain GROUP BY CLASS", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(age) , min(age) FROM captain GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Tell me the relationship between average and minimum age of captains in each class.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(age) , min(age) FROM captain GROUP BY CLASS", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(age) , min(age) FROM captain GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Show me a scatter plot for the relationship between average and minimum age of captains in each class.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(age) , min(age) FROM captain GROUP BY CLASS", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(age) , min(age) FROM captain GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Show me a scatter plot of avg(age) and minimal age for .", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(age) , min(age) FROM captain GROUP BY CLASS", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(age) , min(age) FROM captain GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "What is the average age of captains in different classes?  Show the result with a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS", "binning": ""}, "VQL": "Visualize PIE SELECT Class , avg(age) FROM captain GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "Return the average age of captains in each class with a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS", "binning": ""}, "VQL": "Visualize PIE SELECT Class , avg(age) FROM captain GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the average age for each class.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS", "binning": ""}, "VQL": "Visualize PIE SELECT Class , avg(age) FROM captain GROUP BY CLASS"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between the average and minimum age of captains in different classes? ", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(age) , min(age) FROM captain GROUP BY Class", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(age) , min(age) FROM captain GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Tell me the relationship between average and minimum age of captains in each class. Give a scatter plot.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(age) , min(age) FROM captain GROUP BY Class", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(age) , min(age) FROM captain GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Show me a scatter plot for the relationship between average and minimum age of captains in each class, color different classes.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(age) , min(age) FROM captain GROUP BY Class", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(age) , min(age) FROM captain GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between avg(age) and minimal age for each Class using a scatter chart", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(age) , min(age) FROM captain GROUP BY Class", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(age) , min(age) FROM captain GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Return a pie on how many captains are in each rank?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "how many captains are in each rank?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "How many captains are in each rank. Visualize by pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "Count the number of captains that have each rank with a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "Count the number of captains that have each rank. Show the proportion.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the total number from different rank.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about how many captains are in each rank?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "How many captains are in each rank. ", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "Count the number of captains that have each rank by a bar chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "Count the number of captains that have each rank. Visualize by bar chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "Show the total number from each rank", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank"}, "hardness": "Easy"}, {"nl_queries": "For those ships that do not have a captain, tell me the proportion of their classes using a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class", "binning": ""}, "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class"}, "hardness": "Medium"}, {"nl_queries": "Give me a pie chart showing the proportion of ships' classes that do not have a captain.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class", "binning": ""}, "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class"}, "hardness": "Medium"}, {"nl_queries": "For those ships that do not have a captain, tell me the total number of their classes using a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart showing the total number of ships' classes that do not have a captain.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of captains in each rank and class? Let class as X-axis, and categorize by rank with a stacked bar chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar graph shows the total number of captains categorize by ranks of different classes.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar of class and the number of class colored by Rank", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class"}, "hardness": "Hard"}, {"nl_queries": "Compare the total number of different ranks using a bar graph.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart comparing the total number of captains in each rank.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show the number of rank from different rank", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank"}, "hardness": "Easy"}, {"nl_queries": "Tell me the proportion of the total number of different classes using a bar graph.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class", "binning": ""}, "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM captain GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Show me a pie chart comparing the total number of captains in each class.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class", "binning": ""}, "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM captain GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Visualize the proportion of the total number of captains in each class using a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class", "binning": ""}, "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM captain GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Compute the total how many class across class as a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class", "binning": ""}, "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM captain GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Compare the total number of captains with different classes using a bar graph.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart comparing the total number of captains of different classes.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "What is the total number of captains with different classes?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Plot how many class by grouped by class as a bar graph", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class"}, "hardness": "Easy"}, {"nl_queries": "Tell me the proportion of the total number of different ranks using a bar graph.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank"}, "hardness": "Easy"}, {"nl_queries": "Show me a pie chart comparing the total number of captains in each rank.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank"}, "hardness": "Easy"}, {"nl_queries": "Visualize the proportion of the total number of captains in each rank using a pie chart.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the number of rank from different rank.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank", "binning": ""}, "VQL": "Visualize PIE SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank"}, "hardness": "Easy"}, {"nl_queries": "What is the total number of flags of ships that do not have a captain with the rank of Midshipman? Show the result using a bar chart, and display by the X in ascending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY Flag ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY Flag ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me the total number of the flag of ships that are not steered by any captain with Midshipman rank using a bar graph, show in ascending by the x axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY Flag ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY Flag ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of flags of ships that do not have a captain with the rank of Midshipman? Show the result using a bar chart, and rank by the X-axis in descending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY Flag DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY Flag DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me the total number of the flag of ships that are not steered by any captain with Midshipman rank using a bar graph, and display x axis in descending order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY Flag DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY Flag DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of flags of ships that do not have a captain with the rank of Midshipman? Show the result using a bar chart, rank y-axis in asc order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY COUNT(Flag) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY COUNT(Flag) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me the total number of the flag of ships that are not steered by any captain with Midshipman rank using a bar graph, and I want to rank total number in asc order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY COUNT(Flag) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY COUNT(Flag) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me the total number of the flag of ships that are not steered by any captain with Midshipman rank using a bar graph, display from high to low by the Y-axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY COUNT(Flag) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY COUNT(Flag) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of flags of ships that do not have a captain with the rank of Midshipman? Show the result using a bar chart, I want to rank the number of flag from high to low order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY COUNT(Flag) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY COUNT(Flag) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many captains with younger than 50 are in each rank?, sort by the X from low to high.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC"}, "hardness": "Hard"}, {"nl_queries": "Count the number of captains younger than 50 of each rank, and rank in ascending by the Rank.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC"}, "hardness": "Hard"}, {"nl_queries": "How many captains with younger than 50 are in each rank, list by the bars from low to high.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC"}, "hardness": "Hard"}, {"nl_queries": "Count the number of captains younger than 50 of each rank by a bar chart, rank in ascending by the Rank.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many captains with younger than 50 are in each rank?, display in ascending by the bars.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC"}, "hardness": "Hard"}, {"nl_queries": "How many captains with younger than 50 are in each rank, and sort in desc by the bar.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many captains with younger than 50 are in each rank?, order from high to low by the X.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC"}, "hardness": "Hard"}, {"nl_queries": "Count the number of captains younger than 50 of each rank, and I want to order by the X from high to low.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC"}, "hardness": "Hard"}, {"nl_queries": "Count the number of captains younger than 50 of each rank by a bar chart, and order from high to low by the X.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many captains with younger than 50 are in each rank?, and list bars from high to low order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC"}, "hardness": "Hard"}, {"nl_queries": "Count the number of captains younger than 50 of each rank by a bar chart, and rank by the y axis in asc.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many captains with younger than 50 are in each rank?, show by the Y-axis in asc.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Count the number of captains younger than 50 of each rank, list by the y-axis in asc.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many captains with younger than 50 are in each rank?, list by the y-axis in asc.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many captains with younger than 50 are in each rank, display y axis in asc order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many captains with younger than 50 are in each rank?, and show Y-axis in descending order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many captains with younger than 50 are in each rank?, and rank Y-axis in descending order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Count the number of captains younger than 50 of each rank, show in descending by the y-axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many captains with younger than 50 are in each rank, display by the the total number from high to low.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Count the number of captains younger than 50 of each rank by a bar chart, show in descending by the y-axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what are the different ship flags, and how many ships have each?, show names in ascending order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the different ship flags, and how many ships have each?, order in asc by the bar.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number from each flag, could you display bar from low to high order?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the different ship flags, and how many ships have each Plot them as bar chart, and could you display bar from low to high order?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the different ship flags, and how many ships have each?, order from high to low by the X.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different ship flags, and how many ships have each?, rank by the X-axis in desc.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number from each flag, and order from high to low by the X.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different ship flags, and how many ships have each Plot them as bar chart, and order x-axis in desc order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number from each flag, and sort by the y axis in ascending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the different ship flags, and how many ships have each Plot them as bar chart, and list Y-axis in ascending order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the different ship flags, and how many ships have each?, and could you rank in asc by the Y?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different ship flags, and how many ships have each?, and list the total number in asc order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the different ship flags, and how many ships have each Plot them as bar chart, rank Y-axis in descending order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the different ship flags, and how many ships have each?, list by the Y-axis in descending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number from each flag, display the total number in desc order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the different ship flags, and how many ships have each?, and rank Y-axis in descending order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart showing the average age of captains in each class, I want to rank in asc by the x axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the average of age by grouped by class as a bar graph, I want to order by the bar from low to high.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the average age of captains in each class, and rank from low to high by the X.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average age of captains in different classes?, and order from low to high by the x-axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average age of captains in different classes?, order by the bars from high to low.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the average age of captains in each class, display by the names in descending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the average of age by grouped by class as a bar graph, and show by the bar in descending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart showing the average age of captains in each class, could you display by the bar in descending?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the average of age by grouped by class as a bar graph, could you show in ascending by the Y-axis?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart showing the average age of captains in each class, order in asc by the Y-axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average age of captains in different classes?, and order mean age in asc order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the average age of captains in each class, and rank Y-axis from low to high order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the average age of captains in each class, and I want to show from high to low by the total number.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart showing the average age of captains in each class, order by the y axis in descending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the average of age by grouped by class as a bar graph, and show in desc by the total number.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average age of captains in different classes?, and could you order in descending by the mean age please?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many captains are in each rank?, show from low to high by the Rank.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number from each rank, and show in asc by the bar please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of captains that have each rank by a bar chart, and list by the X-axis in ascending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of captains that have each rank Visualize by bar chart, and show from low to high by the x axis please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank ASC"}, "hardness": "Medium"}, {"nl_queries": "How many captains are in each rank, and show from low to high by the x axis please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank ASC"}, "hardness": "Medium"}, {"nl_queries": "How many captains are in each rank, and list X from high to low order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many captains are in each rank?, and could you order by the X-axis from high to low?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number from each rank, and order bars in descending order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of captains that have each rank by a bar chart, sort in desc by the bars.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of captains that have each rank Visualize by bar chart, and show in desc by the Rank please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many captains are in each rank?, and I want to list in ascending by the Y-axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of captains that have each rank by a bar chart, and sort in asc by the total number.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number from each rank, and I want to list in ascending by the Y-axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many captains are in each rank, and I want to show from low to high by the y axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of captains that have each rank Visualize by bar chart, and order by the y-axis in ascending please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number from each rank, and list the total number from high to low order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of captains that have each rank Visualize by bar chart, rank by the the total number in descending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many captains are in each rank?, and rank in desc by the the total number please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of captains that have each rank by a bar chart, list the total number from high to low order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many captains are in each rank, show in desc by the Y-axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart showing the total number of ships' classes that do not have a captain, display from low to high by the bars please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY Class ASC"}, "hardness": "Hard"}, {"nl_queries": "For those ships that do not have a captain, tell me the total number of their classes using a pie chart, display from low to high by the bars please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY Class ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart showing the total number of ships' classes that do not have a captain, rank bar in desc order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY Class DESC"}, "hardness": "Hard"}, {"nl_queries": "For those ships that do not have a captain, tell me the total number of their classes using a pie chart, show in desc by the bar.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY Class DESC"}, "hardness": "Hard"}, {"nl_queries": "For those ships that do not have a captain, tell me the total number of their classes using a pie chart, show how many class from low to high order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY COUNT(Class) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart showing the total number of ships' classes that do not have a captain, show from low to high by the y-axis please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY COUNT(Class) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart showing the total number of ships' classes that do not have a captain, show Y in descending order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY COUNT(Class) DESC"}, "hardness": "Hard"}, {"nl_queries": "For those ships that do not have a captain, tell me the total number of their classes using a pie chart, and rank in desc by the y-axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY COUNT(Class) DESC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar of class and the number of class colored by Rank, and display in asc by the x axis please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of captains in each rank and class? Let class as X-axis, and categorize by rank with a stacked bar chart, rank by the X-axis in ascending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class ASC"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar graph shows the total number of captains categorize by ranks of different classes, could you list in ascending by the x-axis?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class ASC"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar graph shows the total number of captains categorize by ranks of different classes, and display in desc by the x-axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of captains in each rank and class? Let class as X-axis, and categorize by rank with a stacked bar chart, show names from high to low order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class DESC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar of class and the number of class colored by Rank, could you list in descending by the Class?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY Class DESC"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar graph shows the total number of captains categorize by ranks of different classes, and I want to order total number from low to high order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) ASC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar of class and the number of class colored by Rank, and order in ascending by the Y-axis.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of captains in each rank and class? Let class as X-axis, and categorize by rank with a stacked bar chart, I want to order total number from low to high order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) ASC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar of class and the number of class colored by Rank, sort Y in descending order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) DESC"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar graph shows the total number of captains categorize by ranks of different classes, I want to order by the how many class in desc.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of captains in each rank and class? Let class as X-axis, and categorize by rank with a stacked bar chart, rank by the how many class in descending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class ORDER BY COUNT(Class) DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar graph to show the number of rank from different rank, I want to display bar in asc order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart comparing the total number of captains in each rank, rank in ascending by the Rank.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different ranks using a bar graph, and sort bar in ascending order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different ranks using a bar graph, could you order X in desc order?", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart comparing the total number of captains in each rank, sort by the Rank in descending please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of rank from different rank, and display by the Rank in descending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different ranks using a bar graph, and sort from low to high by the Y.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY COUNT(Rank) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY COUNT(Rank) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of rank from different rank, and list how many rank in asc order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY COUNT(Rank) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY COUNT(Rank) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart comparing the total number of captains in each rank, and list how many rank in asc order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY COUNT(Rank) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY COUNT(Rank) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart comparing the total number of captains in each rank, and rank total number in descending order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY COUNT(Rank) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY COUNT(Rank) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of rank from different rank, and rank by the total number in descending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY COUNT(Rank) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY COUNT(Rank) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different ranks using a bar graph, and order from high to low by the how many rank.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY COUNT(Rank) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY COUNT(Rank) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of captains with different classes?, show by the Class in ascending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot how many class by grouped by class as a bar graph, order in asc by the Class.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart comparing the total number of captains of different classes, and rank by the Class from low to high.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of captains with different classes using a bar graph, show by the Class in ascending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot how many class by grouped by class as a bar graph, and display by the X-axis in descending.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of captains with different classes using a bar graph, and I want to order by the x axis from high to low.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart comparing the total number of captains of different classes, I want to order by the x axis from high to low.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of captains with different classes?, sort by the bars in desc.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY Class DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of captains with different classes?, I want to rank from low to high by the the number of class.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of captains with different classes using a bar graph, and display total number from low to high order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart comparing the total number of captains of different classes, display total number from low to high order.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot how many class by grouped by class as a bar graph, and show by the Y-axis in asc.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart comparing the total number of captains of different classes, order from high to low by the the number of class.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of captains with different classes using a bar graph, and order from high to low by the the number of class.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of captains with different classes?, and list Y in descending order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot how many class by grouped by class as a bar graph, and rank total number from high to low order please.", "db_id": "ship_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of ships with different nationalities and ship types?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar chart shows the total number of ships with different nationalities and split by ship type.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality"}, "hardness": "Hard"}, {"nl_queries": "Show me a stacked bar graph, the x-axis is the nationality of ship, and the y-axis is their total number of different nationality and split by ship type.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar chart of how many nationality for with each Type in each nationality", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality"}, "hardness": "Hard"}, {"nl_queries": "Give me a stacked bar chart for showing the total number of each ship type and categorize it by ship nationality.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of every ship type by categorizing by nationality?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart showing the total number of every ship type by categorizing by nationality.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type"}, "hardness": "Hard"}, {"nl_queries": "Stack bar chart of the number of type vs Nationality based on type", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of each ship type? Give me a pie chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type", "binning": ""}, "VQL": "Visualize PIE SELECT Type , COUNT(Type) FROM ship GROUP BY Type"}, "hardness": "Easy"}, {"nl_queries": "Give me the proportion of the total number of every ship type.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type", "binning": ""}, "VQL": "Visualize PIE SELECT Type , COUNT(Type) FROM ship GROUP BY Type"}, "hardness": "Easy"}, {"nl_queries": "Show me a pie chart showing the total number of each ship type.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type", "binning": ""}, "VQL": "Visualize PIE SELECT Type , COUNT(Type) FROM ship GROUP BY Type"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of each type.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type", "binning": ""}, "VQL": "Visualize PIE SELECT Type , COUNT(Type) FROM ship GROUP BY Type"}, "hardness": "Easy"}, {"nl_queries": "What is the total number of each ship type? Give me a bar chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type"}, "hardness": "Easy"}, {"nl_queries": "Show me the comparison of the total number of every ship type with a bar graph.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart showing the total number of each ship type.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type"}, "hardness": "Easy"}, {"nl_queries": "Show me how many type by type in a histogram", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type"}, "hardness": "Easy"}, {"nl_queries": "A pie chart showing the total number of each ship's nationality.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Tell me the proportion of the nationality of all ships.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "What is the proportion of the nationality of all ships? Give me a pie chart.\n", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing the number of nationality across nationality.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality", "binning": ""}, "VQL": "Visualize PIE SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart showing the total number of ships' nationalities.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show me the comparison of the total number of all ships'  nationalities with a bar graph.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "What is the total number of different nationalities of all ships? Give me a bar graph.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show how many nationality from different nationality", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show different types of ships and the number of ships of each type with a pie chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , COUNT(*) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Show different types of ships and the number of ships of each type. Show a pie chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , COUNT(*) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "For each type, how many ships are there. Show the proportion.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , COUNT(*) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Compute the total the total number across type as a pie chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , COUNT(*) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Show different types of ships and the number of ships of each type in a bar chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Show different types of ships and the number of ships of each type. Show bar chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "For each type, how many ships are there. Plot them as bar chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis type y axis the total number ", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Compare the total number of each fate with a bar chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate"}, "hardness": "Easy"}, {"nl_queries": "What is the total number of each fate? Give me the result in a bar graph.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate"}, "hardness": "Easy"}, {"nl_queries": "Show the number of fate from each fate", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate"}, "hardness": "Easy"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type in a pie chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type. ", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "For each type, what is the average tonnage. Plot them as pie chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the average of tonnage from different type.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type in a bar chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type. Show bar chart.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "For each type, what is the average tonnage. ", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for mean tonnage of each type", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Stacked bar chart of how many nationality for with each Type in each nationality, and show by the names in ascending.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a stacked bar graph, the x-axis is the nationality of ship, and the y-axis is their total number of different nationality and split by ship type, sort x-axis in ascending order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality ASC"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar chart shows the total number of ships with different nationalities and split by ship type, order by the Nationality from low to high.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of ships with different nationalities and ship types?, I want to order x-axis from low to high order please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality ASC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar chart of how many nationality for with each Type in each nationality, and could you show by the names in desc?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of ships with different nationalities and ship types?, and sort X in desc order please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar chart shows the total number of ships with different nationalities and split by ship type, could you show by the names in desc?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a stacked bar graph, the x-axis is the nationality of ship, and the y-axis is their total number of different nationality and split by ship type, and show X-axis in desc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar chart shows the total number of ships with different nationalities and split by ship type, and order how many nationality in ascending order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar chart of how many nationality for with each Type in each nationality, and show Y-axis in ascending order please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a stacked bar graph, the x-axis is the nationality of ship, and the y-axis is their total number of different nationality and split by ship type, order from low to high by the total number.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of ships with different nationalities and ship types?, list by the Y from low to high.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a stacked bar graph, the x-axis is the nationality of ship, and the y-axis is their total number of different nationality and split by ship type, and could you display y axis in descending order?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar chart shows the total number of ships with different nationalities and split by ship type, I want to sort Y-axis in desc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar chart of how many nationality for with each Type in each nationality, I want to list how many nationality from high to low order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of ships with different nationalities and ship types?, sort in descending by the total number.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a stacked bar chart for showing the total number of each ship type and categorize it by ship nationality, could you list in ascending by the x-axis?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type ASC"}, "hardness": "Hard"}, {"nl_queries": "Stack bar chart of the number of type vs Nationality based on type, list by the bar in ascending.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of every ship type by categorizing by nationality?, list by the bar in ascending.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart showing the total number of every ship type by categorizing by nationality, could you sort bars in asc order?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type ASC"}, "hardness": "Hard"}, {"nl_queries": "Stack bar chart of the number of type vs Nationality based on type, and list x-axis in descending order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of every ship type by categorizing by nationality?, list from high to low by the x axis.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart showing the total number of every ship type by categorizing by nationality, and list x-axis in descending order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a stacked bar chart for showing the total number of each ship type and categorize it by ship nationality, and I want to order names in desc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of every ship type by categorizing by nationality?, and sort the number of type in ascending order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) ASC"}, "hardness": "Hard"}, {"nl_queries": "Stack bar chart of the number of type vs Nationality based on type, I want to rank the number of type in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart showing the total number of every ship type by categorizing by nationality, I want to list by the y-axis in asc.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a stacked bar chart for showing the total number of each ship type and categorize it by ship nationality, and rank Y from low to high order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart showing the total number of every ship type by categorizing by nationality, and I want to rank by the Y-axis in desc.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) DESC"}, "hardness": "Hard"}, {"nl_queries": "Stack bar chart of the number of type vs Nationality based on type, could you order by the y-axis from high to low?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a stacked bar chart for showing the total number of each ship type and categorize it by ship nationality, and order by the Y-axis in desc.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of every ship type by categorizing by nationality?, and could you sort in desc by the the number of type please?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY COUNT(Type) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the total number of each ship type? Give me a bar chart, display X in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the comparison of the total number of every ship type with a bar graph, sort X in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the total number of each ship type, order Type in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me how many type by type in a histogram, and order in asc by the X.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me how many type by type in a histogram, and I want to display x axis in descending order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the total number of each ship type, and I want to display X in descending order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the comparison of the total number of every ship type with a bar graph, list Type in desc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of each ship type? Give me a bar chart, and list Type in desc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me how many type by type in a histogram, and I want to sort by the Y-axis in asc.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the comparison of the total number of every ship type with a bar graph, and sort by the Y in asc.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the total number of each ship type, list Y in ascending order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of each ship type? Give me a bar chart, I want to show from low to high by the y axis.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of each ship type? Give me a bar chart, sort by the y axis in desc.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the total number of each ship type, and I want to list total number from high to low order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the comparison of the total number of every ship type with a bar graph, and display in desc by the Y-axis.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me how many type by type in a histogram, and sort by the y axis in desc.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of different nationalities of all ships? Give me a bar graph, and list in asc by the X please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many nationality from different nationality, and order Nationality in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the comparison of the total number of all ships' nationalities with a bar graph, and order Nationality in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the total number of ships' nationalities, and order Nationality in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the comparison of the total number of all ships' nationalities with a bar graph, and I want to sort in desc by the x axis.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the total number of ships' nationalities, order Nationality in desc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many nationality from different nationality, order in descending by the x axis please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of different nationalities of all ships? Give me a bar graph, list X-axis in desc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of different nationalities of all ships? Give me a bar graph, and I want to list by the Y from low to high.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the total number of ships' nationalities, display from low to high by the how many nationality.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the comparison of the total number of all ships' nationalities with a bar graph, and display from low to high by the how many nationality.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many nationality from different nationality, display from low to high by the how many nationality.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many nationality from different nationality, list in desc by the total number.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of different nationalities of all ships? Give me a bar graph, and sort by the Y-axis from high to low.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the comparison of the total number of all ships' nationalities with a bar graph, list from high to low by the Y.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing the total number of ships' nationalities, and list in desc by the total number.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the number of ships of each type in a bar chart, I want to list from low to high by the names.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "For each type, how many ships are there Plot them as bar chart, rank by the X-axis in ascending.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the number of ships of each type Show bar chart, list in ascending by the names.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis the total number, and show X-axis in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the number of ships of each type in a bar chart, and show Type in desc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "For each type, how many ships are there Plot them as bar chart, and show names from high to low order please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis the total number, and show names from high to low order please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the number of ships of each type Show bar chart, and order from high to low by the Type.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "For each type, how many ships are there Plot them as bar chart, list y-axis in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the number of ships of each type Show bar chart, display in ascending by the the total number .", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis the total number, and order Y in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the number of ships of each type in a bar chart, and rank in asc by the total number.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the number of ships of each type in a bar chart, display y-axis in desc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each type, how many ships are there Plot them as bar chart, list from high to low by the total number please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis the total number, list by the Y in desc please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the number of ships of each type Show bar chart, list by the Y in desc please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of each fate? Give me the result in a bar graph, list X-axis in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY Fate ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY Fate ASC"}, "hardness": "Easy"}, {"nl_queries": "Compare the total number of each fate with a bar chart, list X-axis in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY Fate ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY Fate ASC"}, "hardness": "Easy"}, {"nl_queries": "Show the number of fate from each fate, sort x-axis in ascending order please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY Fate ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY Fate ASC"}, "hardness": "Easy"}, {"nl_queries": "What is the total number of each fate? Give me the result in a bar graph, display x-axis in descending order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY Fate DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY Fate DESC"}, "hardness": "Easy"}, {"nl_queries": "Compare the total number of each fate with a bar chart, show from high to low by the x axis.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY Fate DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY Fate DESC"}, "hardness": "Easy"}, {"nl_queries": "Show the number of fate from each fate, I want to show by the x-axis in descending.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY Fate DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY Fate DESC"}, "hardness": "Easy"}, {"nl_queries": "Compare the total number of each fate with a bar chart, and display Y-axis from low to high order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of each fate? Give me the result in a bar graph, and could you order Y-axis from low to high order?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of fate from each fate, and could you order Y-axis from low to high order?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of fate from each fate, and rank by the y axis in desc please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of each fate with a bar chart, could you show by the the number of fate in desc?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of each fate? Give me the result in a bar graph, and display in desc by the the number of fate please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each type, what is the average tonnage, show from low to high by the Type.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean tonnage of each type, and show from low to high by the bar.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type Show bar chart, and show from low to high by the bar.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type in a bar chart, and could you sort by the x-axis in ascending please?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean tonnage of each type, show by the bar in desc.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type in a bar chart, and rank Type in descending order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type Show bar chart, and could you show x axis from high to low order please?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "For each type, what is the average tonnage, and show X in desc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean tonnage of each type, show by the Y in asc.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each type, what is the average tonnage, I want to sort Y-axis in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type in a bar chart, could you list y axis in asc order?", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type Show bar chart, sort Y in asc order.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean tonnage of each type, display from high to low by the y-axis.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type Show bar chart, show in descending by the y-axis.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different types of ships and the average tonnage of ships of each type in a bar chart, rank total number in descending order please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each type, what is the average tonnage, and rank by the Y in desc please.", "db_id": "ship_mission", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all branch names with the number of members in each branch registered after 2015 with a bar chart.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id"}, "hardness": "Hard"}, {"nl_queries": "Show all branch names with the number of members in each branch registered after 2015. Plot them as bar chart.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id"}, "hardness": "Hard"}, {"nl_queries": "For each branch id, what are the names of the branches that were registered after 2015. Visualize by bar chart.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id"}, "hardness": "Hard"}, {"nl_queries": "Show me the proportion of cities of the branch table.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT City , COUNT(City) FROM branch GROUP BY City", "binning": ""}, "VQL": "Visualize PIE SELECT City , COUNT(City) FROM branch GROUP BY City"}, "hardness": "Easy"}, {"nl_queries": "Show me the proportion of cities of the branch table with a pie chart.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT City , COUNT(City) FROM branch GROUP BY City", "binning": ""}, "VQL": "Visualize PIE SELECT City , COUNT(City) FROM branch GROUP BY City"}, "hardness": "Easy"}, {"nl_queries": "Compute the total how many city across city as a pie chart.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT City , COUNT(City) FROM branch GROUP BY City", "binning": ""}, "VQL": "Visualize PIE SELECT City , COUNT(City) FROM branch GROUP BY City"}, "hardness": "Easy"}, {"nl_queries": "Compare the number of cities from the branch table.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT City , COUNT(City) FROM branch GROUP BY City ORDER BY open_year", "binning": ""}, "VQL": "Visualize BAR SELECT City , COUNT(City) FROM branch GROUP BY City ORDER BY open_year"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of cities from the branch table using a bar chart.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT City , COUNT(City) FROM branch GROUP BY City ORDER BY open_year", "binning": ""}, "VQL": "Visualize BAR SELECT City , COUNT(City) FROM branch GROUP BY City ORDER BY open_year"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, grouping by city attribute, and compute the total number in each group.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT City , COUNT(City) FROM branch GROUP BY City ORDER BY open_year", "binning": ""}, "VQL": "Visualize BAR SELECT City , COUNT(City) FROM branch GROUP BY City ORDER BY open_year"}, "hardness": "Medium"}, {"nl_queries": "Show the hometown of all members.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown"}, "hardness": "Easy"}, {"nl_queries": "Count the hometown by hometown.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown"}, "hardness": "Easy"}, {"nl_queries": "Count the hometown by hometown using a bar chart.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of the number of hometown from each hometown", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown"}, "hardness": "Easy"}, {"nl_queries": "Show all branch names with the number of members in each branch registered after 2015 Plot them as bar chart, and show by the bar from low to high.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all branch names with the number of members in each branch registered after 2015 with a bar chart, show in ascending by the bars.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For each branch id, what are the names of the branches that were registered after 2015 Visualize by bar chart, and sort in ascending by the Name.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all branch names with the number of members in each branch registered after 2015 Plot them as bar chart, and could you rank bars in desc order?", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all branch names with the number of members in each branch registered after 2015 with a bar chart, and could you show Name from high to low order?", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For each branch id, what are the names of the branches that were registered after 2015 Visualize by bar chart, and could you show Name from high to low order?", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For each branch id, what are the names of the branches that were registered after 2015 Visualize by bar chart, could you order the total number in asc order?", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all branch names with the number of members in each branch registered after 2015 with a bar chart, and could you order the total number in asc order?", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all branch names with the number of members in each branch registered after 2015 Plot them as bar chart, rank by the total number in asc.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all branch names with the number of members in each branch registered after 2015 Plot them as bar chart, and sort in descending by the Y please.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all branch names with the number of members in each branch registered after 2015 with a bar chart, and list in descending by the total number.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For each branch id, what are the names of the branches that were registered after 2015 Visualize by bar chart, and I want to order by the the total number in desc.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Count the hometown by hometown, I want to sort by the X-axis in asc.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the hometown by hometown using a bar chart, and show by the bars in ascending.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of hometown from each hometown, could you display X-axis from low to high order?", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the hometown of all members, I want to sort by the X-axis in asc.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the hometown of all members, and rank X-axis in desc order.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the hometown by hometown using a bar chart, and order in descending by the x-axis please.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of hometown from each hometown, and rank X-axis in desc order.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the hometown by hometown, display x axis in descending order.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the hometown by hometown, could you display how many hometown in ascending order?", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the hometown of all members, rank in ascending by the y-axis.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the hometown by hometown using a bar chart, show total number in asc order.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of hometown from each hometown, order Y-axis in asc order.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the hometown by hometown, and sort from high to low by the y-axis.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the hometown of all members, and list in descending by the Y.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of hometown from each hometown, and I want to display total number in descending order.", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the hometown by hometown using a bar chart, and could you list y axis in desc order please?", "db_id": "shop_membership", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names of singers and the total sales of their songs in a bar chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name"}, "hardness": "Medium"}, {"nl_queries": "Show the names of singers and the total sales of their songs. Visualize by bar chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name"}, "hardness": "Medium"}, {"nl_queries": "For each singer name, what is the total sales for their songs. Plot them as bar chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name"}, "hardness": "Medium"}, {"nl_queries": "Tell me how many songs each singer has.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of songs each singer has.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of songs each singer has using a bar chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship in a pie chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize PIE SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship. Show a pie chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize PIE SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "For each citizenship, how many singers are from that country. Show the proportion.", "db_id": "singer", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize PIE SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing the total number across citizenship.", "db_id": "singer", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize PIE SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship in a bar chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship. Plot them as bar chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "For each citizenship, how many singers are from that country. ", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "Show me the total number by citizenship in a histogram", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenships and the maximum net worth of singers of each citizenship by a pie chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize PIE SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "Visualize by pie chart about different citizenships and the maximum net worth of singers of each citizenship.", "db_id": "singer", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize PIE SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "For each citizenship, what is the maximum net worth. Show a pie chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize PIE SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the maximum net worth for each citizenship.", "db_id": "singer", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize PIE SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenships and the maximum net worth of singers of each citizenship in a bar chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenships and the maximum net worth of singers of each citizenship. ", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "For each citizenship, what is the maximum net worth. Visualize by bar chart.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "Show me maximal net worth millions by citizenship in a histogram", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"}, "hardness": "Easy"}, {"nl_queries": "Show the names of singers and the total sales of their songs in a bar chart, and order bar in asc order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of singers and the total sales of their songs Visualize by bar chart, and order in ascending by the Name.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "For each singer name, what is the total sales for their songs Plot them as bar chart, could you rank in asc by the bars?", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of singers and the total sales of their songs in a bar chart, and display by the names from high to low.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "For each singer name, what is the total sales for their songs Plot them as bar chart, and I want to display in desc by the names.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of singers and the total sales of their songs Visualize by bar chart, list in descending by the bar please.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of singers and the total sales of their songs in a bar chart, and list Y-axis in asc order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of singers and the total sales of their songs Visualize by bar chart, and could you display by the y axis from low to high?", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) ASC"}, "hardness": "Hard"}, {"nl_queries": "For each singer name, what is the total sales for their songs Plot them as bar chart, rank from low to high by the y-axis.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) ASC"}, "hardness": "Hard"}, {"nl_queries": "For each singer name, what is the total sales for their songs Plot them as bar chart, and show total number in descending order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of singers and the total sales of their songs in a bar chart, and show in descending by the Y.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of singers and the total sales of their songs Visualize by bar chart, and rank by the Y-axis from high to low please.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) DESC"}, "hardness": "Hard"}, {"nl_queries": "Tell me how many songs each singer has, could you display names in ascending order?", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of songs each singer has using a bar chart, could you display names in ascending order?", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of songs each singer has, and could you display names in ascending order?", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of songs each singer has, and rank from high to low by the x-axis.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of songs each singer has using a bar chart, order x-axis from high to low order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Tell me how many songs each singer has, could you display by the bars from high to low?", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Tell me how many songs each singer has, display how many name from low to high order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of songs each singer has, and order in asc by the how many name.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of songs each singer has using a bar chart, list Y in ascending order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "Tell me how many songs each singer has, order in desc by the total number.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of songs each singer has, and show y-axis in descending order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of songs each singer has using a bar chart, order in desc by the total number.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship Plot them as bar chart, could you sort by the x-axis in asc please?", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship in a bar chart, and rank in asc by the X.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by citizenship in a histogram, and display bars in asc order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC"}, "hardness": "Medium"}, {"nl_queries": "For each citizenship, how many singers are from that country, and display bars in asc order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship in a bar chart, could you display by the Citizenship in desc please?", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC"}, "hardness": "Medium"}, {"nl_queries": "For each citizenship, how many singers are from that country, and rank by the x axis in descending.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship Plot them as bar chart, and show by the bar in descending.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by citizenship in a histogram, rank by the x axis in descending.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by citizenship in a histogram, could you list by the Y-axis in ascending please?", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship Plot them as bar chart, and sort total number in asc order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each citizenship, how many singers are from that country, and display in asc by the Y.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship in a bar chart, and I want to list by the Y-axis from low to high.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by citizenship in a histogram, and display by the y-axis from high to low.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship in a bar chart, I want to order total number from high to low order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different citizenship of singers and the number of singers of each citizenship Plot them as bar chart, rank by the total number from high to low.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each citizenship, how many singers are from that country, and display by the y-axis from high to low.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different citizenships and the maximum net worth of singers of each citizenship, and rank by the bars from low to high.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC"}, "hardness": "Easy"}, {"nl_queries": "For each citizenship, what is the maximum net worth Visualize by bar chart, sort in asc by the bar.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me maximal net worth millions by citizenship in a histogram, and show by the x-axis in ascending.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenships and the maximum net worth of singers of each citizenship in a bar chart, show by the x axis from low to high.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenships and the maximum net worth of singers of each citizenship in a bar chart, and order in descending by the X-axis.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC"}, "hardness": "Easy"}, {"nl_queries": "For each citizenship, what is the maximum net worth Visualize by bar chart, and rank by the X in descending.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me maximal net worth millions by citizenship in a histogram, order by the x axis in descending please.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenships and the maximum net worth of singers of each citizenship, could you list x axis from high to low order?", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY Citizenship DESC"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenships and the maximum net worth of singers of each citizenship in a bar chart, I want to display y axis from low to high order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) ASC"}, "hardness": "Easy"}, {"nl_queries": "For each citizenship, what is the maximum net worth Visualize by bar chart, and sort Y in asc order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) ASC"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenships and the maximum net worth of singers of each citizenship, and sort Y in asc order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me maximal net worth millions by citizenship in a histogram, sort Y in asc order.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) ASC"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenships and the maximum net worth of singers of each citizenship, could you show by the Y in descending please?", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) DESC"}, "hardness": "Easy"}, {"nl_queries": "For each citizenship, what is the maximum net worth Visualize by bar chart, and list by the y-axis in descending.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me maximal net worth millions by citizenship in a histogram, and sort by the maximal net worth millions in descending.", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) DESC"}, "hardness": "Easy"}, {"nl_queries": "Show different citizenships and the maximum net worth of singers of each citizenship in a bar chart, and could you sort by the total number from high to low?", "db_id": "singer", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) DESC"}, "hardness": "Easy"}, {"nl_queries": "Find the top five players in terms of potential, bin the birthday into weekday interval, and count the birthday grouping by player's name.", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY player_name ORDER BY potential DESC LIMIT 5", "binning": "BIN birthday BY WEEKDAY"}, "VQL": "Visualize BAR SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY player_name ORDER BY potential DESC LIMIT 5 BIN birthday BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "For the top five players in terms of potential, bin their birthday into weekday interval, and show me the distribution of their birthday.", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5", "binning": "BIN birthday BY WEEKDAY"}, "VQL": "Visualize BAR SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5 BIN birthday BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "For the top five players in terms of potential, bin their birthday into weekday interval count them using a bar graph.", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5", "binning": "BIN birthday BY WEEKDAY"}, "VQL": "Visualize BAR SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5 BIN birthday BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the top five players in terms of potential, bin the birthday into YEAR interval, and count the birthday grouping by player's name.", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY player_name ORDER BY potential DESC LIMIT 5", "binning": "BIN birthday BY YEAR"}, "VQL": "Visualize LINE SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY player_name ORDER BY potential DESC LIMIT 5 BIN birthday BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For the top five players in terms of potential, bin their birthday into YEAR interval, and show me the distribution of their birthday.", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5", "binning": "BIN birthday BY YEAR"}, "VQL": "Visualize LINE SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5 BIN birthday BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For the top five players in terms of potential, bin their birthday into YEAR interval count them using a trend line.", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5", "binning": "BIN birthday BY YEAR"}, "VQL": "Visualize LINE SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5 BIN birthday BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot", "binning": ""}, "VQL": "Visualize PIE SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot"}, "hardness": "Medium"}, {"nl_queries": "", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot", "binning": ""}, "VQL": "Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot"}, "hardness": "Medium"}, {"nl_queries": ", list X-axis in ascending order.", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY preferred_foot ASC", "binning": ""}, "VQL": "Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY preferred_foot ASC"}, "hardness": "Hard"}, {"nl_queries": ", show preferred_foot in descending order.", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY preferred_foot DESC", "binning": ""}, "VQL": "Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY preferred_foot DESC"}, "hardness": "Hard"}, {"nl_queries": ", could you order by the total number in asc?", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": ", and show in descending by the Y.", "db_id": "soccer_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the name of all students who were in the tryout sorted in alphabetic order, and count them by a pie chart", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName", "binning": ""}, "VQL": "Visualize PIE SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"}, "hardness": "Hard"}, {"nl_queries": "A pie chart for what are the number of the names of all students who tried out in alphabetical order?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName", "binning": ""}, "VQL": "Visualize PIE SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"}, "hardness": "Hard"}, {"nl_queries": "A pie chart for finding the number of the name of all students who were in the tryout sorted in alphabetic order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName", "binning": ""}, "VQL": "Visualize PIE SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"}, "hardness": "Hard"}, {"nl_queries": "Find the number of the name of all students who were in the tryout sorted in alphabetic order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName", "binning": ""}, "VQL": "Visualize PIE SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the names of all students who tried out in alphabetical order?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName", "binning": ""}, "VQL": "Visualize PIE SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"}, "hardness": "Hard"}, {"nl_queries": "What are the names of all students who tried out in alphabetical order, and count them by a pie chart", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName", "binning": ""}, "VQL": "Visualize PIE SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the names of all students who tried out in alphabetical order?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName", "binning": ""}, "VQL": "Visualize BAR SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"}, "hardness": "Hard"}, {"nl_queries": "What are the names of all students who tried out in alphabetical order, and count them by a bar chart", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName", "binning": ""}, "VQL": "Visualize BAR SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for finding the number of the name of all students who were in the tryout sorted in alphabetic order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName", "binning": ""}, "VQL": "Visualize BAR SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"}, "hardness": "Hard"}, {"nl_queries": "Find the number of the name of all students who were in the tryout sorted in alphabetic order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName", "binning": ""}, "VQL": "Visualize BAR SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the names of all students who tried out in alphabetical order?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName", "binning": ""}, "VQL": "Visualize BAR SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"}, "hardness": "Hard"}, {"nl_queries": "Find the name of all students who were in the tryout sorted in alphabetic order, and count them by a bar chart", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName", "binning": ""}, "VQL": "Visualize BAR SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"}, "hardness": "Hard"}, {"nl_queries": "Pie. what is minimum hours of the students playing in different position?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos", "binning": ""}, "VQL": "Visualize PIE SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos"}, "hardness": "Easy"}, {"nl_queries": "what is minimum hours of the students playing in different position?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos", "binning": ""}, "VQL": "Visualize PIE SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos"}, "hardness": "Easy"}, {"nl_queries": "What is minimum hours of the students playing in different position. Show the proportion.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos", "binning": ""}, "VQL": "Visualize PIE SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos"}, "hardness": "Easy"}, {"nl_queries": "For each position, what is the minimum time students spent practicing. Show a pie chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos", "binning": ""}, "VQL": "Visualize PIE SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about what is minimum hours of the students playing in different position?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what is minimum hours of the students playing in different position?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos"}, "hardness": "Easy"}, {"nl_queries": "What is minimum hours of the students playing in different position. Plot them as bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos"}, "hardness": "Easy"}, {"nl_queries": "For each position, what is the minimum time students spent practicing. Plot them as bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos"}, "hardness": "Easy"}, {"nl_queries": "Find the name and training hours of players whose hours are below 1500. Plot them as pie chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500", "binning": ""}, "VQL": "Visualize PIE SELECT pName , HS FROM Player WHERE HS < 1500"}, "hardness": "Easy"}, {"nl_queries": "Show me the proportion on what are the names and number of hours spent training for each player who trains for less than 1500 hours?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500", "binning": ""}, "VQL": "Visualize PIE SELECT pName , HS FROM Player WHERE HS < 1500"}, "hardness": "Easy"}, {"nl_queries": "Show me a pie chart for what are the names and number of hours spent training for each player who trains for less than 1500 hours?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500", "binning": ""}, "VQL": "Visualize PIE SELECT pName , HS FROM Player WHERE HS < 1500"}, "hardness": "Easy"}, {"nl_queries": "What are the names and number of hours spent training for each player who trains for less than 1500 hours. Visualize by pie chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500", "binning": ""}, "VQL": "Visualize PIE SELECT pName , HS FROM Player WHERE HS < 1500"}, "hardness": "Easy"}, {"nl_queries": "Find the name and training hours of players whose hours are below 1500. Show bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about what are the names and number of hours spent training for each player who trains for less than 1500 hours?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500"}, "hardness": "Easy"}, {"nl_queries": "What are the names and number of hours spent training for each player who trains for less than 1500 hours. Visualize by bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  cName and  enr.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize PIE SELECT cName , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  cName and  enr.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize PIE SELECT cName , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  cName and  enr.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize PIE SELECT cName , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  cName and  enr, show their proportion by a pie chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize PIE SELECT cName , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  cName and  enr.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize PIE SELECT cName , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  cName and  enr  in a bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT cName , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  enr over the  cName .", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT cName , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  cName and  enr .", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT cName , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  cName and  enr .", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT cName , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Find  cName and  enr , and visualize them by a bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT cName , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  state and  enr.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize PIE SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  state and  enr.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize PIE SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  state and  enr.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize PIE SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  state and  enr.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize PIE SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  state and  enr.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize PIE SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Find  state and  enr , and visualize them by a bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  enr over the  state .", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  state and  enr .", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  state and  enr .", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  enr over the  state  by a bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM College ORDER BY enr", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM College ORDER BY enr"}, "hardness": "Easy"}, {"nl_queries": "Return a pie on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'", "binning": ""}, "VQL": "Visualize PIE SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"}, "hardness": "Medium"}, {"nl_queries": "what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'", "binning": ""}, "VQL": "Visualize PIE SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"}, "hardness": "Medium"}, {"nl_queries": "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision. Show a pie chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'", "binning": ""}, "VQL": "Visualize PIE SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"}, "hardness": "Medium"}, {"nl_queries": "Show me a pie chart for how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'", "binning": ""}, "VQL": "Visualize PIE SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"}, "hardness": "Medium"}, {"nl_queries": "Return a pie chart on how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'", "binning": ""}, "VQL": "Visualize PIE SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"}, "hardness": "Medium"}, {"nl_queries": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges. Plot them as pie chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'", "binning": ""}, "VQL": "Visualize PIE SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"}, "hardness": "Medium"}, {"nl_queries": "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision. Plot them as bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"}, "hardness": "Medium"}, {"nl_queries": "how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"}, "hardness": "Medium"}, {"nl_queries": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges. Show bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"}, "hardness": "Medium"}, {"nl_queries": "What is the proportion of the smallest enrollment of schools in each state?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT cName , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "A pie chart showing the proportion of the smallest enrollment of schools in each state", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT cName , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing minimal enr across cname.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT cName , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "What is the name of the school that has the smallest enrollment in each state?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Return a bar graph for the name of the school that has the smallest enrollment in each state.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Compare the smallest enrollment of schools in each state using a bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show minimal enr from different cname", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "What is the proportion of the smallest enrollment in each state?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT state , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "A pie chart for the proportion of the smallest enrollment in each state.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT state , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show minimal enr from different state.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT state , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Show the smallest enrollment of each state.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Show the smallest enrollment of each state using a bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Bar chart, the-axis is the state, and the Y axis is each state's the smallest enrollment.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Show minimal enr from each state", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Find the number of students who participate in the tryout for each college ordered by descending count. Visualize by pie chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize PIE SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a pie chart on how many students participated in tryouts for each college by descennding count?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize PIE SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a pie chart with how many students participated in tryouts for each college by descennding count?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize PIE SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many students participated in tryouts for each college by descennding count. Show a pie chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize PIE SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of students who participate in the tryout for each college ordered by descending count. Visualize by bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for how many students participated in tryouts for each college by descennding count?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many students participated in tryouts for each college by descennding count?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many students participated in tryouts for each college by descennding count. Visualize by bar chart.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each position, what is the minimum time students spent practicing Plot them as bar chart, I want to order in ascending by the bar.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is minimum hours of the students playing in different position?, list x-axis in asc order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is minimum hours of the students playing in different position?, and show names in ascending order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos ASC"}, "hardness": "Medium"}, {"nl_queries": "What is minimum hours of the students playing in different position Plot them as bar chart, list from low to high by the x-axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos ASC"}, "hardness": "Medium"}, {"nl_queries": "For each position, what is the minimum time students spent practicing Plot them as bar chart, and list x-axis in descending order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is minimum hours of the students playing in different position?, order in desc by the X-axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos DESC"}, "hardness": "Medium"}, {"nl_queries": "What is minimum hours of the students playing in different position Plot them as bar chart, and order in desc by the X-axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is minimum hours of the students playing in different position?, and order in desc by the X-axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is minimum hours of the students playing in different position?, show by the y axis in ascending please.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is minimum hours of the students playing in different position Plot them as bar chart, and display by the y-axis in asc.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is minimum hours of the students playing in different position?, show Y in asc order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each position, what is the minimum time students spent practicing Plot them as bar chart, and display by the y-axis in asc.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is minimum hours of the students playing in different position?, order from high to low by the Y.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each position, what is the minimum time students spent practicing Plot them as bar chart, and I want to display by the total number in descending please.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is minimum hours of the students playing in different position Plot them as bar chart, and could you sort by the y axis in descending?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what is minimum hours of the students playing in different position?, I want to display by the total number in descending please.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and training hours of players whose hours are below 1500 Show bar chart, show pName in asc order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and number of hours spent training for each player who trains for less than 1500 hours Visualize by bar chart, and list in ascending by the names.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the names and number of hours spent training for each player who trains for less than 1500 hours?, show pName in asc order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the names and number of hours spent training for each player who trains for less than 1500 hours?, and list by the X-axis from high to low.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and training hours of players whose hours are below 1500 Show bar chart, show names in desc order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and number of hours spent training for each player who trains for less than 1500 hours Visualize by bar chart, show names in desc order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the names and number of hours spent training for each player who trains for less than 1500 hours?, and order HS from low to high order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and number of hours spent training for each player who trains for less than 1500 hours Visualize by bar chart, and could you list by the total number from low to high?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and training hours of players whose hours are below 1500 Show bar chart, and rank by the total number in asc.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS ASC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and number of hours spent training for each player who trains for less than 1500 hours Visualize by bar chart, rank y axis in descending order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the names and number of hours spent training for each player who trains for less than 1500 hours?, and display in descending by the y axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and training hours of players whose hours are below 1500 Show bar chart, and list by the y axis from high to low.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS DESC", "binning": ""}, "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, display from low to high by the X.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC"}, "hardness": "Hard"}, {"nl_queries": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges Show bar chart, I want to display x axis from low to high order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC"}, "hardness": "Hard"}, {"nl_queries": "how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, show names from low to high order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, and display in ascending by the x-axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, order by the names in ascending please.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision Plot them as bar chart, order X-axis in asc order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC"}, "hardness": "Hard"}, {"nl_queries": "how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, and show by the bars in descending.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, list by the x axis from high to low.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC"}, "hardness": "Hard"}, {"nl_queries": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges Show bar chart, show by the bars in descending.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, and rank by the state in descending.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision Plot them as bar chart, show by the bars in descending.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, and could you order names from high to low order please?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state DESC"}, "hardness": "Hard"}, {"nl_queries": "how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, show by the Y-axis in ascending.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision Plot them as bar chart, could you display Y in asc order?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC"}, "hardness": "Hard"}, {"nl_queries": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges Show bar chart, I want to order Y-axis from low to high order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, and show by the Y-axis in ascending.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, I want to order Y-axis from low to high order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, order enr in asc order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, list by the y-axis in desc.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr DESC"}, "hardness": "Hard"}, {"nl_queries": "how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, and show enr from high to low order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision Plot them as bar chart, could you order total number in desc order please?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr DESC"}, "hardness": "Hard"}, {"nl_queries": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges Show bar chart, and sort by the Y-axis in desc please.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, and show enr from high to low order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, show enr from high to low order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar graph to show minimal enr from different cname, I want to display by the X-axis in asc.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName ASC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the smallest enrollment of schools in each state using a bar chart, and I want to display by the X-axis in asc.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName ASC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the name of the school that has the smallest enrollment in each state?, I want to list x-axis in ascending order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName ASC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar graph for the name of the school that has the smallest enrollment in each state, could you order by the x axis in asc please?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName ASC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show minimal enr from different cname, could you display by the X in desc?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the smallest enrollment of schools in each state using a bar chart, and order cName in desc order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the name of the school that has the smallest enrollment in each state?, and show from high to low by the X-axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar graph for the name of the school that has the smallest enrollment in each state, and order from high to low by the x axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the smallest enrollment of schools in each state using a bar chart, list total number in asc order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the name of the school that has the smallest enrollment in each state?, and could you show Y-axis in ascending order?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar graph for the name of the school that has the smallest enrollment in each state, and list total number in asc order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show minimal enr from different cname, and sort in asc by the minimal enr.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the name of the school that has the smallest enrollment in each state?, could you rank in desc by the Y-axis?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar graph for the name of the school that has the smallest enrollment in each state, and I want to rank by the Y-axis in desc.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the smallest enrollment of schools in each state using a bar chart, order by the Y-axis in descending please.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show minimal enr from different cname, order by the Y-axis in descending please.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the smallest enrollment of each state, and show in asc by the X please.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the smallest enrollment of each state using a bar chart, order in ascending by the X-axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart, the-axis is the state, and the Y axis is each state's the smallest enrollment, show by the X from low to high.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "Show minimal enr from each state, and could you show by the x-axis in ascending?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "Show minimal enr from each state, could you display by the bar in desc?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the smallest enrollment of each state using a bar chart, and could you display by the x axis in descending please?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart, the-axis is the state, and the Y axis is each state's the smallest enrollment, could you show by the X-axis in desc?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the smallest enrollment of each state, and list in descending by the x-axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the smallest enrollment of each state using a bar chart, show in ascending by the y axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show minimal enr from each state, show from low to high by the Y-axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the smallest enrollment of each state, and could you rank in ascending by the total number?", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart, the-axis is the state, and the Y axis is each state's the smallest enrollment, rank by the Y in ascending.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the smallest enrollment of each state using a bar chart, and show in descending by the y axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the smallest enrollment of each state, and I want to sort Y-axis in descending order please.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart, the-axis is the state, and the Y axis is each state's the smallest enrollment, show in descending by the y axis.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show minimal enr from each state, and I want to rank y-axis in desc order.", "db_id": "soccer_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names of products and the number of events they are in by a bar chart.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name"}, "hardness": "Medium"}, {"nl_queries": "Show the names of products and the number of events they are in. Visualize by bar chart.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name"}, "hardness": "Medium"}, {"nl_queries": "List the names of products that are not in any event, and count them by a pie chart", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize PIE SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name"}, "hardness": "Medium"}, {"nl_queries": "A pie chart for listing the number of the names of products that are not in any event.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize PIE SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name"}, "hardness": "Medium"}, {"nl_queries": "List the number of the names of products that are not in any event.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize PIE SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name"}, "hardness": "Medium"}, {"nl_queries": "List the number of the names of products that are not in any event.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name"}, "hardness": "Medium"}, {"nl_queries": "List the names of products that are not in any event, and count them by a bar chart", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for listing the number of the names of products that are not in any event.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name"}, "hardness": "Medium"}, {"nl_queries": "Show different type codes of products and the number of products with each type code with a pie chart.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize PIE SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "Show different type codes of products and the number of products with each type code. ", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize PIE SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing the total number across product type code.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize PIE SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "Show different type codes of products and the number of products with each type code in a bar chart.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "Show different type codes of products and the number of products with each type code. Visualize by bar chart.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for the total number of each product type code", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "Show the names of products and the number of events they are in, sorted by the number of events in descending order by a bar chart.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of products and the number of events they are in, sorted by the number of events in descending order. Visualize by bar chart.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the proportion of the different types of codes of products?", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize PIE SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of different product type codes.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize PIE SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each product type code.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize PIE SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "What is the total number of different types of codes of products?", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "Compare the total number of different product type codes.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for showing the total number of different product type codes.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis product type code y axis the number of product type code", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code"}, "hardness": "Easy"}, {"nl_queries": "What is the total number of names of products?", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name"}, "hardness": "Easy"}, {"nl_queries": "Compare the total number of different product names.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar graph showing the total number of different product names.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis product name y axis how many product name", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for listing the number of the name of products in ascending order of price.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Price ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Price ASC"}, "hardness": "Medium"}, {"nl_queries": "List all product names in ascending order of price, and count them by a bar chart", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Price ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Price ASC"}, "hardness": "Medium"}, {"nl_queries": "List the number of the name of products in ascending order of price.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Price ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Price ASC"}, "hardness": "Medium"}, {"nl_queries": "Sort the names of products in ascending order of their price, and count them by a bar chart", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Price ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Price ASC"}, "hardness": "Medium"}, {"nl_queries": "List the name of products in ascending order of price, and count them by a bar chart", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Price ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Price ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names of products and the number of events they are in by a bar chart, and sort by the X in asc.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY Product_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY Product_Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of products and the number of events they are in Visualize by bar chart, and could you display from low to high by the X-axis?", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY Product_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY Product_Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of products and the number of events they are in Visualize by bar chart, sort in desc by the bars.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY Product_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY Product_Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of products and the number of events they are in by a bar chart, display from high to low by the x axis.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY Product_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY Product_Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of products and the number of events they are in Visualize by bar chart, and I want to sort by the total number in asc.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of products and the number of events they are in by a bar chart, and display Y in ascending order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of products and the number of events they are in Visualize by bar chart, and order by the Y in descending.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the names of products and the number of events they are in by a bar chart, order by the y-axis from high to low please.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "List the number of the names of products that are not in any event, I want to display in ascending by the X-axis.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for listing the number of the names of products that are not in any event, and sort by the Product_Name from low to high please.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name ASC"}, "hardness": "Hard"}, {"nl_queries": "List the names of products that are not in any event, and count them by a bar chart, display Product_Name in asc order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of the names of products that are not in any event, and rank x axis from high to low order please.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for listing the number of the names of products that are not in any event, order in desc by the bars.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name DESC"}, "hardness": "Hard"}, {"nl_queries": "List the names of products that are not in any event, and count them by a bar chart, and order in descending by the bar please.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name DESC"}, "hardness": "Hard"}, {"nl_queries": "List the number of the names of products that are not in any event, and sort y-axis in asc order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for listing the number of the names of products that are not in any event, sort the number of product name in ascending order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the names of products that are not in any event, and count them by a bar chart, I want to show total number from low to high order please.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the names of products that are not in any event, and count them by a bar chart, and show by the Y from high to low.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "List the number of the names of products that are not in any event, and I want to show by the y-axis in desc.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for listing the number of the names of products that are not in any event, and I want to list in desc by the y axis.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show different type codes of products and the number of products with each type code Visualize by bar chart, sort in asc by the bars.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each product type code, sort by the x-axis in asc.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different type codes of products and the number of products with each type code in a bar chart, I want to display bar from low to high order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each product type code, could you rank in desc by the X-axis?", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different type codes of products and the number of products with each type code Visualize by bar chart, and I want to display in descending by the X.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different type codes of products and the number of products with each type code in a bar chart, I want to sort by the x-axis from high to low.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each product type code, order by the Y in asc.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different type codes of products and the number of products with each type code in a bar chart, and I want to order Y in asc order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different type codes of products and the number of products with each type code Visualize by bar chart, I want to order by the y-axis in asc please.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each product type code, and list in descending by the Y-axis.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different type codes of products and the number of products with each type code Visualize by bar chart, I want to list by the total number in descending.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different type codes of products and the number of products with each type code in a bar chart, list in descending by the Y-axis.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different product type codes, sort in asc by the X-axis please.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for showing the total number of different product type codes, and sort by the Product_Type_Code in ascending.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of different types of codes of products?, show x axis from low to high order please.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis product type code y axis the number of product type code, show x axis from low to high order please.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of different types of codes of products?, rank by the bars in desc.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different product type codes, and rank by the bars in desc.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for showing the total number of different product type codes, and could you order in descending by the names?", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis product type code y axis the number of product type code, and show names from high to low order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for showing the total number of different product type codes, and order from low to high by the total number.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of different types of codes of products?, and show Y-axis in ascending order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different product type codes, show Y-axis in ascending order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis product type code y axis the number of product type code, and rank by the Y-axis in ascending.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis product type code y axis the number of product type code, rank in descending by the Y-axis.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for showing the total number of different product type codes, and I want to order by the y-axis in desc.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different product type codes, and I want to sort how many product type code from high to low order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of different types of codes of products?, order from high to low by the total number please.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar graph showing the total number of different product names, I want to rank x axis in ascending order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis product name y axis how many product name, I want to show in ascending by the Product_Name.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different product names, and I want to sort bars in ascending order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of names of products?, and show in ascending by the x axis.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar graph showing the total number of different product names, list x axis from high to low order please.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of names of products?, display in descending by the X.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis product name y axis how many product name, and show in desc by the names please.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different product names, show by the X-axis in descending.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar graph showing the total number of different product names, I want to rank by the Y-axis in ascending.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different product names, show y axis in asc order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis product name y axis how many product name, rank by the the number of product name in ascending.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of names of products?, rank by the y-axis in ascending.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the total number of names of products?, order in descending by the the number of product name.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis product name y axis how many product name, and display Y in descending order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar graph showing the total number of different product names, and display Y in descending order.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of different product names, and show in descending by the y axis.", "db_id": "solvency_ii", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY COUNT(Product_Name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the proportion of different competition types.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize PIE SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "What is the proportion of types of every competition?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize PIE SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "A pie chart showing the proportion of different competition types.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize PIE SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show how many competition type from different competition type.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize PIE SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "Show the number of different competition types with a bar graph.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "What is the number of types of competition?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "A bar chart showing the number of different competition types.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for how many competition type of each competition type", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "How many competitions in each competition type? And split them by country.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country"}, "hardness": "Hard"}, {"nl_queries": "Compute the total number in each competition type, and then split by country.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar chart about the total number in each competition type, and then split by country.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar chart of the number of country for with each Competition_type in each country", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country"}, "hardness": "Hard"}, {"nl_queries": "How many competitions for each country?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for how many competitions for each country.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Compare the total number of competitions for each country.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Show me the number of country by country in a histogram", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "what is the number of players who have points less than 30 for each position?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION", "binning": ""}, "VQL": "Visualize PIE SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION"}, "hardness": "Medium"}, {"nl_queries": "Show me the proportion on what is the number of players who have points less than 30 for each position?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION", "binning": ""}, "VQL": "Visualize PIE SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION"}, "hardness": "Medium"}, {"nl_queries": "What is the number of players who have points less than 30 for each position. ", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION", "binning": ""}, "VQL": "Visualize PIE SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what is the number of players who have points less than 30 for each position?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION"}, "hardness": "Medium"}, {"nl_queries": "what is the number of players who have points less than 30 for each position?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION"}, "hardness": "Medium"}, {"nl_queries": "What is the number of players who have points less than 30 for each position. Plot them as bar chart.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION"}, "hardness": "Medium"}, {"nl_queries": "List the types of competition and the number of competitions of each type by a pie chart.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize PIE SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "List the types of competition and the number of competitions of each type. Plot them as pie chart.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize PIE SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart on what are the types of competition and number of competitions for that type?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize PIE SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "Show me a pie chart for what are the types of competition and number of competitions for that type?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize PIE SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "What are the types of competition and number of competitions for that type. Show the proportion.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize PIE SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each competition type.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize PIE SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "List the types of competition and the number of competitions of each type in a bar chart.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "List the types of competition and the number of competitions of each type. Visualize by bar chart.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram for what are the types of competition and number of competitions for that type?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on what are the types of competition and number of competitions for that type?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "What are the types of competition and number of competitions for that type. Show bar chart.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "Plot the total number by grouped by competition type as a bar graph", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"}, "hardness": "Easy"}, {"nl_queries": "List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20"}, "hardness": "Medium"}, {"nl_queries": "List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis position y axis how many position", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20"}, "hardness": "Medium"}, {"nl_queries": "For all players, show the proportion of the club name they come from.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name", "binning": ""}, "VQL": "Visualize PIE SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name"}, "hardness": "Medium"}, {"nl_queries": "For all players, give me the proportion of the club name they come from.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name", "binning": ""}, "VQL": "Visualize PIE SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name"}, "hardness": "Medium"}, {"nl_queries": "For all players, show the number of different club names they come from.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name"}, "hardness": "Medium"}, {"nl_queries": "For the names and the players of clubs, count the names by names in a bar chart.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name"}, "hardness": "Medium"}, {"nl_queries": "List the position of players and the average number of points of players of each position by a bar chart.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION"}, "hardness": "Easy"}, {"nl_queries": "List the position of players and the average number of points of players of each position. Visualize by bar chart.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION"}, "hardness": "Easy"}, {"nl_queries": "For each position, what is the average number of points for players in that position. Plot them as bar chart.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for mean points of each position", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION"}, "hardness": "Easy"}, {"nl_queries": "What is the number of types of competition?, order in asc by the names.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for how many competition type of each competition type, rank from low to high by the bars.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of different competition types with a bar graph, and order by the bar in asc please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart showing the number of different competition types, could you show from low to high by the bar please?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart showing the number of different competition types, display from high to low by the x axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of different competition types with a bar graph, and I want to display from high to low by the Competition_type.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for how many competition type of each competition type, and I want to order in desc by the x axis please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of types of competition?, I want to display X-axis from high to low order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of different competition types with a bar graph, list in asc by the Y please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart showing the number of different competition types, I want to rank Y-axis in ascending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of types of competition?, and could you rank Y-axis in asc order?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for how many competition type of each competition type, and rank the number of competition type in ascending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of types of competition?, sort the number of competition type from high to low order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart showing the number of different competition types, display by the y axis in descending.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of different competition types with a bar graph, sort the number of competition type from high to low order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for how many competition type of each competition type, order by the y-axis in descending.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) DESC"}, "hardness": "Medium"}, {"nl_queries": "A stacked bar chart about the total number in each competition type, and then split by country, could you order by the bars from low to high?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country ASC"}, "hardness": "Hard"}, {"nl_queries": "How many competitions in each competition type? And split them by country, and could you sort in ascending by the names?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country ASC"}, "hardness": "Hard"}, {"nl_queries": "Compute the total number in each competition type, and then split by country, and sort in asc by the bar.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country ASC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar chart of the number of country for with each Competition_type in each country, sort in asc by the bar.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country ASC"}, "hardness": "Hard"}, {"nl_queries": "Compute the total number in each competition type, and then split by country, show in desc by the x-axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar chart of the number of country for with each Competition_type in each country, order bar in desc order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC"}, "hardness": "Hard"}, {"nl_queries": "How many competitions in each competition type? And split them by country, show in desc by the x-axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar chart about the total number in each competition type, and then split by country, and order in descending by the x-axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC"}, "hardness": "Hard"}, {"nl_queries": "How many competitions in each competition type? And split them by country, and order Y-axis from low to high order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) ASC"}, "hardness": "Hard"}, {"nl_queries": "Compute the total number in each competition type, and then split by country, could you show in ascending by the y axis please?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) ASC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar chart of the number of country for with each Competition_type in each country, and show by the y axis in asc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) ASC"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar chart about the total number in each competition type, and then split by country, and could you display by the Y-axis from low to high?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) ASC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar chart of the number of country for with each Competition_type in each country, sort by the the number of country in descending.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many competitions in each competition type? And split them by country, sort by the the number of country in descending.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) DESC"}, "hardness": "Hard"}, {"nl_queries": "Compute the total number in each competition type, and then split by country, and could you order by the y-axis in desc?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) DESC"}, "hardness": "Hard"}, {"nl_queries": "A stacked bar chart about the total number in each competition type, and then split by country, and rank by the y axis in desc please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me the number of country by country in a histogram, sort by the bar in asc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "How many competitions for each country?, and list in asc by the X-axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for how many competitions for each country, and order x-axis from low to high order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of competitions for each country, rank Country in ascending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for how many competitions for each country, and display bars from high to low order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the number of country by country in a histogram, and I want to sort in desc by the x axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "How many competitions for each country?, rank by the Country in desc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of competitions for each country, I want to sort in desc by the x axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "How many competitions for each country?, and list by the total number in asc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of competitions for each country, and sort by the Y in asc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the number of country by country in a histogram, and rank by the y axis in ascending.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for how many competitions for each country, and I want to list y-axis in ascending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for how many competitions for each country, and rank by the the number of country in desc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the total number of competitions for each country, show Y from high to low order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the number of country by country in a histogram, rank by the the number of country in desc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many competitions for each country?, and list by the Y-axis from high to low.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of players who have points less than 30 for each position Plot them as bar chart, list in asc by the x axis please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC"}, "hardness": "Hard"}, {"nl_queries": "what is the number of players who have points less than 30 for each position?, and list x axis in ascending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what is the number of players who have points less than 30 for each position?, and show X from low to high order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the number of players who have points less than 30 for each position Plot them as bar chart, and list by the names in desc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position DESC"}, "hardness": "Hard"}, {"nl_queries": "what is the number of players who have points less than 30 for each position?, and rank by the X in desc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what is the number of players who have points less than 30 for each position?, and I want to sort bars in descending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what is the number of players who have points less than 30 for each position?, show y axis from low to high order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the number of players who have points less than 30 for each position Plot them as bar chart, and rank from low to high by the y-axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "what is the number of players who have points less than 30 for each position?, show y axis from low to high order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what is the number of players who have points less than 30 for each position?, list by the y axis in desc please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "what is the number of players who have points less than 30 for each position?, and could you list from high to low by the y axis?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the number of players who have points less than 30 for each position Plot them as bar chart, order the total number from high to low order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Plot the total number by grouped by competition type as a bar graph, and order X in ascending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC"}, "hardness": "Medium"}, {"nl_queries": "List the types of competition and the number of competitions of each type in a bar chart, sort by the bars in asc please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the types of competition and number of competitions for that type?, and list by the names from low to high.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the types of competition and number of competitions for that type Show bar chart, and display names in ascending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC"}, "hardness": "Medium"}, {"nl_queries": "List the types of competition and the number of competitions of each type Visualize by bar chart, sort bars in asc order please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the types of competition and number of competitions for that type?, order X in ascending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by competition type as a bar graph, and display names in descending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the types of competition and number of competitions for that type Show bar chart, I want to display by the X-axis in descending.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the types of competition and number of competitions for that type?, I want to list from high to low by the bar.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC"}, "hardness": "Medium"}, {"nl_queries": "List the types of competition and the number of competitions of each type in a bar chart, display by the x-axis in descending please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC"}, "hardness": "Medium"}, {"nl_queries": "List the types of competition and the number of competitions of each type Visualize by bar chart, list from high to low by the names.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the types of competition and number of competitions for that type?, and display X from high to low order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the types of competition and number of competitions for that type Show bar chart, and rank Y in ascending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "List the types of competition and the number of competitions of each type Visualize by bar chart, and order in asc by the the total number please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the types of competition and number of competitions for that type?, order by the Y in asc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "List the types of competition and the number of competitions of each type in a bar chart, show Y in asc order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by competition type as a bar graph, and I want to show from low to high by the the total number .", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the types of competition and number of competitions for that type?, and order in asc by the the total number please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the types of competition and number of competitions for that type?, I want to display total number in desc order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the types of competition and number of competitions for that type?, rank in desc by the y axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the types of competition and number of competitions for that type Show bar chart, and I want to order the total number from high to low order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the types of competition and the number of competitions of each type Visualize by bar chart, and I want to order the total number from high to low order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the total number by grouped by competition type as a bar graph, and sort by the y axis from high to low.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the types of competition and the number of competitions of each type in a bar chart, sort Y-axis in descending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions, and I want to rank from low to high by the X.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position ASC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis position y axis how many position, could you list from low to high by the X-axis?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position ASC"}, "hardness": "Hard"}, {"nl_queries": "List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions, rank by the X-axis in asc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position ASC"}, "hardness": "Hard"}, {"nl_queries": "List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions, and could you rank in descending by the X?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis position y axis how many position, and order X-axis in desc order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position DESC"}, "hardness": "Hard"}, {"nl_queries": "List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions, could you show by the X-axis in desc?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis position y axis how many position, display from low to high by the the number of position.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions, show in ascending by the Y-axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions, and I want to rank in asc by the the number of position.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions, and order total number in descending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) DESC"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis position y axis how many position, and I want to list total number in desc order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) DESC"}, "hardness": "Hard"}, {"nl_queries": "List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions, and I want to list by the Y in descending.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) DESC"}, "hardness": "Hard"}, {"nl_queries": "For all players, show the number of different club names they come from, and rank by the bars from low to high.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name ASC"}, "hardness": "Hard"}, {"nl_queries": "For the names and the players of clubs, count the names by names in a bar chart, and order in ascending by the x-axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name ASC"}, "hardness": "Hard"}, {"nl_queries": "For the names and the players of clubs, count the names by names in a bar chart, list from high to low by the x-axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name DESC"}, "hardness": "Hard"}, {"nl_queries": "For all players, show the number of different club names they come from, and rank by the bar in desc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name DESC"}, "hardness": "Hard"}, {"nl_queries": "For the names and the players of clubs, count the names by names in a bar chart, sort in ascending by the Y-axis.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY COUNT(T1.name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY COUNT(T1.name) ASC"}, "hardness": "Hard"}, {"nl_queries": "For all players, show the number of different club names they come from, order by the total number in asc please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY COUNT(T1.name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY COUNT(T1.name) ASC"}, "hardness": "Hard"}, {"nl_queries": "For all players, show the number of different club names they come from, and display y axis in desc order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY COUNT(T1.name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY COUNT(T1.name) DESC"}, "hardness": "Hard"}, {"nl_queries": "For the names and the players of clubs, count the names by names in a bar chart, and rank by the y-axis from high to low.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY COUNT(T1.name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY COUNT(T1.name) DESC"}, "hardness": "Hard"}, {"nl_queries": "For each position, what is the average number of points for players in that position Plot them as bar chart, I want to order x axis in asc order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC"}, "hardness": "Medium"}, {"nl_queries": "List the position of players and the average number of points of players of each position Visualize by bar chart, and order by the names in ascending.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC"}, "hardness": "Medium"}, {"nl_queries": "List the position of players and the average number of points of players of each position by a bar chart, and display from low to high by the X.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean points of each position, show X-axis in ascending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC"}, "hardness": "Medium"}, {"nl_queries": "List the position of players and the average number of points of players of each position by a bar chart, rank by the bars in desc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position DESC"}, "hardness": "Medium"}, {"nl_queries": "For each position, what is the average number of points for players in that position Plot them as bar chart, order by the x axis in descending.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean points of each position, and I want to order in descending by the x axis please.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position DESC"}, "hardness": "Medium"}, {"nl_queries": "List the position of players and the average number of points of players of each position Visualize by bar chart, and order by the names in descending.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position DESC"}, "hardness": "Medium"}, {"nl_queries": "List the position of players and the average number of points of players of each position Visualize by bar chart, and could you sort by the total number in ascending?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each position, what is the average number of points for players in that position Plot them as bar chart, could you show y axis from low to high order?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC"}, "hardness": "Medium"}, {"nl_queries": "List the position of players and the average number of points of players of each position by a bar chart, could you order in asc by the the average of points?", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean points of each position, and rank by the Y-axis in asc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC"}, "hardness": "Medium"}, {"nl_queries": "List the position of players and the average number of points of players of each position by a bar chart, and order from high to low by the Y.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean points of each position, rank total number in descending order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each position, what is the average number of points for players in that position Plot them as bar chart, sort the average of points in desc order.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the position of players and the average number of points of players of each position Visualize by bar chart, list by the the average of points in desc.", "db_id": "sports_competition", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC"}, "hardness": "Medium"}, {"nl_queries": "Group by the local authorities and count the number of local authorities, and then group by services.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services"}, "hardness": "Hard"}, {"nl_queries": "Compute the number of local authorities by local authorities and then split by services. Show the result with a stacked bar graph.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar of services and how many services colored by local_authority", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services"}, "hardness": "Hard"}, {"nl_queries": "Compute the number of services by services and then split by local authorities. Show the result with a stacked bar graph.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority"}, "hardness": "Hard"}, {"nl_queries": "count services by services, and split by local authorities with a stacked bar chart.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority"}, "hardness": "Hard"}, {"nl_queries": "Stack bar chart of the number of local authority vs services based on local authority", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority"}, "hardness": "Hard"}, {"nl_queries": "A bar graph listing the local authorities and how many local authorities provided by all stations.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority"}, "hardness": "Easy"}, {"nl_queries": "Count the number of local authorities by the local authority.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority"}, "hardness": "Easy"}, {"nl_queries": "Compare the number of the local authority by the local authority.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of how many local authority from each local authority", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority"}, "hardness": "Easy"}, {"nl_queries": "A bar graph listing the services and how many services provided by all stations.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services"}, "hardness": "Easy"}, {"nl_queries": "Count the number of services by services.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services"}, "hardness": "Easy"}, {"nl_queries": "Compare the number of services by services with a bar graph.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for the number of services of each services", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services"}, "hardness": "Easy"}, {"nl_queries": "Give me the times and numbers of all trains that go to Chennai with a pie chart.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT time , train_number FROM train WHERE destination = 'Chennai'", "binning": ""}, "VQL": "Visualize PIE SELECT time , train_number FROM train WHERE destination = 'Chennai'"}, "hardness": "Easy"}, {"nl_queries": "Give me the times and numbers of all trains that go to Chennai.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT time , train_number FROM train WHERE destination = 'Chennai'", "binning": ""}, "VQL": "Visualize PIE SELECT time , train_number FROM train WHERE destination = 'Chennai'"}, "hardness": "Easy"}, {"nl_queries": "Show me the proportion of times and numbers of all trains that go to Chennai with a pie chart.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT time , train_number FROM train WHERE destination = 'Chennai'", "binning": ""}, "VQL": "Visualize PIE SELECT time , train_number FROM train WHERE destination = 'Chennai'"}, "hardness": "Easy"}, {"nl_queries": "Give me the times and numbers of all trains that go to Chennai, ordered by time with a bar chart.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , train_number FROM train WHERE destination = 'Chennai' ORDER BY TIME", "binning": ""}, "VQL": "Visualize BAR SELECT time , train_number FROM train WHERE destination = 'Chennai' ORDER BY TIME"}, "hardness": "Medium"}, {"nl_queries": "Give me the times and numbers of all trains that go to Chennai, ordered by time. Show bar chart.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , train_number FROM train WHERE destination = 'Chennai' ORDER BY TIME", "binning": ""}, "VQL": "Visualize BAR SELECT time , train_number FROM train WHERE destination = 'Chennai' ORDER BY TIME"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar graph about the times and numbers of all trains that go to Chennai, ordered by time.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , train_number FROM train WHERE destination = 'Chennai' ORDER BY TIME", "binning": ""}, "VQL": "Visualize BAR SELECT time , train_number FROM train WHERE destination = 'Chennai' ORDER BY TIME"}, "hardness": "Medium"}, {"nl_queries": "Group by services attribute in station table and compute the total number of services with a bar chart.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart that the x-axis is the services and the Y is the count(services)", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of services versus the number of services", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services"}, "hardness": "Easy"}, {"nl_queries": "Find the number of trains for each station, as well as the station network name. Show the result with a bar graph.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id", "binning": ""}, "VQL": "Visualize BAR SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for the number of trains for each station by the station network name", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id", "binning": ""}, "VQL": "Visualize BAR SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id"}, "hardness": "Medium"}, {"nl_queries": "Compare all train names' total numbers.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Show the number of train names in a bar chart.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Plot how many name by grouped by name as a bar graph", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what is the average high temperature for each day of week?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on what is the average high temperature for each day of week?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week"}, "hardness": "Easy"}, {"nl_queries": "What is the average high temperature for each day of week. Plot them as bar chart.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show the average of high temperature from different day of week", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week"}, "hardness": "Easy"}, {"nl_queries": "Find the id and local authority of the station whose maximum precipitation is higher than 50. Plot them as pie chart.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id", "binning": ""}, "VQL": "Visualize PIE SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id"}, "hardness": "Easy"}, {"nl_queries": "Find the id and local authority of the station whose maximum precipitation is higher than 50. Visualize by bar chart.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id"}, "hardness": "Easy"}, {"nl_queries": "Find the number of trains starting from each origin. Plot them as bar chart.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM train GROUP BY origin", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin"}, "hardness": "Easy"}, {"nl_queries": "Show me the total number by origin in a histogram", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM train GROUP BY origin", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin"}, "hardness": "Easy"}, {"nl_queries": "Find names of trains that run through stations for the local authority Chiltern, compare the total number of name in a bar graph.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name"}, "hardness": "Hard"}, {"nl_queries": "Find times of trains that run through stations for the local authority Chiltern, compare the total number of different times.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time", "binning": ""}, "VQL": "Visualize BAR SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time"}, "hardness": "Hard"}, {"nl_queries": "Show a bar graph, the data is those times of trains that run through stations for the local authority Chiltern, and the Y axis is the total number of different times.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time", "binning": ""}, "VQL": "Visualize BAR SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar of services and how many services colored by local_authority, and display in ascending by the bar.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services ASC"}, "hardness": "Hard"}, {"nl_queries": "Compute the number of local authorities by local authorities and then split by services Show the result with a stacked bar graph, and order by the names from low to high.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services ASC"}, "hardness": "Hard"}, {"nl_queries": "Group by the local authorities and count the number of local authorities, and then group by services, display in ascending by the bar.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services ASC"}, "hardness": "Hard"}, {"nl_queries": "Compute the number of local authorities by local authorities and then split by services Show the result with a stacked bar graph, I want to rank from high to low by the X.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services DESC"}, "hardness": "Hard"}, {"nl_queries": "Group by the local authorities and count the number of local authorities, and then group by services, could you display in desc by the x-axis?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services DESC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar of services and how many services colored by local_authority, could you order from high to low by the bar please?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services DESC"}, "hardness": "Hard"}, {"nl_queries": "Compute the number of local authorities by local authorities and then split by services Show the result with a stacked bar graph, I want to order y axis from low to high order please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) ASC"}, "hardness": "Hard"}, {"nl_queries": "Group by the local authorities and count the number of local authorities, and then group by services, order in ascending by the y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) ASC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar of services and how many services colored by local_authority, and sort in ascending by the Y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) ASC"}, "hardness": "Hard"}, {"nl_queries": "Group by the local authorities and count the number of local authorities, and then group by services, could you rank by the Y in desc?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) DESC"}, "hardness": "Hard"}, {"nl_queries": "Stacked bar of services and how many services colored by local_authority, and order by the y axis in desc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) DESC"}, "hardness": "Hard"}, {"nl_queries": "Compute the number of local authorities by local authorities and then split by services Show the result with a stacked bar graph, show from high to low by the y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) DESC"}, "hardness": "Hard"}, {"nl_queries": "Compute the number of services by services and then split by local authorities Show the result with a stacked bar graph, show by the X-axis from low to high.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority ASC"}, "hardness": "Hard"}, {"nl_queries": "Stack bar chart of the number of local authority vs services based on local authority, and could you order from low to high by the bars?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority ASC"}, "hardness": "Hard"}, {"nl_queries": "count services by services, and split by local authorities with a stacked bar chart, and show by the bars from low to high.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority ASC"}, "hardness": "Hard"}, {"nl_queries": "count services by services, and split by local authorities with a stacked bar chart, and could you sort bars from high to low order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority DESC"}, "hardness": "Hard"}, {"nl_queries": "Stack bar chart of the number of local authority vs services based on local authority, and show by the x-axis in desc please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority DESC"}, "hardness": "Hard"}, {"nl_queries": "Compute the number of services by services and then split by local authorities Show the result with a stacked bar graph, display from high to low by the x-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority DESC"}, "hardness": "Hard"}, {"nl_queries": "Compute the number of services by services and then split by local authorities Show the result with a stacked bar graph, sort the number of local authority in ascending order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) ASC"}, "hardness": "Hard"}, {"nl_queries": "count services by services, and split by local authorities with a stacked bar chart, and order Y-axis from low to high order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) ASC"}, "hardness": "Hard"}, {"nl_queries": "Stack bar chart of the number of local authority vs services based on local authority, and order Y-axis from low to high order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) ASC"}, "hardness": "Hard"}, {"nl_queries": "Compute the number of services by services and then split by local authorities Show the result with a stacked bar graph, and I want to show by the y-axis from high to low.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) DESC"}, "hardness": "Hard"}, {"nl_queries": "Stack bar chart of the number of local authority vs services based on local authority, and could you display y-axis in descending order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) DESC"}, "hardness": "Hard"}, {"nl_queries": "count services by services, and split by local authorities with a stacked bar chart, and list in desc by the Y.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY COUNT(local_authority) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar graph listing the local authorities and how many local authorities provided by all stations, and show from low to high by the x axis please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of local authorities by the local authority, sort X in ascending order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of the local authority by the local authority, show in ascending by the X.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of how many local authority from each local authority, and display in asc by the X-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of local authorities by the local authority, and rank in desc by the x axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of the local authority by the local authority, and rank in descending by the bar please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar graph listing the local authorities and how many local authorities provided by all stations, could you display X from high to low order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of how many local authority from each local authority, and could you order names in descending order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY local_authority DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of local authorities by the local authority, and order Y-axis from low to high order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar graph listing the local authorities and how many local authorities provided by all stations, order in ascending by the y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of how many local authority from each local authority, and order in ascending by the y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of the local authority by the local authority, and could you show by the total number in ascending?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of how many local authority from each local authority, show the number of local authority in desc order please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar graph listing the local authorities and how many local authorities provided by all stations, rank from high to low by the the number of local authority.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of local authorities by the local authority, and list by the Y in desc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of the local authority by the local authority, show the number of local authority in desc order please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar graph listing the services and how many services provided by all stations, display by the bar in asc please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of services by services, and sort by the services in asc please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of services of each services, sort in ascending by the services.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of services by services with a bar graph, and display in ascending by the bars.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of services of each services, and could you display x-axis in desc order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of services by services, could you sort X-axis from high to low order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of services by services with a bar graph, and could you display x-axis in desc order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar graph listing the services and how many services provided by all stations, list in desc by the x axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of services by services, and display Y-axis from low to high order please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of services of each services, could you display from low to high by the y axis?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of services by services with a bar graph, I want to show Y in ascending order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar graph listing the services and how many services provided by all stations\n\n, order in ascending by the Y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the number of services by services, display by the total number in desc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of services of each services, and rank by the y-axis in descending please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar graph listing the services and how many services provided by all stations, and order from high to low by the total number please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of services by services with a bar graph, sort by the y axis from high to low.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC"}, "hardness": "Medium"}, {"nl_queries": "Group by services attribute in station table and compute the total number of services with a bar chart, order by the services in ascending.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart that the x-axis is the services and the Y is the count(services), and could you show bars from low to high order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of services versus the number of services, and sort by the names in asc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of services versus the number of services, could you display by the names in desc?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC"}, "hardness": "Medium"}, {"nl_queries": "Group by services attribute in station table and compute the total number of services with a bar chart, display x-axis from high to low order please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart that the x-axis is the services and the Y is the count(services), list by the names from high to low please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart that the x-axis is the services and the Y is the count(services), and show by the Y-axis in asc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of services versus the number of services, and order by the Y-axis in ascending please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC"}, "hardness": "Medium"}, {"nl_queries": "Group by services attribute in station table and compute the total number of services with a bar chart, and show by the Y-axis in asc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart that the x-axis is the services and the Y is the count(services), and show total number from high to low order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC"}, "hardness": "Medium"}, {"nl_queries": "Group by services attribute in station table and compute the total number of services with a bar chart, I want to list from high to low by the the number of services.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of services versus the number of services, and show total number from high to low order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY COUNT(services) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for the number of trains for each station by the station network name, rank in asc by the X.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY network_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY network_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of trains for each station, as well as the station network name Show the result with a bar graph, order in ascending by the network_name.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY network_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY network_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for the number of trains for each station by the station network name, display names in desc order please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY network_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY network_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of trains for each station, as well as the station network name Show the result with a bar graph, sort in descending by the X-axis please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY network_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY network_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of trains for each station, as well as the station network name Show the result with a bar graph, and order from low to high by the y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for the number of trains for each station by the station network name, I want to list by the y axis from low to high.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of trains for each station, as well as the station network name Show the result with a bar graph, could you order Y from high to low order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart for the number of trains for each station by the station network name, and could you order Y from high to low order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of train names in a bar chart, and sort in ascending by the x-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare all train names' total numbers, and show in asc by the names.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot how many name by grouped by name as a bar graph, order in ascending by the x-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of train names in a bar chart, list by the x-axis in desc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot how many name by grouped by name as a bar graph, I want to order by the X in descending please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare all train names' total numbers, show by the x-axis in desc please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare all train names' total numbers, and display by the total number from low to high.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of train names in a bar chart, show by the y-axis from low to high.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot how many name by grouped by name as a bar graph, display by the total number from low to high.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare all train names' total numbers, and display from high to low by the how many name.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot how many name by grouped by name as a bar graph, and sort by the total number in descending.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of train names in a bar chart, sort by the total number in descending.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average high temperature for each day of week?, rank x axis in asc order please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week ASC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what is the average high temperature for each day of week?, show x axis in asc order please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week ASC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the average of high temperature from different day of week, I want to rank by the bars from low to high.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week ASC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average high temperature for each day of week Plot them as bar chart, display in ascending by the X.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week ASC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average high temperature for each day of week Plot them as bar chart, and could you order in desc by the x-axis?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week DESC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what is the average high temperature for each day of week?, I want to rank by the bar in desc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week DESC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the average of high temperature from different day of week, and could you order by the bars in desc?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week DESC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average high temperature for each day of week?, and list in descending by the X.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week DESC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what is the average high temperature for each day of week?, display in asc by the total number.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average high temperature for each day of week?, and sort from low to high by the total number please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the average of high temperature from different day of week, and could you show y axis in ascending order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average high temperature for each day of week Plot them as bar chart, I want to sort in ascending by the Y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average high temperature for each day of week Plot them as bar chart, rank Y-axis in desc order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the average high temperature for each day of week?, and display in descending by the Y.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the average of high temperature from different day of week, and rank Y-axis in desc order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what is the average high temperature for each day of week?, and show in desc by the y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the id and local authority of the station whose maximum precipitation is higher than 50 Visualize by bar chart, I want to list in asc by the bars.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id ORDER BY local_authority ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id ORDER BY local_authority ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the id and local authority of the station whose maximum precipitation is higher than 50 Visualize by bar chart, I want to list local_authority from high to low order please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id ORDER BY local_authority DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id ORDER BY local_authority DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the id and local authority of the station whose maximum precipitation is higher than 50 Visualize by bar chart, and display by the id in asc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id ORDER BY id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id ORDER BY id ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the id and local authority of the station whose maximum precipitation is higher than 50 Visualize by bar chart, could you rank y-axis in descending order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id ORDER BY id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT local_authority , id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id ORDER BY id DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of trains starting from each origin Plot them as bar chart, and sort bar in ascending order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM train GROUP BY origin ORDER BY origin ASC", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin ORDER BY origin ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by origin in a histogram, could you display x-axis in ascending order?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM train GROUP BY origin ORDER BY origin ASC", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin ORDER BY origin ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of trains starting from each origin Plot them as bar chart, order bars from high to low order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM train GROUP BY origin ORDER BY origin DESC", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin ORDER BY origin DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by origin in a histogram, and sort by the names from high to low.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM train GROUP BY origin ORDER BY origin DESC", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin ORDER BY origin DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by origin in a histogram, could you list in ascending by the Y?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM train GROUP BY origin ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of trains starting from each origin Plot them as bar chart, and order in asc by the y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM train GROUP BY origin ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of trains starting from each origin Plot them as bar chart, I want to rank in descending by the the total number .", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM train GROUP BY origin ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by origin in a histogram, and I want to list by the Y-axis in descending.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT origin , count(*) FROM train GROUP BY origin ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find names of trains that run through stations for the local authority Chiltern, compare the total number of name in a bar graph, sort x-axis from low to high order.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name ORDER BY name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find names of trains that run through stations for the local authority Chiltern, compare the total number of name in a bar graph, I want to display by the names in desc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name ORDER BY name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find names of trains that run through stations for the local authority Chiltern, compare the total number of name in a bar graph, and sort in asc by the y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find names of trains that run through stations for the local authority Chiltern, compare the total number of name in a bar graph, and display by the Y from high to low.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find times of trains that run through stations for the local authority Chiltern, compare the total number of different times, sort in asc by the bars please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY time ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show a bar graph, the data is those times of trains that run through stations for the local authority Chiltern, and the Y axis is the total number of different times, display X from low to high order please.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY time ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find times of trains that run through stations for the local authority Chiltern, compare the total number of different times, I want to rank by the X from high to low.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY time DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show a bar graph, the data is those times of trains that run through stations for the local authority Chiltern, and the Y axis is the total number of different times, and I want to sort by the X from high to low.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY time DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show a bar graph, the data is those times of trains that run through stations for the local authority Chiltern, and the Y axis is the total number of different times, I want to rank by the y axis in asc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY COUNT(time) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY COUNT(time) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find times of trains that run through stations for the local authority Chiltern, compare the total number of different times, and I want to order in asc by the Y-axis.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY COUNT(time) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY COUNT(time) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find times of trains that run through stations for the local authority Chiltern, compare the total number of different times, and I want to order by the Y-axis in desc.", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY COUNT(time) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY COUNT(time) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show a bar graph, the data is those times of trains that run through stations for the local authority Chiltern, and the Y axis is the total number of different times, could you list in descending by the Y-axis?", "db_id": "station_weather", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY COUNT(time) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY time ORDER BY COUNT(time) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "List the top 5 genres by number of tracks. List genres name and total tracks by a pie chart.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Extra Hard"}, {"nl_queries": "List the top 5 genres by number of tracks. List genres name and total tracks. Visualize by pie chart.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Extra Hard"}, {"nl_queries": "how many tracks does each genre have and what are the names of the top 5?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a pie chart on how many tracks does each genre have and what are the names of the top 5?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Extra Hard"}, {"nl_queries": "How many tracks does each genre have and what are the names of the top 5. Show a pie chart.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Extra Hard"}, {"nl_queries": "List the top 5 genres by number of tracks. List genres name and total tracks with a bar chart.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Extra Hard"}, {"nl_queries": "List the top 5 genres by number of tracks. List genres name and total tracks. Plot them as bar chart.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart for how many tracks does each genre have and what are the names of the top 5?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me a bar chart for how many tracks does each genre have and what are the names of the top 5?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Extra Hard"}, {"nl_queries": "How many tracks does each genre have and what are the names of the top 5. Show bar chart.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize BAR SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Extra Hard"}, {"nl_queries": "A pie chart about what are the top 5 countries by number of invoices and how many do they have?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Hard"}, {"nl_queries": "Visualize a pie chart with what are the top 5 countries by number of invoices and how many do they have?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Hard"}, {"nl_queries": "What are the top 5 countries by number of invoices and how many do they have. ", "db_id": "store_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on what are the top 5 countries by number of invoices and how many do they have?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize BAR SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Hard"}, {"nl_queries": "what are the top 5 countries by number of invoices and how many do they have?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize BAR SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Hard"}, {"nl_queries": "What are the top 5 countries by number of invoices and how many do they have. Plot them as bar chart.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5", "binning": ""}, "VQL": "Visualize BAR SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are the names of the countries and average invoice size of the top countries by size?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_country , AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10", "binning": ""}, "VQL": "Visualize BAR SELECT billing_country , AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the countries and average invoice size of the top countries by size. ", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_country , AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10", "binning": ""}, "VQL": "Visualize BAR SELECT billing_country , AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10"}, "hardness": "Hard"}, {"nl_queries": "List the top 10 customers by total gross sales. Compare the total gross sales of customers by their first name.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the top 10 customers' first names with the highest gross sales, and also what are the sales?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the top 10 customers' first names with the highest gross sales, and also what are the sales? Visualize the result with a bar chart.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT first_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10", "binning": ""}, "VQL": "Visualize BAR SELECT first_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10"}, "hardness": "Extra Hard"}, {"nl_queries": "List the name of all playlist, and count them by a bar chart", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "What are the number of the names of all the playlists?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "What are the names of all the playlists, and count them by a bar chart", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for listing the number of the name of all playlist.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for what are the number of the names of all the playlists?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "List the number of the name of all playlist.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis name y axis how many name", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name"}, "hardness": "Easy"}, {"nl_queries": "List the number of invoices from the US, grouped by state by a bar chart.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state"}, "hardness": "Medium"}, {"nl_queries": "List the number of invoices from the US, grouped by state. Visualize by bar chart.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many invoices were billed from each state?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many invoices were billed from each state?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state"}, "hardness": "Medium"}, {"nl_queries": "How many invoices were billed from each state. Plot them as bar chart.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the names of the top 8 countries by total invoice size and what are those sizes?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8", "binning": ""}, "VQL": "Visualize BAR SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for what are the names of the top 8 countries by total invoice size and what are those sizes?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8", "binning": ""}, "VQL": "Visualize BAR SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8"}, "hardness": "Hard"}, {"nl_queries": "What are the names of the top 8 countries by total invoice size and what are those sizes. Plot them as bar chart.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8", "binning": ""}, "VQL": "Visualize BAR SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the names of all the playlists?, I want to rank x-axis in asc order.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "List the number of the name of all playlist, display in asc by the names.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names of all the playlists, and count them by a bar chart, order from low to high by the bars please.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for listing the number of the name of all playlist, and list x axis from low to high order.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "List the name of all playlist, and count them by a bar chart, show by the X-axis in ascending.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the names of all the playlists?, could you order x axis in asc order please?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis name y axis how many name, display in asc by the names.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "List the name of all playlist, and count them by a bar chart, and sort in desc by the X.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for listing the number of the name of all playlist, and order by the X-axis in desc.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis name y axis how many name, list in desc by the names.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the names of all the playlists?, and sort in desc by the X.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the names of all the playlists?, display by the x-axis from high to low please.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of the name of all playlist, display by the x-axis from high to low please.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names of all the playlists, and count them by a bar chart, and could you show by the bar in descending please?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "List the name of all playlist, and count them by a bar chart, show by the y axis from low to high.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis name y axis how many name, and display in ascending by the the number of name.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "List the number of the name of all playlist, display Y-axis in asc order.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the names of all the playlists?, and show by the y axis from low to high.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the names of all the playlists?, and display in ascending by the the number of name.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names of all the playlists, and count them by a bar chart, and show by the y axis from low to high.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for listing the number of the name of all playlist, display in ascending by the the number of name.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names of all the playlists, and count them by a bar chart, and could you rank in descending by the the number of name?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the names of all the playlists?, and I want to sort by the Y from high to low.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the names of all the playlists?, and could you sort by the Y in descending please?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the name of all playlist, and count them by a bar chart, sort Y from high to low order please.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for listing the number of the name of all playlist, and show by the the number of name from high to low.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis name y axis how many name, could you sort by the Y in descending please?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of the name of all playlist, and show by the the number of name from high to low.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many invoices were billed from each state?, and sort x axis from low to high order.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many invoices were billed from each state?, and show in ascending by the billing_state.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of invoices from the US, grouped by state Visualize by bar chart, I want to rank in ascending by the X please.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of invoices from the US, grouped by state by a bar chart, sort x axis from low to high order.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state ASC"}, "hardness": "Hard"}, {"nl_queries": "How many invoices were billed from each state Plot them as bar chart, and I want to show by the billing_state from low to high.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of invoices from the US, grouped by state Visualize by bar chart, list by the billing_state in descending.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many invoices were billed from each state?, show by the bar in desc.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state DESC"}, "hardness": "Hard"}, {"nl_queries": "List the number of invoices from the US, grouped by state by a bar chart, and list X from high to low order.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state DESC"}, "hardness": "Hard"}, {"nl_queries": "How many invoices were billed from each state Plot them as bar chart, list by the X-axis in desc.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on how many invoices were billed from each state?, order in descending by the bars.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY billing_state DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many invoices were billed from each state?, could you sort Y-axis in asc order?", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of invoices from the US, grouped by state Visualize by bar chart, sort in asc by the total number.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of invoices from the US, grouped by state by a bar chart, show by the Y-axis from low to high.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many invoices were billed from each state Plot them as bar chart, and order by the Y-axis from low to high.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on how many invoices were billed from each state?, and display total number from low to high order.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many invoices were billed from each state Plot them as bar chart, and rank by the the total number in descending please.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on how many invoices were billed from each state?, and rank by the the total number in descending please.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "List the number of invoices from the US, grouped by state Visualize by bar chart, I want to order in descending by the y-axis.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "List the number of invoices from the US, grouped by state by a bar chart, rank by the the total number in descending please.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many invoices were billed from each state?, and show by the Y-axis in desc.", "db_id": "store_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of stores in each city. Visualize by pie chart.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city", "binning": ""}, "VQL": "Visualize PIE SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city"}, "hardness": "Medium"}, {"nl_queries": "Display a pie chart for how many stores are headquarted in each city?", "db_id": "store_product", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city", "binning": ""}, "VQL": "Visualize PIE SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city"}, "hardness": "Medium"}, {"nl_queries": "How many stores are headquarted in each city. Show a pie chart.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city", "binning": ""}, "VQL": "Visualize PIE SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city"}, "hardness": "Medium"}, {"nl_queries": "Find the number of stores in each city. Plot them as bar chart.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many stores are headquarted in each city?", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many stores are headquarted in each city?", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city"}, "hardness": "Medium"}, {"nl_queries": "How many stores are headquarted in each city. Plot them as bar chart.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city"}, "hardness": "Medium"}, {"nl_queries": "Find the name and population of districts with population between 200000 and 200000. Show a bar chart.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"}, "hardness": "Easy"}, {"nl_queries": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"}, "hardness": "Easy"}, {"nl_queries": "Find all types of store and number of them. Show the proportion.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , count(*) FROM store GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "For each type of store, how many of them are there. Show a pie chart.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , count(*) FROM store GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each type.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE", "binning": ""}, "VQL": "Visualize PIE SELECT Type , count(*) FROM store GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Find all types of store and number of them. Visualize by bar chart.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "For each type of store, how many of them are there. Plot them as bar chart.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis type y axis the total number ", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE"}, "hardness": "Easy"}, {"nl_queries": "How many stores are headquarted in each city Plot them as bar chart, rank by the x-axis from low to high.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of stores in each city Plot them as bar chart, show by the x-axis in ascending.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many stores are headquarted in each city?, and I want to display by the x axis from low to high.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many stores are headquarted in each city?, and sort in asc by the bars.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of stores in each city Plot them as bar chart, and show in descending by the names.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC"}, "hardness": "Hard"}, {"nl_queries": "How many stores are headquarted in each city Plot them as bar chart, could you rank by the X from high to low?", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many stores are headquarted in each city?, list from high to low by the bar please.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many stores are headquarted in each city?, and order in desc by the bars.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of stores in each city Plot them as bar chart, and I want to order in asc by the Y.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many stores are headquarted in each city Plot them as bar chart, and list in asc by the total number.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many stores are headquarted in each city?, sort in asc by the the total number .", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many stores are headquarted in each city?, list in asc by the total number please.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many stores are headquarted in each city Plot them as bar chart, and show in descending by the y axis please.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many stores are headquarted in each city?, display in desc by the the total number .", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the number of stores in each city Plot them as bar chart, and show in descending by the y axis please.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many stores are headquarted in each city?, and I want to rank by the Y in desc.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the name and population of districts with population between 200000 and 200000 Show a bar chart, display in asc by the District_name.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, I want to sort by the bars in asc please.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, and show in ascending by the District_name.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph, order x-axis in ascending order.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and population of districts with population between 200000 and 200000 Show a bar chart, and sort District_name from high to low order.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, and display in desc by the bars.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph, and rank in desc by the X.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, I want to list X from high to low order please.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and population of districts with population between 200000 and 200000 Show a bar chart, I want to rank in asc by the y axis please.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, show by the City_Population in ascending.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph, I want to rank in asc by the y axis please.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, display by the City_Population from low to high.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph, display in descending by the y axis.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, show by the y-axis in descending.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and population of districts with population between 200000 and 200000 Show a bar chart, show by the y-axis in descending.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, and I want to sort Y-axis in descending order.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC", "binning": ""}, "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population DESC"}, "hardness": "Medium"}, {"nl_queries": "For each type of store, how many of them are there Plot them as bar chart, and sort from low to high by the X.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Find all types of store and number of them Visualize by bar chart, could you order Type in ascending order?", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis the total number, could you sort x-axis in asc order please?", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC"}, "hardness": "Medium"}, {"nl_queries": "Find all types of store and number of them Visualize by bar chart, could you sort x axis in desc order please?", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis the total number, and order in desc by the names.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "For each type of store, how many of them are there Plot them as bar chart, and display by the X from high to low.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis the total number, display Y-axis in asc order.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find all types of store and number of them Visualize by bar chart, order by the y axis in asc please.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each type of store, how many of them are there Plot them as bar chart, and list in ascending by the y-axis.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each type of store, how many of them are there Plot them as bar chart, and display from high to low by the Y-axis.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis type y axis the total number, display from high to low by the Y-axis.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find all types of store and number of them Visualize by bar chart, rank by the y axis in descending please.", "db_id": "store_product", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "List name and damage for all storms in a descending order of max speed with a bar chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC"}, "hardness": "Easy"}, {"nl_queries": "List name and damage for all storms in a descending order of max speed. Plot them as bar chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC"}, "hardness": "Easy"}, {"nl_queries": "Display a bar chart for what are the names and damage in millions for storms, ordered by their max speeds descending?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the names and damage in millions for storms, ordered by their max speeds descending?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC"}, "hardness": "Easy"}, {"nl_queries": "What are the names and damage in millions for storms, ordered by their max speeds descending. Visualize by bar chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC"}, "hardness": "Easy"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm with a pie chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"}, "hardness": "Medium"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm. Plot them as pie chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"}, "hardness": "Medium"}, {"nl_queries": "A pie chart about how many regions were affected by each storm?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"}, "hardness": "Medium"}, {"nl_queries": "Return a pie chart on how many regions were affected by each storm?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"}, "hardness": "Medium"}, {"nl_queries": "How many regions were affected by each storm. Show a pie chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"}, "hardness": "Medium"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm with a bar chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"}, "hardness": "Medium"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm. ", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many regions were affected by each storm?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"}, "hardness": "Medium"}, {"nl_queries": "how many regions were affected by each storm?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"}, "hardness": "Medium"}, {"nl_queries": "How many regions were affected by each storm. Visualize by bar chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"}, "hardness": "Medium"}, {"nl_queries": "Show the name for regions and the number of storms for each region in a pie chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "binning": ""}, "VQL": "Visualize PIE SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}, "hardness": "Medium"}, {"nl_queries": "Show the name for regions and the number of storms for each region. Plot them as pie chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "binning": ""}, "VQL": "Visualize PIE SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}, "hardness": "Medium"}, {"nl_queries": "Give the proportion of how many storms occured in each region?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "binning": ""}, "VQL": "Visualize PIE SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}, "hardness": "Medium"}, {"nl_queries": "Show me a pie chart for how many storms occured in each region?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "binning": ""}, "VQL": "Visualize PIE SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}, "hardness": "Medium"}, {"nl_queries": "How many storms occured in each region. Plot them as pie chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "binning": ""}, "VQL": "Visualize PIE SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}, "hardness": "Medium"}, {"nl_queries": "Show the name for regions and the number of storms for each region by a bar chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}, "hardness": "Medium"}, {"nl_queries": "Show the name for regions and the number of storms for each region. ", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many storms occured in each region?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many storms occured in each region?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}, "hardness": "Medium"}, {"nl_queries": "How many storms occured in each region. Visualize by bar chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1"}, "hardness": "Easy"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by name.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1"}, "hardness": "Easy"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by name with a bar graph.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1"}, "hardness": "Easy"}, {"nl_queries": "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1"}, "hardness": "Easy"}, {"nl_queries": "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1"}, "hardness": "Easy"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1"}, "hardness": "Easy"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm, I want to list in asc by the X-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many regions were affected by each storm?, and order x-axis in ascending order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "How many regions were affected by each storm Visualize by bar chart, and show Name from low to high order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "how many regions were affected by each storm?, display x-axis in asc order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm with a bar chart, I want to list in asc by the X-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "how many regions were affected by each storm?, could you sort bar in descending order?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "How many regions were affected by each storm Visualize by bar chart, and order bars from high to low order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many regions were affected by each storm?, list in descending by the names please.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm, order bars from high to low order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm with a bar chart, and could you sort bar in descending order?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "how many regions were affected by each storm?, and list the total number in ascending order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm with a bar chart, and display the total number in ascending order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm, rank in ascending by the Y please.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many regions were affected by each storm?, and I want to list in asc by the y-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many regions were affected by each storm Visualize by bar chart, rank in ascending by the Y please.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm with a bar chart, and could you sort Y from high to low order?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "how many regions were affected by each storm?, I want to order in desc by the y axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on how many regions were affected by each storm?, show in desc by the Y please.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "List the name for storms and the number of affected regions for each storm, order by the y-axis from high to low.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many regions were affected by each storm Visualize by bar chart, and rank from high to low by the y-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many storms occured in each region Visualize by bar chart, and show bars from low to high order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the name for regions and the number of storms for each region by a bar chart, display in ascending by the X-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many storms occured in each region?, and I want to sort by the names in ascending.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the name for regions and the number of storms for each region, and show bars from low to high order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many storms occured in each region?, and show bars from low to high order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC"}, "hardness": "Hard"}, {"nl_queries": "How many storms occured in each region Visualize by bar chart, sort from high to low by the X-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the name for regions and the number of storms for each region by a bar chart, and sort from high to low by the X-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many storms occured in each region?, could you rank in desc by the bars?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the name for regions and the number of storms for each region, rank in descending by the bars.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many storms occured in each region?, rank X in desc order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many storms occured in each region?, I want to rank the total number from low to high order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many storms occured in each region Visualize by bar chart, and could you display the total number from low to high order?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the name for regions and the number of storms for each region, and I want to list by the y axis in asc.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many storms occured in each region?, sort by the y axis from low to high please.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the name for regions and the number of storms for each region by a bar chart, and order total number from low to high order please.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many storms occured in each region?, and order total number from high to low order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the name for regions and the number of storms for each region, and I want to rank by the y axis in desc please.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for how many storms occured in each region?, list in descending by the the total number .", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many storms occured in each region Visualize by bar chart, and rank y axis from high to low order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the name for regions and the number of storms for each region by a bar chart, and display in descending by the Y please.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by name, rank by the X-axis in ascending.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, and order by the x-axis from low to high please.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by name with a bar graph, rank by the bars from low to high.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by name, and I want to order by the names from high to low.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by name with a bar graph, and order by the bar in descending.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, order by the bar in descending.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by name, and rank in asc by the y-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by name with a bar graph, order from low to high by the Y-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, sort in asc by the y axis please.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, show Y-axis from high to low order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by name with a bar graph, and could you display from high to low by the Number_Deaths?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by name, order by the Y from high to low.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, could you sort by the names in asc?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute, sort by the names from low to high.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph, order names in ascending order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute, rank by the Dates_active in desc.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active DESC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph, and I want to rank in descending by the x-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active DESC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, rank by the Dates_active in desc.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Dates_active DESC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, and order in ascending by the Y.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph, and could you rank by the y-axis in asc?", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute, and order in ascending by the Y.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph, show y axis in descending order.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute, and list in descending by the Y-axis.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC"}, "hardness": "Medium"}, {"nl_queries": "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, and rank by the total number in desc.", "db_id": "storm_record", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC"}, "hardness": "Medium"}, {"nl_queries": "For each fourth-grade classroom, show the classroom number and the total number of students using it. Show the correlation.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Classroom , count(*) FROM list WHERE grade = \"4\" GROUP BY classroom", "binning": ""}, "VQL": "Visualize SCATTER SELECT Classroom , count(*) FROM list WHERE grade = \"4\" GROUP BY classroom"}, "hardness": "Medium"}, {"nl_queries": "For each classroom, show the classroom number and find how many students are using it. Plot them as scatter chart.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Classroom , count(*) FROM list GROUP BY classroom", "binning": ""}, "VQL": "Visualize SCATTER SELECT Classroom , count(*) FROM list GROUP BY classroom"}, "hardness": "Easy"}, {"nl_queries": "Scatter plot to show classroom on x axis and the total number on y axis.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Classroom , count(*) FROM list GROUP BY classroom", "binning": ""}, "VQL": "Visualize SCATTER SELECT Classroom , count(*) FROM list GROUP BY classroom"}, "hardness": "Easy"}, {"nl_queries": "For each classroom report the grade that is taught in it. Report just the classroom number and the grade number. ", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Classroom , Grade FROM list", "binning": ""}, "VQL": "Visualize SCATTER SELECT Classroom , Grade FROM list"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart about what are the grade number and classroom number of each class in the list?", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Classroom , Grade FROM list", "binning": ""}, "VQL": "Visualize SCATTER SELECT Classroom , Grade FROM list"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart for what are the grade number and classroom number of each class in the list?", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Classroom , Grade FROM list", "binning": ""}, "VQL": "Visualize SCATTER SELECT Classroom , Grade FROM list"}, "hardness": "Easy"}, {"nl_queries": "What are the grade number and classroom number of each class in the list. Visualize by scatter chart.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Classroom , Grade FROM list", "binning": ""}, "VQL": "Visualize SCATTER SELECT Classroom , Grade FROM list"}, "hardness": "Easy"}, {"nl_queries": "Scatter plot to show classroom on x axis and grade on y axis.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Classroom , Grade FROM list", "binning": ""}, "VQL": "Visualize SCATTER SELECT Classroom , Grade FROM list"}, "hardness": "Easy"}, {"nl_queries": "For each grade, report the correlation between grade and the total number of students in the grade.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Grade , count(*) FROM list GROUP BY grade", "binning": ""}, "VQL": "Visualize SCATTER SELECT Grade , count(*) FROM list GROUP BY grade"}, "hardness": "Easy"}, {"nl_queries": "For each grade, show me the relationships between grade and the total number of students in the grade.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Grade , count(*) FROM list GROUP BY grade", "binning": ""}, "VQL": "Visualize SCATTER SELECT Grade , count(*) FROM list GROUP BY grade"}, "hardness": "Easy"}, {"nl_queries": "A scatter plot shows the correlation between grade and the total number of students in the grade.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Grade , count(*) FROM list GROUP BY grade", "binning": ""}, "VQL": "Visualize SCATTER SELECT Grade , count(*) FROM list GROUP BY grade"}, "hardness": "Easy"}, {"nl_queries": "Scatter plot to show grade on x axis and the total number on y axis.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Grade , count(*) FROM list GROUP BY grade", "binning": ""}, "VQL": "Visualize SCATTER SELECT Grade , count(*) FROM list GROUP BY grade"}, "hardness": "Easy"}, {"nl_queries": "For each grade 0 classroom, report the total number of students. Visualize by scatter chart.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Classroom , count(*) FROM list WHERE grade = \"0\" GROUP BY classroom", "binning": ""}, "VQL": "Visualize SCATTER SELECT Classroom , count(*) FROM list WHERE grade = \"0\" GROUP BY classroom"}, "hardness": "Medium"}, {"nl_queries": "For each grade 0 classroom, return the classroom number and the count of students. Show the correlation.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Classroom , count(*) FROM list WHERE grade = \"0\" GROUP BY classroom", "binning": ""}, "VQL": "Visualize SCATTER SELECT Classroom , count(*) FROM list WHERE grade = \"0\" GROUP BY classroom"}, "hardness": "Medium"}, {"nl_queries": "Find the number of students in one classroom. Plot them as scatter chart.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , Classroom FROM list GROUP BY classroom", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , Classroom FROM list GROUP BY classroom"}, "hardness": "Easy"}, {"nl_queries": "Scatter. how many students does one classroom have?", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , Classroom FROM list GROUP BY classroom", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , Classroom FROM list GROUP BY classroom"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter on how many students does one classroom have?", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , Classroom FROM list GROUP BY classroom", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , Classroom FROM list GROUP BY classroom"}, "hardness": "Easy"}, {"nl_queries": "How many students does one classroom have. Show the correlation.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , Classroom FROM list GROUP BY classroom", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , Classroom FROM list GROUP BY classroom"}, "hardness": "Easy"}, {"nl_queries": "Plot a scatter chart, count(*) by classroom.", "db_id": "student_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , Classroom FROM list GROUP BY classroom", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , Classroom FROM list GROUP BY classroom"}, "hardness": "Easy"}, {"nl_queries": "List the id of students who registered some courses and the number of their registered courses in a scatter chart", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.student_id , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.student_id , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id"}, "hardness": "Medium"}, {"nl_queries": "List the id of students who registered some courses and the number of their registered courses. Show the correlation.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.student_id , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.student_id , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id"}, "hardness": "Medium"}, {"nl_queries": "what is the total number of last names of all candidates?", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar graph for what is the total number of last names of all candidates?", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show the number of last name from different last name", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name"}, "hardness": "Easy"}, {"nl_queries": "For all course_name from courses table, group by the course name and count them with a bar chart.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of the number of course name from each course name", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart show the proportion of the number of course names in the course table.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name", "binning": ""}, "VQL": "Visualize PIE SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name"}, "hardness": "Easy"}, {"nl_queries": "What is the proportion of the number of course names in the course table.?", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name", "binning": ""}, "VQL": "Visualize PIE SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show how many course name from different course name.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name", "binning": ""}, "VQL": "Visualize PIE SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name"}, "hardness": "Easy"}, {"nl_queries": "Give the proportion of how many registed students do each course have? List course name and the number of their registered students?", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "binning": ""}, "VQL": "Visualize PIE SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"}, "hardness": "Medium"}, {"nl_queries": "Draw a pie chart for how many registed students do each course have? List course name and the number of their registered students?", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "binning": ""}, "VQL": "Visualize PIE SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"}, "hardness": "Medium"}, {"nl_queries": "How many registed students do each course have? List course name and the number of their registered students. ", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "binning": ""}, "VQL": "Visualize PIE SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"}, "hardness": "Medium"}, {"nl_queries": "For each course id, how many students are registered and what are the course names. Plot them as pie chart.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "binning": ""}, "VQL": "Visualize PIE SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many registed students do each course have? List course name and the number of their registered students?", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"}, "hardness": "Medium"}, {"nl_queries": "how many registed students do each course have? List course name and the number of their registered students?", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"}, "hardness": "Medium"}, {"nl_queries": "How many registed students do each course have? List course name and the number of their registered students. ", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"}, "hardness": "Medium"}, {"nl_queries": "For each course id, how many students are registered and what are the course names. ", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of last name from different last name, and I want to order in ascending by the bar.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name ASC"}, "hardness": "Medium"}, {"nl_queries": "what is the total number of last names of all candidates?, and order x-axis in ascending order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar graph for what is the total number of last names of all candidates?, sort in asc by the x axis.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name ASC"}, "hardness": "Medium"}, {"nl_queries": "what is the total number of last names of all candidates?, and could you sort by the names in descending?", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar graph for what is the total number of last names of all candidates?, and order from high to low by the bar.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of last name from different last name, list X-axis in desc order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar graph for what is the total number of last names of all candidates?, I want to rank in asc by the how many last name please.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) ASC"}, "hardness": "Medium"}, {"nl_queries": "what is the total number of last names of all candidates?, show from low to high by the y-axis.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of last name from different last name, sort by the Y from low to high please.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar graph for what is the total number of last names of all candidates?, I want to show from high to low by the how many last name.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) DESC"}, "hardness": "Medium"}, {"nl_queries": "what is the total number of last names of all candidates?, and show Y-axis in desc order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the number of last name from different last name, I want to order Y-axis from high to low order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of course name from each course name, and I want to show from low to high by the X-axis please.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY course_name ASC"}, "hardness": "Medium"}, {"nl_queries": "For all course_name from courses table, group by the course name and count them with a bar chart, and list in ascending by the x axis please.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY course_name ASC"}, "hardness": "Medium"}, {"nl_queries": "For all course_name from courses table, group by the course name and count them with a bar chart, I want to sort in descending by the x axis.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY course_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of course name from each course name, and I want to rank by the X in desc.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY course_name DESC"}, "hardness": "Medium"}, {"nl_queries": "For all course_name from courses table, group by the course name and count them with a bar chart, and list by the the number of course name from low to high.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY COUNT(course_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY COUNT(course_name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of course name from each course name, and I want to show y axis from low to high order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY COUNT(course_name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY COUNT(course_name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of course name from each course name, and I want to order by the Y-axis in desc.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY COUNT(course_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY COUNT(course_name) DESC"}, "hardness": "Medium"}, {"nl_queries": "For all course_name from courses table, group by the course name and count them with a bar chart, and display Y-axis from high to low order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY COUNT(course_name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY COUNT(course_name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many registed students do each course have? List course name and the number of their registered students?, sort X in asc order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name ASC"}, "hardness": "Hard"}, {"nl_queries": "How many registed students do each course have? List course name and the number of their registered students, sort X in asc order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name ASC"}, "hardness": "Hard"}, {"nl_queries": "how many registed students do each course have? List course name and the number of their registered students?, sort X in asc order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name ASC"}, "hardness": "Hard"}, {"nl_queries": "For each course id, how many students are registered and what are the course names, rank in ascending by the X-axis.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name ASC"}, "hardness": "Hard"}, {"nl_queries": "how many registed students do each course have? List course name and the number of their registered students?, display by the names from high to low.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for how many registed students do each course have? List course name and the number of their registered students?, display by the names from high to low.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name DESC"}, "hardness": "Hard"}, {"nl_queries": "For each course id, how many students are registered and what are the course names, and rank X in desc order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name DESC"}, "hardness": "Hard"}, {"nl_queries": "How many registed students do each course have? List course name and the number of their registered students, display X in descending order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name DESC"}, "hardness": "Hard"}, {"nl_queries": "how many registed students do each course have? List course name and the number of their registered students?, and I want to show from low to high by the y-axis.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for how many registed students do each course have? List course name and the number of their registered students?, I want to show from low to high by the y-axis.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "For each course id, how many students are registered and what are the course names, and could you order the total number from low to high order?", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many registed students do each course have? List course name and the number of their registered students, and I want to show from low to high by the y-axis.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "For each course id, how many students are registered and what are the course names, sort by the Y in descending.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many registed students do each course have? List course name and the number of their registered students, and could you display by the the total number in descending?", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "how many registed students do each course have? List course name and the number of their registered students?, and list y axis from high to low order.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a histogram for how many registed students do each course have? List course name and the number of their registered students?, rank by the y axis from high to low.", "db_id": "student_assessment", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Bin the transcript date into a day of the week interval and count them for a bar chart.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id", "binning": "BIN transcript_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id BIN transcript_date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show the date and id of the transcript with at least 2 course results in a bar chart.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id"}, "hardness": "Easy"}, {"nl_queries": "Show the date and id of the transcript with at least 2 course results. Visualize by bar chart.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on what is the date and id of the transcript with at least 2 courses listed?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about what is the date and id of the transcript with at least 2 courses listed?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id"}, "hardness": "Easy"}, {"nl_queries": "What is the date and id of the transcript with at least 2 courses listed. Visualize by bar chart.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id"}, "hardness": "Easy"}, {"nl_queries": "Bin the transcript date into year interval and count them for a line chart.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id", "binning": "BIN transcript_date BY YEAR"}, "VQL": "Visualize LINE SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id BIN transcript_date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "I want to visualize the trend about the total appears times of transcript date in the Year interval.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id", "binning": "BIN transcript_date BY YEAR"}, "VQL": "Visualize LINE SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id BIN transcript_date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "What other details can you tell me about students in reverse alphabetical order, and count them by a bar chart", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT other_student_details , COUNT(other_student_details) FROM Students GROUP BY other_student_details ORDER BY other_student_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT other_student_details , COUNT(other_student_details) FROM Students GROUP BY other_student_details ORDER BY other_student_details DESC"}, "hardness": "Medium"}, {"nl_queries": "List all the student details in reversed lexicographical order, and count them by a bar chart", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT other_student_details , COUNT(other_student_details) FROM Students GROUP BY other_student_details ORDER BY other_student_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT other_student_details , COUNT(other_student_details) FROM Students GROUP BY other_student_details ORDER BY other_student_details DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and id of courses having at most 2 sections?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id"}, "hardness": "Easy"}, {"nl_queries": "what are the names and id of courses having at most 2 sections?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id"}, "hardness": "Easy"}, {"nl_queries": "What are the names and id of courses having at most 2 sections. ", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id"}, "hardness": "Easy"}, {"nl_queries": "Display a bar chart for what are the names and ids of every course with less than 2 sections?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id"}, "hardness": "Easy"}, {"nl_queries": "What are the names and ids of every course with less than 2 sections. Visualize by bar chart.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id"}, "hardness": "Easy"}, {"nl_queries": "Count the section_description, and group by section_description with a bar chart.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description", "binning": ""}, "VQL": "Visualize BAR SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description"}, "hardness": "Easy"}, {"nl_queries": "Show how many section description from each section description", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description", "binning": ""}, "VQL": "Visualize BAR SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description"}, "hardness": "Easy"}, {"nl_queries": "Bin the transcript date into a day of the week interval and count them for a bar chart, order in ascending by the y axis please.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY COUNT(transcript_date) ASC", "binning": "BIN transcript_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY COUNT(transcript_date) ASC BIN transcript_date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Bin the transcript date into a day of the week interval and count them for a bar chart, could you display total number in descending order?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY COUNT(transcript_date) DESC", "binning": "BIN transcript_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY COUNT(transcript_date) DESC BIN transcript_date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what is the date and id of the transcript with at least 2 courses listed?, show by the transcript_date in asc.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the date and id of the transcript with at least 2 course results Visualize by bar chart, and order by the bars from low to high.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the date and id of the transcript with at least 2 course results in a bar chart, list in asc by the X-axis.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what is the date and id of the transcript with at least 2 courses listed?, and show by the transcript_date in asc.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the date and id of the transcript with at least 2 courses listed Visualize by bar chart, list in asc by the X-axis.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what is the date and id of the transcript with at least 2 courses listed?, display in desc by the X.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the date and id of the transcript with at least 2 course results Visualize by bar chart, and could you rank by the x-axis in descending?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the date and id of the transcript with at least 2 courses listed?, could you show from high to low by the names?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the date and id of the transcript with at least 2 course results in a bar chart, and could you rank by the x-axis in descending?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the date and id of the transcript with at least 2 courses listed Visualize by bar chart, and could you rank by the x-axis in descending?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the date and id of the transcript with at least 2 courses listed?, and order y-axis from low to high order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the date and id of the transcript with at least 2 course results Visualize by bar chart, display in ascending by the Y.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what is the date and id of the transcript with at least 2 courses listed?, and order y-axis from low to high order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the date and id of the transcript with at least 2 courses listed Visualize by bar chart, order y-axis from low to high order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the date and id of the transcript with at least 2 course results in a bar chart, I want to order Y from low to high order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the date and id of the transcript with at least 2 course results in a bar chart, and show in descending by the Y-axis.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what is the date and id of the transcript with at least 2 courses listed?, show Y-axis in desc order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the date and id of the transcript with at least 2 courses listed Visualize by bar chart, could you sort by the Y-axis in desc?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the date and id of the transcript with at least 2 course results Visualize by bar chart, show Y-axis in desc order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what is the date and id of the transcript with at least 2 courses listed?, sort from high to low by the transcript_id please.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T1.transcript_id DESC"}, "hardness": "Medium"}, {"nl_queries": "Bin the transcript date into year interval and count them for a line chart, list from low to high by the X.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date ASC", "binning": "BIN transcript_date BY YEAR"}, "VQL": "Visualize LINE SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date ASC BIN transcript_date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "I want to visualize the trend about the total appears times of transcript date in the Year interval, sort in ascending by the transcript_date.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date ASC", "binning": "BIN transcript_date BY YEAR"}, "VQL": "Visualize LINE SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date ASC BIN transcript_date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "I want to visualize the trend about the total appears times of transcript date in the Year interval, list from low to high by the X.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date ASC", "binning": "BIN transcript_date BY YEAR"}, "VQL": "Visualize LINE SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date ASC BIN transcript_date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "I want to visualize the trend about the total appears times of transcript date in the Year interval, and I want to rank X in desc order please.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date DESC", "binning": "BIN transcript_date BY YEAR"}, "VQL": "Visualize LINE SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date DESC BIN transcript_date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Bin the transcript date into year interval and count them for a line chart, order in descending by the x axis.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date DESC", "binning": "BIN transcript_date BY YEAR"}, "VQL": "Visualize LINE SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date DESC BIN transcript_date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Bin the transcript date into year interval and count them for a line chart, and I want to show by the x-axis in desc.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date DESC", "binning": "BIN transcript_date BY YEAR"}, "VQL": "Visualize LINE SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date DESC BIN transcript_date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "I want to visualize the trend about the total appears times of transcript date in the Year interval, and rank from high to low by the x-axis.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date DESC", "binning": "BIN transcript_date BY YEAR"}, "VQL": "Visualize LINE SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date DESC BIN transcript_date BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "What are the names and id of courses having at most 2 sections, could you order in ascending by the x axis?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name ASC"}, "hardness": "Medium"}, {"nl_queries": "what are the names and id of courses having at most 2 sections?, show by the X from low to high.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and ids of every course with less than 2 sections?, sort names in asc order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and id of courses having at most 2 sections?, and rank x axis in ascending order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and ids of every course with less than 2 sections Visualize by bar chart, list in ascending by the bar.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and id of courses having at most 2 sections?, order by the x axis in desc please.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC"}, "hardness": "Medium"}, {"nl_queries": "what are the names and id of courses having at most 2 sections?, and I want to rank in desc by the course_name.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and ids of every course with less than 2 sections Visualize by bar chart, and order by the x axis in desc please.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and ids of every course with less than 2 sections?, order from high to low by the bars.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and id of courses having at most 2 sections, and I want to display in desc by the x-axis please.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name DESC"}, "hardness": "Medium"}, {"nl_queries": "what are the names and id of courses having at most 2 sections?, and list by the Y from low to high.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and ids of every course with less than 2 sections Visualize by bar chart, and sort total number from low to high order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and ids of every course with less than 2 sections?, and could you display by the total number in asc?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and id of courses having at most 2 sections, I want to sort from low to high by the total number.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and id of courses having at most 2 sections?, and display by the Y-axis from low to high.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id ASC"}, "hardness": "Medium"}, {"nl_queries": "what are the names and id of courses having at most 2 sections?, and I want to sort in desc by the y-axis.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and ids of every course with less than 2 sections Visualize by bar chart, could you list by the total number in descending please?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and id of courses having at most 2 sections, and order y axis from high to low order please.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and ids of every course with less than 2 sections?, rank from high to low by the course_id.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the names and id of courses having at most 2 sections?, display Y-axis from high to low order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the section_description, and group by section_description with a bar chart, and rank by the x-axis in ascending.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY section_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY section_description ASC"}, "hardness": "Medium"}, {"nl_queries": "Show how many section description from each section description, and sort from low to high by the x axis.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY section_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY section_description ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the section_description, and group by section_description with a bar chart, I want to order names in descending order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY section_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY section_description DESC"}, "hardness": "Medium"}, {"nl_queries": "Show how many section description from each section description, and could you rank bar from high to low order please?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY section_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY section_description DESC"}, "hardness": "Medium"}, {"nl_queries": "Show how many section description from each section description, I want to display total number from low to high order.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY COUNT(section_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY COUNT(section_description) ASC"}, "hardness": "Medium"}, {"nl_queries": "Count the section_description, and group by section_description with a bar chart, and could you rank the number of section description in ascending order please?", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY COUNT(section_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY COUNT(section_description) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show how many section description from each section description, and show in descending by the y axis.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY COUNT(section_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY COUNT(section_description) DESC"}, "hardness": "Medium"}, {"nl_queries": "Count the section_description, and group by section_description with a bar chart, and display by the the number of section description in desc please.", "db_id": "student_transcripts_tracking", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY COUNT(section_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY COUNT(section_description) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for finding the number of the names of swimmers who has a result of \"win\".", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name"}, "hardness": "Hard"}, {"nl_queries": "Find the names of swimmers who has a result of \"win\", and count them by a bar chart", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name"}, "hardness": "Hard"}, {"nl_queries": "Find the number of the names of swimmers who has a result of \"win\".", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for how many stadiums does each country have?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for how many stadiums does each country have?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country"}, "hardness": "Easy"}, {"nl_queries": "How many stadiums does each country have. Show bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country"}, "hardness": "Easy"}, {"nl_queries": "Show me the total number by country in a histogram", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  ID and  meter_100  in a scatter chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ID , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  ID and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ID , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  ID and  meter_100 ?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ID , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  ID and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ID , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  ID and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ID , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show me a scatter plot of id and meter_100 for .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ID , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize SCATTER SELECT ID , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  Nationality and the sum of ID , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of ID over the  Nationality , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  Nationality and the sum of ID , and group by attribute Nationality in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  Nationality and the sum of ID , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of ID over the  Nationality , and group by attribute Nationality by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show total number of id from each nationality", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the average of ID over the  Nationality , and group by attribute Nationality by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  Nationality and the average of ID , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  Nationality and the average of ID , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Find  Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  Nationality and the average of ID , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show the average of id from each nationality", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  Nationality and the sum of meter_100 , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the  Nationality , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  Nationality and the sum of meter_100 , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Find  Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  Nationality and the sum of meter_100 , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis nationality y axis sum meter 100", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  Nationality and the average of meter_100 , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  Nationality and the average of meter_100 , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Find  Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the  Nationality , and group by attribute Nationality by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis nationality y axis mean meter 100", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of ID over the  meter_200 , and group by attribute meter_200 by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  meter_200 and the sum of ID , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  meter_200 and the sum of ID , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  meter_200 and the sum of ID , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Show total number of id from each meter 200", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  meter_200 and the average of ID , and group by attribute meter_200 in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  meter_200 and the average of ID , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  meter_200 and the average of ID , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  meter_200 and the average of ID , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of meter 200 versus the average of id", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the  meter_200 , and group by attribute meter_200 by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the  meter_200 , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  meter_200 and the sum of meter_100 , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing total number of meter 100 across meter 200", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the  meter_200 , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  meter_200 and the average of meter_100 , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the  meter_200 , and group by attribute meter_200 by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Plot mean meter 100 by grouped by meter 200 as a bar graph", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  name and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  name and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  name and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  name and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ID over the  name .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Plot id by grouped by name as a bar graph", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  name and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  name and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  name and  meter_100  in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  name and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  meter_100 over the  name  by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of name versus meter_100", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_300 and  ID , and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ID over the  meter_300 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  meter_300 and  ID  in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  meter_300 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  meter_300 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 300", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  meter_300 and  meter_100  in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  meter_300 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_300 and  meter_100 , and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  meter_100 over the  meter_300  by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  meter_100 over the  meter_300 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Plot meter_100 by grouped by meter 300 as a bar graph", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_400 and  ID , and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  meter_400 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  meter_400 and  ID  in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ID over the  meter_400  by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  meter_400 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 400", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_400 and  meter_100 , and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  meter_400 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  meter_400 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  meter_400 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  meter_100 over the  meter_400 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show meter_100 from different meter 400", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  meter_500 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  meter_500 and  ID  in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ID over the  meter_500 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  meter_500 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  meter_500 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 500", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  meter_100 over the  meter_500  by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  meter_100 over the  meter_500 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_500 and  meter_100 , and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  meter_500 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  meter_500 and  meter_100  in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 500 y axis meter_100", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  meter_600 and  ID  in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  meter_600 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_600 and  ID , and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  meter_600 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  meter_600 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 600 y axis id", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  meter_100 over the  meter_600 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  meter_600 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  meter_600 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  meter_600 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  meter_100 over the  meter_600  by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing meter_100 across meter 600", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  meter_700 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  meter_700 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ID over the  meter_700 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ID over the  meter_700  by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  meter_700 and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 700 y axis id", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  meter_100 over the  meter_700 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  meter_700 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  meter_700 and  meter_100  in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_700 and  meter_100 , and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  meter_700 and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show meter_100 from different meter 700", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  Time and  ID  in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  Time and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ID over the  Time  by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  Time and  ID .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Find  Time and  ID , and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis time y axis id", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  Time and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  meter_100 over the  Time  by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Find  Time and  meter_100 , and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  Time and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  Time and  meter_100 .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis time y axis meter_100", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  Nationality and the amount of Nationality , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  Nationality and the amount of Nationality , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Find  Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  Nationality and the amount of Nationality , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the amount of Nationality over the  Nationality , and group by attribute Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis nationality y axis how many nationality", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  meter_200 and the amount of meter_200 , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the amount of meter_200 over the  meter_200 , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Find  meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  meter_200 and the amount of meter_200 , and group by attribute meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing the number of meter 200 across meter 200", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200"}, "hardness": "Easy"}, {"nl_queries": "Find the number of the names of stadiums that some Australian swimmers have been to.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name", "binning": ""}, "VQL": "Visualize PIE SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name"}, "hardness": "Hard"}, {"nl_queries": "Find the names of stadiums that some Australian swimmers have been to, and count them by a pie chart", "db_id": "swimming", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name", "binning": ""}, "VQL": "Visualize PIE SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name"}, "hardness": "Hard"}, {"nl_queries": "A pie chart for finding the number of the names of stadiums that some Australian swimmers have been to.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name", "binning": ""}, "VQL": "Visualize PIE SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name"}, "hardness": "Hard"}, {"nl_queries": "Find the number of the names of stadiums that some Australian swimmers have been to.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name"}, "hardness": "Hard"}, {"nl_queries": "Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for finding the number of the names of swimmers who has a result of \"win\", and rank X in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the names of swimmers who has a result of \"win\", show names in ascending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names of swimmers who has a result of \"win\", and count them by a bar chart, rank X in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names of swimmers who has a result of \"win\", and count them by a bar chart, and could you show in desc by the bar?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the names of swimmers who has a result of \"win\", and display by the bar in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the names of swimmers who has a result of \"win\", could you order x axis in descending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names of swimmers who has a result of \"win\", and count them by a bar chart, could you list by the total number in ascending?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the names of swimmers who has a result of \"win\", and rank by the Y-axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the names of swimmers who has a result of \"win\", rank by the y-axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the names of swimmers who has a result of \"win\", could you display by the y-axis from high to low?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the names of swimmers who has a result of \"win\", order in desc by the Y.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names of swimmers who has a result of \"win\", and count them by a bar chart, and could you show by the y axis in descending please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me the total number by country in a histogram, and could you display by the x axis in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many stadiums does each country have?, and could you sort in ascending by the names please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many stadiums does each country have?, and show in asc by the Country.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "How many stadiums does each country have Show bar chart, and I want to display from low to high by the Country.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many stadiums does each country have?, could you display x axis in descending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by country in a histogram, could you order in desc by the names?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "How many stadiums does each country have Show bar chart, could you rank X from high to low order please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many stadiums does each country have?, and could you order in desc by the names?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "How many stadiums does each country have Show bar chart, could you display Y in asc order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many stadiums does each country have?, and I want to display by the total number in asc please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by country in a histogram, sort in asc by the y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many stadiums does each country have?, and show total number in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by country in a histogram, I want to show Y-axis from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many stadiums does each country have Show bar chart, and rank by the Y-axis in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for how many stadiums does each country have?, and list in descending by the the total number .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many stadiums does each country have?, list in descending by the the total number .", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of Nationality and the sum of ID , and group by attribute Nationality in a bar chart, and order from low to high by the X please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order from low to high by the X please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, could you show by the x-axis in ascending?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality, order by the Nationality in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show total number of id from each nationality, order by the bar from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart, order by the bar from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, I want to show by the x-axis from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, and could you list in descending by the names?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality, display bar in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of Nationality and the sum of ID , and group by attribute Nationality in a bar chart, order by the X from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Show total number of id from each nationality, sort Nationality in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart, sort by the bars in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order in asc by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart, could you order by the y axis in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of Nationality and the sum of ID , and group by attribute Nationality in a bar chart, order by the sum id from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality, and order in asc by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order in asc by the y axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show total number of id from each nationality, and display total number in ascending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, I want to sort from high to low by the y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show total number of id from each nationality, and order by the Y in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of Nationality and the sum of ID , and group by attribute Nationality in a bar chart, and display by the total number in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart, and display by the total number in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality, could you order in descending by the Y-axis please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order by the Y in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and I want to display in ascending by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart, and list by the bar from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the average of id from each nationality, and sort X-axis in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of Nationality and the average of ID , and group by attribute Nationality, and could you sort from low to high by the X-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and I want to sort by the x axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart, display X-axis from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and I want to show by the x-axis in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the average of id from each nationality, and list in desc by the X please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart, and list in desc by the X please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart, could you sort bars from high to low order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, I want to display in descending by the Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of Nationality and the average of ID , and group by attribute Nationality, list in desc by the X please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart, and list from low to high by the Y.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the average of id from each nationality, I want to display in ascending by the Y.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of Nationality and the average of ID , and group by attribute Nationality, and rank from low to high by the mean id.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, rank from low to high by the mean id.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and could you display in ascending by the Y please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart, and I want to display in ascending by the Y.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart, display by the y-axis in desc please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of Nationality and the average of ID , and group by attribute Nationality, and order in descending by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart, rank by the Y in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the average of id from each nationality, display mean id in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and list in desc by the y axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and order in descending by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, I want to order bars in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and could you sort X-axis in asc order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the Nationality , and group by attribute Nationality, and order x axis in asc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and I want to list bar from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis sum meter 100, order x axis in asc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and order by the x-axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and I want to list by the X in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and sort by the X-axis from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, could you rank x axis in descending order please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the Nationality , and group by attribute Nationality, rank names in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis sum meter 100, and I want to sort in desc by the X.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, sort by the X-axis from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, sort by the Y-axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and could you list by the total number from low to high?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis sum meter 100, and rank from low to high by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and I want to display by the total number in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the Nationality , and group by attribute Nationality, and list y axis in ascending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and rank from low to high by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and could you sort in descending by the total number of meter 100?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis sum meter 100, display y axis in descending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, show total number from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the Nationality , and group by attribute Nationality, I want to display from high to low by the y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and display y-axis from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and I want to display from high to low by the y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis mean meter 100, rank from low to high by the bars.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and display in asc by the Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, and rank from low to high by the bars.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, display in asc by the x-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, display in asc by the Nationality.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, could you show in asc by the bars?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, sort from high to low by the X.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, and sort by the names from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis mean meter 100, and could you list X in desc order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, sort names in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and I want to show by the Nationality from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, I want to show by the Nationality from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and show the average of meter 100 in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis mean meter 100, and I want to display in asc by the y-axis please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and display by the y-axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, show the average of meter 100 in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and I want to display in ascending by the the average of meter 100.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, and display by the y-axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and order Y in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, and order Y in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and order Y in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis mean meter 100, I want to order from high to low by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, and order Y in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and display in descending by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, could you list by the bars from low to high?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart, and I want to display in ascending by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Show total number of id from each meter 200, and list by the x axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the meter_200 , and group by attribute meter_200 by a bar chart, and I want to display in ascending by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and list meter_200 in asc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, list meter_200 in asc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the meter_200 , and group by attribute meter_200 by a bar chart, and show by the meter_200 in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Show total number of id from each meter 200, and order by the x-axis in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart, order bars from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of meter_200 and the sum of ID , and group by attribute meter_200, display by the bars in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and order bars from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and order by the names from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart, I want to order by the Y from low to high please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and rank by the y axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show total number of id from each meter 200, I want to sort in ascending by the Y.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and I want to order by the Y from low to high please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and display in asc by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the meter_200 , and group by attribute meter_200 by a bar chart, and order in ascending by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart, and display by the sum id in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, I want to list from high to low by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of meter_200 and the sum of ID , and group by attribute meter_200, display by the sum id in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of ID over the meter_200 , and group by attribute meter_200 by a bar chart, order Y in descending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show total number of id from each meter 200, and I want to list from high to low by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, rank in descending by the y axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, display from low to high by the X-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, display from low to high by the X-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, and could you rank bar in asc order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of meter 200 versus the average of id, and display bars from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and display from low to high by the X-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200, and rank in ascending by the bar.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, and order by the bar in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, and order by the bars from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200, I want to rank by the bars in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and order from high to low by the bars.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of meter 200 versus the average of id, and could you order by the bars in desc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and could you show in desc by the x-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, order total number in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of meter 200 versus the average of id, order total number in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200, sort Y-axis in asc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, sort Y-axis in asc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and order by the y axis from low to high please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, and show from low to high by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and rank by the Y in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of meter 200 versus the average of id, show from high to low by the Y.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, list by the y-axis in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and I want to order y-axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200, and list Y in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, and I want to order y-axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200, rank in ascending by the bar.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart, and could you display bar in ascending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and show by the X from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, show from low to high by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing total number of meter 100 across meter 200, rank from low to high by the x axis please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, rank in ascending by the bar.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, and could you list x-axis from high to low order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200, order bar from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, list x-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing total number of meter 100 across meter 200, display x-axis from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, list x-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart, and show by the x axis in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, and show total number in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, I want to rank in asc by the y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart, show Y-axis in asc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, display Y-axis in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing total number of meter 100 across meter 200, and could you order from low to high by the Y-axis please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200, display Y-axis in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and display from high to low by the y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, sort from high to low by the total number of meter 100 please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing total number of meter 100 across meter 200, and rank y-axis from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart, could you list y-axis from high to low order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200, and I want to order y-axis from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, sort from high to low by the total number of meter 100 please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart, could you rank x-axis in ascending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, and could you display by the x-axis in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and I want to rank bars in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200, and order in ascending by the meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200, and show by the x-axis from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot mean meter 100 by grouped by meter 200 as a bar graph, and order in ascending by the meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart, rank by the bars in descending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and display in desc by the x-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot mean meter 100 by grouped by meter 200 as a bar graph, display in descending by the X-axis please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200, list from high to low by the names please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200, and I want to rank from high to low by the X.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, and I want to order from high to low by the names.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200, sort by the Y in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart, and could you show mean meter 100 from low to high order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, and order by the y-axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200, I want to list mean meter 100 from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot mean meter 100 by grouped by meter 200 as a bar graph, and list by the y axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, I want to list mean meter 100 from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, rank y axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200, display Y in descending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200, display from high to low by the mean meter 100.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart, display Y in descending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and list mean meter 100 from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot mean meter 100 by grouped by meter 200 as a bar graph, I want to display in desc by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of name and ID , could you list bar in ascending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Plot id by grouped by name as a bar graph, display by the X from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of name and ID , and I want to display x-axis in ascending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of name and ID , display from low to high by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the name , and I want to show in asc by the X-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of name and ID , and display from low to high by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of name and ID , and I want to display x-axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of name and ID , and show names in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "Plot id by grouped by name as a bar graph, show by the x-axis in descending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the name , and show by the x-axis in descending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of name and ID , list in descending by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of name and ID , and list by the names from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of name and ID , and rank Y from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the name , display by the Y-axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of name and ID , I want to order by the Y-axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of name and ID , I want to order by the Y-axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of name and ID , and could you rank by the Y in ascending please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Plot id by grouped by name as a bar graph, and display ID in ascending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of name and ID , I want to display from high to low by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of name and ID , and sort from high to low by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the name , could you show by the ID in descending please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of name and ID , and sort from high to low by the ID.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of name and ID , sort from high to low by the ID.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Plot id by grouped by name as a bar graph, and I want to display from high to low by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of name and meter_100 in a bar chart, could you rank by the bar from low to high?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of name and meter_100 , sort from low to high by the X.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of name and meter_100 , and display from low to high by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of name and meter_100 , and list by the name in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the name by a bar chart, could you order name from low to high order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of name versus meter_100, list by the name in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of name and meter_100 in a bar chart, show by the X-axis in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of name and meter_100 , display from high to low by the names.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of name and meter_100 , and display from high to low by the names.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the name by a bar chart, and I want to list by the X in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of name versus meter_100, show in descending by the names.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of name and meter_100 , and order in desc by the x-axis please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY name DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of name and meter_100 , and list in asc by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of name and meter_100 , and list in asc by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of name and meter_100 in a bar chart, and display y axis in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the name by a bar chart, display in asc by the y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of name versus meter_100, and rank by the total number in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of name and meter_100 , and I want to sort Y from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of name and meter_100 in a bar chart, rank y axis in desc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the name by a bar chart, rank y axis in desc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of name and meter_100 , sort y axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of name and meter_100 , and order by the total number in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of name versus meter_100, and sort by the total number in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of name and meter_100 , and order by the total number in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_300 and ID , and visualize them by a bar chart, and show bar in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_300 and ID , display by the names in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_300 , and I want to list by the bar from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 300, and rank from low to high by the names.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_300 and ID in a bar chart, I want to rank by the names from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_300 and ID , and order by the names in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_300 and ID , and rank X-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 300, order by the bars in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_300 and ID , and visualize them by a bar chart, and rank X-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_300 and ID , could you display in descending by the X-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_300 , display in descending by the X-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_300 and ID in a bar chart, and show in descending by the meter_300.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_300 and ID , and visualize them by a bar chart, and display y-axis from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_300 and ID , I want to show from low to high by the y axis please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 300, and I want to show from low to high by the y axis please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_300 and ID , I want to show from low to high by the y axis please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_300 , and I want to display by the ID in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_300 and ID in a bar chart, could you show by the Y-axis in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 300, and list in descending by the y axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_300 and ID , and show y axis from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_300 and ID , and visualize them by a bar chart, list in descending by the y axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_300 , and show by the y axis in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_300 and ID , and order y axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_300 and ID in a bar chart, could you order by the y-axis in descending?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_300 by a bar chart, and could you list in ascending by the bars?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_300 and meter_100 in a bar chart, could you list from low to high by the X-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_300 and meter_100 , and visualize them by a bar chart, and sort by the names from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Plot meter_100 by grouped by meter 300 as a bar graph, could you list in ascending by the bars?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_300 and meter_100 , and could you list from low to high by the X-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_300 , I want to show by the X from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_300 , and could you order by the bar from high to low?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_300 by a bar chart, list X in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_300 and meter_100 in a bar chart, rank by the bars in descending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_300 and meter_100 , and visualize them by a bar chart, and rank by the bars in descending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_300 and meter_100 , and list X in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Plot meter_100 by grouped by meter 300 as a bar graph, I want to order by the names in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC"}, "hardness": "Easy"}, {"nl_queries": "Plot meter_100 by grouped by meter 300 as a bar graph, I want to show Y from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_300 and meter_100 , and visualize them by a bar chart, and list meter_100 in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_300 and meter_100 , list total number in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_300 by a bar chart, and show from low to high by the Y please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_300 , and list meter_100 in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_300 and meter_100 in a bar chart, and I want to show Y from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_300 and meter_100 , and list Y-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_300 by a bar chart, could you display in desc by the y-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_300 , and display in desc by the Y.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_300 and meter_100 , and visualize them by a bar chart, and could you display in desc by the y-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Plot meter_100 by grouped by meter 300 as a bar graph, rank in descending by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_300 and meter_100 in a bar chart, and list Y from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_400 and ID in a bar chart, sort by the X-axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_400 and ID , I want to show by the names in ascending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_400 and ID , and visualize them by a bar chart, sort by the X-axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_400 and ID , and order by the bars in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_400 by a bar chart, could you sort x axis in ascending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 400, and sort by the X-axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 400, and list by the X from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_400 and ID , and visualize them by a bar chart, and display x axis in desc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_400 and ID , display x axis in desc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_400 and ID , could you list meter_400 in descending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_400 and ID in a bar chart, list by the X from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_400 by a bar chart, and list in desc by the names.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_400 by a bar chart, sort in asc by the y axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_400 and ID in a bar chart, and order by the y axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_400 and ID , sort in asc by the y axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_400 and ID , and visualize them by a bar chart, order by the y axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_400 and ID , order by the y axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 400, and sort y-axis in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_400 by a bar chart, show in descending by the ID.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_400 and ID , order by the total number from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_400 and ID , and visualize them by a bar chart, and list by the Y from high to low please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 400, show in descending by the ID.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_400 and ID , and order by the total number from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_400 and ID in a bar chart, and could you order in descending by the y-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_400 and meter_100 , and visualize them by a bar chart, and sort from low to high by the X.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_400 , could you order in asc by the x axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show meter_100 from different meter 400, I want to list X-axis from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_400 and meter_100 , and show from low to high by the bar please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_400 and meter_100 , and could you order in asc by the x axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_400 and meter_100 , I want to show by the bar in ascending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_400 and meter_100 , and visualize them by a bar chart, and rank by the X in descending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_400 and meter_100 , rank X in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_400 , I want to show bars in descending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show meter_100 from different meter 400, rank by the X in descending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_400 and meter_100 , and rank X in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_400 and meter_100 , and rank by the x axis in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_400 , could you show by the meter_100 in ascending?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_400 and meter_100 , display meter_100 in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_400 and meter_100 , and display by the meter_100 in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_400 and meter_100 , and visualize them by a bar chart, and could you display by the y axis in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show meter_100 from different meter 400, and could you display by the y axis in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_400 and meter_100 , and could you display by the y axis in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_400 and meter_100 , display in descending by the meter_100.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_400 and meter_100 , and show in descending by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show meter_100 from different meter 400, and show in descending by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_400 , show in descending by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_400 and meter_100 , and visualize them by a bar chart, and I want to sort by the Y in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_400 and meter_100 , rank from high to low by the Y please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_500 and ID in a bar chart, order names in asc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 500, and could you show by the x-axis in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_500 and ID , and rank in ascending by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_500 , rank in ascending by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_500 and ID , and show in ascending by the x axis please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_500 and ID , rank in ascending by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_500 and ID , list by the X-axis in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_500 and ID in a bar chart, and show x-axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_500 , and list by the meter_500 in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_500 and ID , and rank in desc by the meter_500.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_500 and ID , list by the meter_500 in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 500, and could you sort x axis in descending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_500 , rank by the ID in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_500 and ID , and I want to rank y axis from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_500 and ID in a bar chart, rank Y in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_500 and ID , rank by the ID in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 500, order total number in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_500 and ID , rank by the ID in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_500 and ID , and could you sort in descending by the total number?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_500 and ID in a bar chart, could you order y axis in descending order please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_500 and ID , and could you order y axis in descending order please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_500 , and show y axis from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_500 and ID , and I want to rank y-axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show id from each meter 500, could you rank in descending by the y-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_500 by a bar chart, rank in asc by the bar.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_500 and meter_100 , and visualize them by a bar chart, could you list by the X in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 500 y axis meter_100, and list by the bars in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_500 and meter_100 , and rank by the bar from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_500 and meter_100 in a bar chart, rank by the bar from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_500 , show bar from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_500 , and I want to rank by the X-axis in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_500 and meter_100 in a bar chart, and rank x-axis in descending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_500 and meter_100 , and visualize them by a bar chart, and order in descending by the X-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_500 and meter_100 , could you list meter_500 from high to low order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_500 by a bar chart, and display from high to low by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 500 y axis meter_100, order in descending by the X-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 500 y axis meter_100, sort y-axis in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_500 , and I want to sort in ascending by the meter_100.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_500 by a bar chart, I want to sort in ascending by the meter_100.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_500 and meter_100 , and visualize them by a bar chart, and list by the Y-axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_500 and meter_100 in a bar chart, I want to show by the y-axis from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_500 and meter_100 , and list by the Y-axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_500 , order by the meter_100 in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_500 by a bar chart, and sort from high to low by the meter_100.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_500 and meter_100 , list by the Y-axis in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_500 and meter_100 in a bar chart, sort Y in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_500 and meter_100 , and visualize them by a bar chart, sort y axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 500 y axis meter_100, sort y axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 600 y axis id, show by the X from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_600 and ID , and order by the bars in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_600 and ID , and visualize them by a bar chart, show by the x axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_600 and ID , list in asc by the names please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_600 and ID , and show by the X from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_600 and ID in a bar chart, and sort in asc by the X.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_600 and ID , and visualize them by a bar chart, rank by the x axis from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_600 and ID , and I want to display X-axis in desc order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_600 and ID , and could you rank in desc by the X-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_600 and ID , could you rank in desc by the X-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 600 y axis id, sort X-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_600 and ID in a bar chart, and rank by the meter_600 from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_600 and ID , and display by the Y in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_600 and ID , display by the Y in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_600 and ID , order in asc by the ID.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 600 y axis id, and sort Y from low to high order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_600 and ID , and visualize them by a bar chart, sort Y from low to high order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_600 and ID in a bar chart, list by the y-axis from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_600 and ID in a bar chart, and order by the ID from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_600 and ID , and visualize them by a bar chart, show by the Y from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_600 and ID , order total number from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_600 and ID , show by the Y from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_600 and ID , and rank in descending by the y axis please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 600 y axis id, order by the ID from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_600 , and I want to rank x-axis in ascending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_600 by a bar chart, and list from low to high by the x-axis please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_600 and meter_100 , and rank by the bars in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing meter_100 across meter 600, and could you show by the meter_600 from low to high?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_600 and meter_100 , I want to rank x-axis in ascending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_600 and meter_100 , list from low to high by the x-axis please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_600 and meter_100 , and could you display x axis in descending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_600 and meter_100 , and could you order by the x-axis from high to low please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_600 and meter_100 , display X in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_600 , display X in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_600 by a bar chart, and could you order by the x-axis from high to low please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing meter_100 across meter 600, display X from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing meter_100 across meter 600, and could you order from low to high by the Y-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_600 and meter_100 , show y-axis in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_600 , and could you order y axis in asc order please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_600 and meter_100 , and could you order y axis in asc order please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_600 and meter_100 , show y-axis in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_600 by a bar chart, and could you order from low to high by the Y-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_600 , I want to sort by the Y-axis from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_600 and meter_100 , and rank by the Y in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_600 and meter_100 , and could you display by the Y in desc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing meter_100 across meter 600, and display Y-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_600 and meter_100 , and I want to sort by the Y-axis from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_600 by a bar chart, display Y-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_700 , and order by the bar from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_700 and ID , and order in asc by the names.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_700 and ID , I want to sort in ascending by the bar.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_700 by a bar chart, and could you display in asc by the X?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 700 y axis id, could you show in ascending by the meter_700?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_700 and ID , could you show in ascending by the meter_700?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_700 by a bar chart, and could you display x axis from high to low order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_700 and ID , and could you display x axis from high to low order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_700 and ID , and rank meter_700 in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_700 , and rank x axis from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 700 y axis id, could you list by the bar in desc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_700 and ID , rank meter_700 in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 700 y axis id, and display by the y axis in ascending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_700 and ID , I want to rank in ascending by the Y.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_700 by a bar chart, order in ascending by the Y.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_700 , I want to show by the Y-axis from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_700 and ID , and I want to sort by the Y from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_700 and ID , order in ascending by the Y.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_700 by a bar chart, sort by the y-axis in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of meter_700 and ID , sort by the y-axis in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of meter_700 and ID , and sort by the ID from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis meter 700 y axis id, display y-axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the meter_700 , display y-axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_700 and ID , display y-axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_700 and meter_100 in a bar chart, could you sort by the meter_700 in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_700 and meter_100 , and visualize them by a bar chart, order by the x axis from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show meter_100 from different meter 700, I want to rank bar from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_700 and meter_100 , and list from low to high by the x-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_700 and meter_100 , list from low to high by the x-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_700 , and sort by the X-axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_700 , could you show bars in desc order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_700 and meter_100 , and rank from high to low by the bars.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_700 and meter_100 in a bar chart, and could you list names from high to low order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show meter_100 from different meter 700, and display x axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_700 and meter_100 , and visualize them by a bar chart, and display bar in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_700 and meter_100 , display x axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_700 , and I want to rank y axis from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_700 and meter_100 in a bar chart, and sort Y-axis from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_700 and meter_100 , sort Y from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_700 and meter_100 , I want to rank y axis from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show meter_100 from different meter 700, list meter_100 in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_700 and meter_100 , and visualize them by a bar chart, sort total number from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of meter_700 and meter_100 in a bar chart, order by the Y-axis in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show meter_100 from different meter 700, and order by the meter_100 from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the meter_700 , and order by the meter_100 from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of meter_700 and meter_100 , and show y axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find meter_700 and meter_100 , and visualize them by a bar chart, I want to show meter_100 in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of meter_700 and meter_100 , and I want to show meter_100 in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of Time and ID , rank by the bars from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Time and ID , and list by the bar from low to high please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time ASC"}, "hardness": "Easy"}, {"nl_queries": "Find Time and ID , and visualize them by a bar chart, and list by the bar from low to high please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis time y axis id, and order by the x axis in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Time and ID in a bar chart, and rank by the bars from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the Time by a bar chart, and show by the bar in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Time and ID in a bar chart, show bars from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Find Time and ID , and visualize them by a bar chart, sort by the names in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the Time by a bar chart, sort X from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis time y axis id, and I want to order X-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Time and ID , could you show by the X-axis from high to low please?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of Time and ID , and display x-axis in desc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Find Time and ID , and visualize them by a bar chart, display by the y-axis in ascending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Time and ID in a bar chart, order y axis in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the Time by a bar chart, and sort ID in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of Time and ID , and sort y-axis in ascending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Time and ID , and sort y-axis in ascending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis time y axis id, and sort by the y axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of Time and ID , could you sort y-axis in desc order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Time and ID in a bar chart, could you sort y-axis in desc order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ID over the Time by a bar chart, could you list ID from high to low order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Find Time and ID , and visualize them by a bar chart, and show y-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis time y axis id, could you list ID from high to low order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Time and ID , and sort by the Y-axis from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , ID FROM swimmer ORDER BY ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , ID FROM swimmer ORDER BY ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the Time by a bar chart, and could you rank by the X-axis in ascending?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis time y axis meter_100, show by the names in asc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of Time and meter_100 , I want to display in asc by the X please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Time and meter_100 , and list by the X in ascending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Time and meter_100 , and I want to rank in asc by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC"}, "hardness": "Easy"}, {"nl_queries": "Find Time and meter_100 , and visualize them by a bar chart, could you rank by the X-axis in ascending?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the Time by a bar chart, and sort by the names from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Time and meter_100 , could you display in descending by the x-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Find Time and meter_100 , and visualize them by a bar chart, show by the X in descending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis time y axis meter_100, and display from high to low by the names.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of Time and meter_100 , and could you order by the X in descending?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Time and meter_100 , list bars in descending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Time and meter_100 , and show in ascending by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Find Time and meter_100 , and visualize them by a bar chart, show in ascending by the Y.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Time and meter_100 , order Y from low to high order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the Time by a bar chart, show in ascending by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis time y axis meter_100, and I want to sort from low to high by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of Time and meter_100 , I want to display in asc by the y axis please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis time y axis meter_100, and show by the y axis from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Time and meter_100 , and show meter_100 from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Find Time and meter_100 , and visualize them by a bar chart, list in desc by the y axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about meter_100 over the Time by a bar chart, and could you rank from high to low by the total number?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Time and meter_100 , and sort Y-axis from high to low order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of Time and meter_100 , and rank total number from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, could you sort in asc by the X-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and order x-axis in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart, and could you show names in asc order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and order x-axis in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis how many nationality, could you display in asc by the bars?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality, and show in ascending by the X-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and display by the bars in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart, display by the bars in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis how many nationality, and sort in desc by the bar.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list by the bars in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list by the bars in desc.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality, show in descending by the bar.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, could you order by the total number from low to high?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis how many nationality, could you list by the y axis in ascending?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list Y-axis in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart, and show by the how many nationality from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality, could you list by the y axis in ascending?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and list Y-axis in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart, and I want to rank by the how many nationality from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis nationality y axis how many nationality, and list in descending by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list y axis from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and list in descending by the Y-axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and I want to rank by the how many nationality from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality, and rank total number from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart, order bars in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of meter_200 over the meter_200 , and group by attribute meter_200, and could you display by the X in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and sort names in asc order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the number of meter 200 across meter 200, and could you display by the X in asc?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, show in ascending by the bar.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and order from low to high by the bars.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the number of meter 200 across meter 200, and display x-axis from high to low order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and rank by the x-axis in descending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of meter_200 over the meter_200 , and group by attribute meter_200, sort from high to low by the meter_200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, and rank by the x-axis in descending please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart, I want to display meter_200 in descending order please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and list by the bar in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, sort by the total number in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and order by the Y-axis in asc please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart, I want to sort the number of meter 200 in ascending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, display by the the number of meter 200 in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of meter_200 over the meter_200 , and group by attribute meter_200, I want to rank by the y-axis in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the number of meter 200 across meter 200, and rank by the Y from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and order in descending by the total number please.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of meter_200 over the meter_200 , and group by attribute meter_200, rank by the total number in descending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the number of meter 200 across meter 200, and I want to show Y-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and I want to rank from high to low by the the number of meter 200.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart, I want to show Y-axis in descending order.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, rank in desc by the total number.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of the names of stadiums that some Australian swimmers have been to, could you rank from low to high by the X-axis?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to, list by the name in ascending.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart, and order by the X from low to high.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the names of stadiums that some Australian swimmers have been to, and list in descending by the x axis.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart, and order from high to low by the bar.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to, list from high to low by the names.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart, could you display total number in ascending order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the names of stadiums that some Australian swimmers have been to, and show in ascending by the the number of name.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to, and could you display Y in asc order?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart, I want to show by the y-axis from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to, could you list by the total number from high to low?", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the number of the names of stadiums that some Australian swimmers have been to, I want to show by the y-axis from high to low.", "db_id": "swimming", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist in a pie chart.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"}, "hardness": "Medium"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist. ", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"}, "hardness": "Medium"}, {"nl_queries": "how many exhibitions has each artist had?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"}, "hardness": "Medium"}, {"nl_queries": "Display a pie chart for how many exhibitions has each artist had?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"}, "hardness": "Medium"}, {"nl_queries": "How many exhibitions has each artist had. Show the proportion.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id", "binning": ""}, "VQL": "Visualize PIE SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"}, "hardness": "Medium"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist in a bar chart.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"}, "hardness": "Medium"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist. Show bar chart.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"}, "hardness": "Medium"}, {"nl_queries": "how many exhibitions has each artist had?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many exhibitions has each artist had?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"}, "hardness": "Medium"}, {"nl_queries": "How many exhibitions has each artist had. Plot them as bar chart.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"}, "hardness": "Medium"}, {"nl_queries": "Find dates and attendance for exhibitions that happened in 2004, show me the proportion of attendance by date.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Date , Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004", "binning": ""}, "VQL": "Visualize PIE SELECT Date , Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004"}, "hardness": "Medium"}, {"nl_queries": "Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004"}, "hardness": "Medium"}, {"nl_queries": "Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004"}, "hardness": "Medium"}, {"nl_queries": "For artist names who are not from United States, show me a stacked that the x-axis is the Year_Join and the group by name in Y.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "For artist names who are not from the United States, how many names in each year?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name"}, "hardness": "Medium"}, {"nl_queries": "For all artist names who are not from the United States, show the total number of each year.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join"}, "hardness": "Easy"}, {"nl_queries": "For all artist names who are not from the United States, show the total number of each year with a bar chart.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join"}, "hardness": "Easy"}, {"nl_queries": "Show all countries with a pie chart.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "What is the proportion of the number of countries in the artist table?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart about the proportion of the number of countries in the artist table", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing how many country across country.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Compare all countries with a bar chart.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "What is the number of countries in the artist table?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart about the number of countries in the artist table", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Show how many country from each country", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Show the average of artists' age by country.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "What are the average ages of artists by countries? Visualize the result with a histogram.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Compare the average of artists' age by country in a bar graph.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis country y axis the average of age", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country"}, "hardness": "Easy"}, {"nl_queries": "Show all artist names and ages in a histogram.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist"}, "hardness": "Easy"}, {"nl_queries": "What are the names and ages of artists? Show the result in a bar graph.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist"}, "hardness": "Easy"}, {"nl_queries": "A bar chart compares the ages of all artists.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis name y axis age", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist"}, "hardness": "Easy"}, {"nl_queries": "Group by the theme and count the year with a stacked bar chart.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme"}, "hardness": "Easy"}, {"nl_queries": "Stacked bar of year and the number of year colored by Theme", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme"}, "hardness": "Easy"}, {"nl_queries": "Bin the Year into weekday interval, then group and count by Year.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Year", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Year"}, "hardness": "Easy"}, {"nl_queries": "Give a bar chart that bins year into weekday interval, group by year and count them.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Year", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Year"}, "hardness": "Easy"}, {"nl_queries": "Show me how many year by year in a histogram", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Year", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Year"}, "hardness": "Easy"}, {"nl_queries": "Find those themes and years for all exhibitions with ticket prices lower than 15, group by themes, count year, and the x-axis is Year.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme"}, "hardness": "Medium"}, {"nl_queries": "Find those themes and years for all exhibitions with ticket prices lower than 15, show me a stacked bar chart that groups by themes, counts year, and the x-axis is Year.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme"}, "hardness": "Medium"}, {"nl_queries": "Find those years for all exhibitions with ticket prices lower than 15, group by year, and count year.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year"}, "hardness": "Medium"}, {"nl_queries": "Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year"}, "hardness": "Medium"}, {"nl_queries": "how many exhibitions has each artist had?, I want to order by the bar in ascending.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist Show bar chart, display by the bar from low to high.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist in a bar chart, and show in asc by the bars.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "How many exhibitions has each artist had Plot them as bar chart, and I want to order by the bar in ascending.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on how many exhibitions has each artist had?, and display by the bar from low to high.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on how many exhibitions has each artist had?, list from high to low by the Name please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist in a bar chart, and list x axis in desc order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "how many exhibitions has each artist had?, and display from high to low by the X-axis please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "How many exhibitions has each artist had Plot them as bar chart, I want to order bar in desc order please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist Show bar chart, show X from high to low order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist in a bar chart, and show from low to high by the Y.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist Show bar chart, list total number from low to high order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "how many exhibitions has each artist had?, and could you order Y in ascending order?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on how many exhibitions has each artist had?, list total number from low to high order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many exhibitions has each artist had Plot them as bar chart, and list y axis in ascending order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "how many exhibitions has each artist had?, and rank in descending by the Y.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist in a bar chart, I want to order in descending by the total number.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "How many exhibitions has each artist had Plot them as bar chart, and display from high to low by the Y-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all artist names and the number of exhibitions for each artist Show bar chart, and display by the Y-axis in descending please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a histogram on how many exhibitions has each artist had?, and rank in descending by the Y.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, and rank in ascending by the X-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date ASC"}, "hardness": "Hard"}, {"nl_queries": "Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, I want to sort by the names in ascending.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date ASC"}, "hardness": "Hard"}, {"nl_queries": "Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, and could you show by the bars in desc?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date DESC"}, "hardness": "Hard"}, {"nl_queries": "Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, list names in descending order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date DESC"}, "hardness": "Hard"}, {"nl_queries": "Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, and order y axis from low to high order please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance ASC"}, "hardness": "Hard"}, {"nl_queries": "Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, show by the Y-axis in ascending.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance ASC"}, "hardness": "Hard"}, {"nl_queries": "Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, could you list y-axis in desc order?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance DESC"}, "hardness": "Hard"}, {"nl_queries": "Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, list from high to low by the Attendance.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance DESC"}, "hardness": "Hard"}, {"nl_queries": "For artist names who are not from United States, show me a stacked that the x-axis is the Year_Join and the group by name in Y, I want to rank y axis from low to high order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) ASC"}, "hardness": "Hard"}, {"nl_queries": "For artist names who are not from the United States, how many names in each year?, and show by the how many year join in asc.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) ASC"}, "hardness": "Hard"}, {"nl_queries": "For artist names who are not from the United States, how many names in each year?, and I want to sort by the y axis in descending.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) DESC"}, "hardness": "Hard"}, {"nl_queries": "For artist names who are not from United States, show me a stacked that the x-axis is the Year_Join and the group by name in Y, and order by the total number from high to low.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) DESC"}, "hardness": "Hard"}, {"nl_queries": "For all artist names who are not from the United States, show the total number of each year with a bar chart, I want to display Y-axis from low to high order please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) ASC"}, "hardness": "Medium"}, {"nl_queries": "For all artist names who are not from the United States, show the total number of each year, show in asc by the Y.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) ASC"}, "hardness": "Medium"}, {"nl_queries": "For all artist names who are not from the United States, show the total number of each year with a bar chart, could you order by the y axis in descending?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) DESC"}, "hardness": "Medium"}, {"nl_queries": "For all artist names who are not from the United States, show the total number of each year, and rank y axis in descending order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart about the number of countries in the artist table, and list by the Country in asc.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Show how many country from each country, and could you show by the bars from low to high?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare all countries with a bar chart, I want to order by the bars in asc.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of countries in the artist table?, I want to order by the bars in asc.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of countries in the artist table?, I want to order from high to low by the x-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart about the number of countries in the artist table, and could you display by the bars in descending?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Show how many country from each country, show bars in desc order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare all countries with a bar chart, could you display by the bars in descending?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart about the number of countries in the artist table, and show by the Y from low to high please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare all countries with a bar chart, and sort how many country in asc order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show how many country from each country, could you list by the Y from low to high?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of countries in the artist table?, I want to rank by the y-axis in ascending.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show how many country from each country, and display total number from high to low order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart about the number of countries in the artist table, and list total number in descending order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare all countries with a bar chart, display Y-axis in desc order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of countries in the artist table?, and I want to rank how many country in descending order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the average ages of artists by countries? Visualize the result with a histogram, display in ascending by the X-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the average of artists' age by country in a bar graph, and could you show Country from low to high order?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the average of artists' age by country, and I want to order by the X-axis in asc.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis country y axis the average of age, and I want to order by the Country in asc.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the average ages of artists by countries? Visualize the result with a histogram, order in descending by the X-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the average of artists' age by country in a bar graph, I want to sort by the X from high to low.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the average of artists' age by country, and I want to sort by the X from high to low.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis country y axis the average of age, and display by the names in desc.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the average ages of artists by countries? Visualize the result with a histogram, and I want to display in asc by the total number.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Compare the average of artists' age by country in a bar graph, could you rank in ascending by the total number?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the average of artists' age by country, I want to rank Y in ascending order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis country y axis the average of age, and I want to show by the y-axis in asc please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis country y axis the average of age, sort in desc by the y-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the average ages of artists by countries? Visualize the result with a histogram, sort in descending by the Y.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the average of artists' age by country, and sort in desc by the y-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "Compare the average of artists' age by country in a bar graph, rank by the Y-axis in descending.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the names and ages of artists? Show the result in a bar graph, and show x axis in asc order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis name y axis age, and display in ascending by the X-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Show all artist names and ages in a histogram, list from low to high by the bars.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Name ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart compares the ages of all artists, rank by the X from low to high.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Show all artist names and ages in a histogram, could you sort bar from high to low order?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis name y axis age, and I want to order from high to low by the bars.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Name DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart compares the ages of all artists, and rank in desc by the names.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Name DESC"}, "hardness": "Easy"}, {"nl_queries": "What are the names and ages of artists? Show the result in a bar graph, and I want to rank names in descending order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis name y axis age, and rank Y in asc order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Age ASC"}, "hardness": "Easy"}, {"nl_queries": "Show all artist names and ages in a histogram, rank Y in asc order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Age ASC"}, "hardness": "Easy"}, {"nl_queries": "What are the names and ages of artists? Show the result in a bar graph, and sort by the total number in ascending.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Age ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart compares the ages of all artists, sort by the total number in ascending.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Age ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis name y axis age, and show Age in desc order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Age DESC"}, "hardness": "Easy"}, {"nl_queries": "Show all artist names and ages in a histogram, list Y from high to low order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Age DESC"}, "hardness": "Easy"}, {"nl_queries": "What are the names and ages of artists? Show the result in a bar graph, list y axis in descending order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Age DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart compares the ages of all artists, I want to display in desc by the Y-axis please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM artist ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Age DESC"}, "hardness": "Easy"}, {"nl_queries": "Stacked bar of year and the number of year colored by Theme, and sort from low to high by the y-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) ASC"}, "hardness": "Medium"}, {"nl_queries": "Group by the theme and count the year with a stacked bar chart, I want to list by the the number of year from low to high.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) ASC"}, "hardness": "Medium"}, {"nl_queries": "Group by the theme and count the year with a stacked bar chart, and show from high to low by the the number of year please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) DESC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar of year and the number of year colored by Theme, display in desc by the Y-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me how many year by year in a histogram, could you display y axis in asc order?", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bin the Year into weekday interval, then group and count by Year, and I want to display by the how many year in ascending.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Give a bar chart that bins year into weekday interval, group by year and count them, and I want to sort in asc by the Y-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bin the Year into weekday interval, then group and count by Year, display Y-axis in desc order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Give a bar chart that bins year into weekday interval, group by year and count them, display in descending by the how many year.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show me how many year by year in a histogram, and I want to list Y-axis in desc order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Find those themes and years for all exhibitions with ticket prices lower than 15, show me a stacked bar chart that groups by themes, counts year, and the x-axis is Year, show by the Y from low to high.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find those themes and years for all exhibitions with ticket prices lower than 15, group by themes, count year, and the x-axis is Year, show from low to high by the y-axis.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find those themes and years for all exhibitions with ticket prices lower than 15, group by themes, count year, and the x-axis is Year, show y-axis in descending order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find those themes and years for all exhibitions with ticket prices lower than 15, show me a stacked bar chart that groups by themes, counts year, and the x-axis is Year, I want to show how many year in descending order.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years, and I want to display in ascending by the total number.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find those years for all exhibitions with ticket prices lower than 15, group by year, and count year, and order by the Y from low to high.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years, I want to list y axis from high to low order please.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find those years for all exhibitions with ticket prices lower than 15, group by year, and count year, and display by the the number of year from high to low.", "db_id": "theme_gallery", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) DESC"}, "hardness": "Hard"}, {"nl_queries": "For all organizations that have grants of more than 6000 dollars, show me the proportion of details of the organizations with a pie chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details", "binning": ""}, "VQL": "Visualize PIE SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details"}, "hardness": "Medium"}, {"nl_queries": "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details", "binning": ""}, "VQL": "Visualize BAR SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details"}, "hardness": "Medium"}, {"nl_queries": "Find the organisation ids and details of the organisations which are involved i. Plot them as bar chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "What are the ids and details for all organizations that have grants of more than 6000 dollars. ", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "Find the organisation ids and details of the organisations which are involved i. Visualize by bar chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "What are the ids and details for all organizations that have grants of more than 6000 dollars. Show bar chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "Find the organisation ids and details of the organisations which are involved i. Visualize by pie chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize PIE SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "Display a pie chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize PIE SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "A pie chart about what are the ids and details for all organizations that have grants of more than 6000 dollars?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize PIE SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "What are the ids and details for all organizations that have grants of more than 6000 dollars. Show a pie chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details", "binning": ""}, "VQL": "Visualize PIE SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details"}, "hardness": "Medium"}, {"nl_queries": "What are the descriptions of all the project outcomes, and count them by a pie chart", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize PIE SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "List the description of the outcomes for all projects, and count them by a pie chart", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize PIE SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "A pie chart for what are the number of the descriptions of all the project outcomes?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize PIE SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the descriptions of all the project outcomes?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize PIE SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "A pie chart for listing the number of the description of the outcomes for all projects.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize PIE SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "List the number of the description of the outcomes for all projects.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize PIE SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "List the description of the outcomes for all projects, and count them by a bar chart", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the descriptions of all the project outcomes?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the descriptions of all the project outcomes?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for listing the number of the description of the outcomes for all projects.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "What are the descriptions of all the project outcomes, and count them by a bar chart", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "List the number of the description of the outcomes for all projects.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"}, "hardness": "Medium"}, {"nl_queries": "What details are there on the research staff? List the result in ascending alphabetical order, and count them by a bar chart", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC"}, "hardness": "Medium"}, {"nl_queries": "List the number of the research staff details, and order in ascending order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for listing the number of the research staff details, and order in ascending order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC"}, "hardness": "Medium"}, {"nl_queries": "List the research staff details, and order in ascending order, and count them by a bar chart", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a scatter chart on what is the total amount of grants given by each organisations? Also list the organisation id.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id"}, "hardness": "Easy"}, {"nl_queries": "Scatter chart. what is the total amount of grants given by each organisations? Also list the organisation id.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id"}, "hardness": "Easy"}, {"nl_queries": "What is the total amount of grants given by each organisations? Also list the organisation id. ", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id"}, "hardness": "Easy"}, {"nl_queries": "Scatter chart. what is the total amount of grant money given to each organization and what is its id?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id"}, "hardness": "Easy"}, {"nl_queries": "plot scatter on what is the total amount of grant money given to each organization and what is its id?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id"}, "hardness": "Easy"}, {"nl_queries": "What is the total amount of grant money given to each organization and what is its id. Show the correlation.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id"}, "hardness": "Easy"}, {"nl_queries": "Plot a scatter chart, sum(grant amount) by organisation_id.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id"}, "hardness": "Easy"}, {"nl_queries": "When do all the researcher role staff start to work? Bin the time into weekday interval and count them with a bar chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff", "binning": "BIN date_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Plot how many date from by grouped by date from as a bar graph", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff", "binning": "BIN date_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "When do all the researcher role staff stop working? Bin the time into weekday interval and count them with a bar chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff", "binning": "BIN date_to BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Plot how many date to by grouped by date to as a bar graph", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff", "binning": "BIN date_to BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "When do all the researcher role staff start to work? Bin the time into YEAR interval and count them with a line chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff", "binning": "BIN date_from BY YEAR"}, "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Give me the trend about the date_from attributes of all researchers, and bin the date into Year interval.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff", "binning": "BIN date_from BY YEAR"}, "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Can you draw the trend of how many date from over the date from?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff", "binning": "BIN date_from BY YEAR"}, "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "When do all the researcher role staff stop working? Bin the time into YEAR interval and count them with a line chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff", "binning": "BIN date_to BY YEAR"}, "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Give me the trend about the date_to attributes of all researchers, and bin the date_to into Year interval.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff", "binning": "BIN date_to BY YEAR"}, "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Plot date to by the number of date to as a trend line", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff", "binning": "BIN date_to BY YEAR"}, "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Scatter chart. how many staff does each project has? List the project id and the number in an ascending order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": " how many staff does each project has? List the project id and the number in an ascending order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many staff does each project has? List the project id and the number in an ascending order with a scatter chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "How many staff does each project has? List the project id and the number in an ascending order. Visualize by scatter chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "For each project id, how many staff does it have? List them in increasing order. Show scatter chart.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize SCATTER SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, display in asc by the bars.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY organisation_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY organisation_details ASC"}, "hardness": "Hard"}, {"nl_queries": "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, and I want to list by the bar in desc.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY organisation_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY organisation_details DESC"}, "hardness": "Hard"}, {"nl_queries": "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, display y-axis in ascending order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY COUNT(organisation_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY COUNT(organisation_details) ASC"}, "hardness": "Hard"}, {"nl_queries": "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, order by the y axis in descending.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY COUNT(organisation_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY COUNT(organisation_details) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the ids and details for all organizations that have grants of more than 6000 dollars, rank X from low to high order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the organisation ids and details of the organisations which are involved i Plot them as bar chart, show bars from low to high order please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC"}, "hardness": "Hard"}, {"nl_queries": "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and I want to display by the X-axis in ascending.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and order from low to high by the organisation_details.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the ids and details for all organizations that have grants of more than 6000 dollars, and I want to order by the bars in descending.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the organisation ids and details of the organisations which are involved i Plot them as bar chart, list bar in desc order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC"}, "hardness": "Hard"}, {"nl_queries": "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and display in descending by the x-axis.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, could you order by the X from high to low?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the ids and details for all organizations that have grants of more than 6000 dollars, list total number from low to high order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and order in asc by the y axis.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC"}, "hardness": "Hard"}, {"nl_queries": "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, could you show in asc by the Y?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the organisation ids and details of the organisations which are involved i Plot them as bar chart, and list from low to high by the Y.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the organisation ids and details of the organisations which are involved i Plot them as bar chart, rank total number in desc order please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the ids and details for all organizations that have grants of more than 6000 dollars, and rank by the Y in desc.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC"}, "hardness": "Hard"}, {"nl_queries": "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, could you list by the Y from high to low?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC"}, "hardness": "Hard"}, {"nl_queries": "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, rank total number in desc order please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, rank in asc by the X please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the organisation ids and details of the organisations which are involved i Visualize by bar chart, and sort in ascending by the organisation_details.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and order in asc by the organisation_details.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and sort bar from low to high order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the organisation ids and details of the organisations which are involved i Visualize by bar chart, list by the x axis in descending.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, and sort by the names from high to low.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, list from high to low by the x axis.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and sort by the names from high to low.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and I want to list mean organisation id in asc order please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, I want to show in asc by the Y.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the organisation ids and details of the organisations which are involved i Visualize by bar chart, I want to show in asc by the Y.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and I want to show in asc by the Y.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the organisation ids and details of the organisations which are involved i Visualize by bar chart, and I want to rank total number from high to low order please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC"}, "hardness": "Hard"}, {"nl_queries": "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, and sort by the Y-axis from high to low.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, could you sort y axis in desc order?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and could you order in descending by the total number?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the descriptions of all the project outcomes?, and I want to show by the bar in ascending.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the descriptions of all the project outcomes?, list from low to high by the X.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the descriptions of all the project outcomes, and count them by a bar chart, and rank bars from low to high order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of the description of the outcomes for all projects, and show by the X-axis in ascending.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC"}, "hardness": "Hard"}, {"nl_queries": "List the description of the outcomes for all projects, and count them by a bar chart, rank bars from low to high order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for listing the number of the description of the outcomes for all projects, and could you list by the X in asc?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the descriptions of all the project outcomes?, and sort in descending by the names.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the descriptions of all the project outcomes, and count them by a bar chart, show X in desc order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the descriptions of all the project outcomes?, and show X in desc order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC"}, "hardness": "Hard"}, {"nl_queries": "List the description of the outcomes for all projects, and count them by a bar chart, and display in descending by the bars.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC"}, "hardness": "Hard"}, {"nl_queries": "List the number of the description of the outcomes for all projects, sort by the names in desc.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for listing the number of the description of the outcomes for all projects, and could you display from high to low by the x axis?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC"}, "hardness": "Hard"}, {"nl_queries": "List the number of the description of the outcomes for all projects, and could you sort in ascending by the y axis?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the descriptions of all the project outcomes, and count them by a bar chart, I want to rank y axis in ascending order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the descriptions of all the project outcomes?, I want to rank y axis in ascending order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for listing the number of the description of the outcomes for all projects, could you sort in ascending by the y axis?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the descriptions of all the project outcomes?, and could you display in ascending by the Y please?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the description of the outcomes for all projects, and count them by a bar chart, and list from low to high by the the number of outcome description please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of the description of the outcomes for all projects, and list in desc by the the number of outcome description.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC"}, "hardness": "Hard"}, {"nl_queries": "List the description of the outcomes for all projects, and count them by a bar chart, could you list from high to low by the Y-axis?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the descriptions of all the project outcomes?, and could you list y-axis in desc order?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the descriptions of all the project outcomes?, and show Y-axis from high to low order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the descriptions of all the project outcomes, and count them by a bar chart, and could you list from high to low by the Y-axis?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for listing the number of the description of the outcomes for all projects, rank in desc by the Y please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC"}, "hardness": "Hard"}, {"nl_queries": "When do all the researcher role staff start to work? Bin the time into weekday interval and count them with a bar chart, I want to list in asc by the Y-axis please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) ASC", "binning": "BIN date_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) ASC BIN date_from BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Plot how many date from by grouped by date from as a bar graph, list Y in asc order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) ASC", "binning": "BIN date_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) ASC BIN date_from BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Plot how many date from by grouped by date from as a bar graph, and I want to list in descending by the total number.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) DESC", "binning": "BIN date_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) DESC BIN date_from BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "When do all the researcher role staff start to work? Bin the time into weekday interval and count them with a bar chart, and display from high to low by the y axis.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) DESC", "binning": "BIN date_from BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) DESC BIN date_from BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "When do all the researcher role staff stop working? Bin the time into weekday interval and count them with a bar chart, order by the the number of date to in asc.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) ASC", "binning": "BIN date_to BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) ASC BIN date_to BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Plot how many date to by grouped by date to as a bar graph, and list Y from low to high order please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) ASC", "binning": "BIN date_to BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) ASC BIN date_to BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Plot how many date to by grouped by date to as a bar graph, I want to sort y axis in desc order please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) DESC", "binning": "BIN date_to BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) DESC BIN date_to BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "When do all the researcher role staff stop working? Bin the time into weekday interval and count them with a bar chart, and I want to show y-axis in descending order please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) DESC", "binning": "BIN date_to BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) DESC BIN date_to BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Can you draw the trend of how many date from over the date from?, and display in ascending by the X.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from ASC", "binning": "BIN date_from BY YEAR"}, "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from ASC BIN date_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Give me the trend about the date_from attributes of all researchers, and bin the date into Year interval, order from low to high by the date_from please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from ASC", "binning": "BIN date_from BY YEAR"}, "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from ASC BIN date_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "When do all the researcher role staff start to work? Bin the time into YEAR interval and count them with a line chart, and order from low to high by the date_from please.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from ASC", "binning": "BIN date_from BY YEAR"}, "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from ASC BIN date_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "When do all the researcher role staff start to work? Bin the time into YEAR interval and count them with a line chart, and rank X from high to low order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from DESC", "binning": "BIN date_from BY YEAR"}, "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from DESC BIN date_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Give me the trend about the date_from attributes of all researchers, and bin the date into Year interval, rank by the x axis in desc.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from DESC", "binning": "BIN date_from BY YEAR"}, "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from DESC BIN date_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Can you draw the trend of how many date from over the date from?, I want to rank in desc by the X-axis.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from DESC", "binning": "BIN date_from BY YEAR"}, "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from DESC BIN date_from BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Plot date to by the number of date to as a trend line, I want to show by the X in asc.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC", "binning": "BIN date_to BY YEAR"}, "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC BIN date_to BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "When do all the researcher role staff stop working? Bin the time into YEAR interval and count them with a line chart, and rank X in asc order.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC", "binning": "BIN date_to BY YEAR"}, "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC BIN date_to BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Give me the trend about the date_to attributes of all researchers, and bin the date_to into Year interval, display by the x-axis from low to high.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC", "binning": "BIN date_to BY YEAR"}, "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC BIN date_to BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "When do all the researcher role staff stop working? Bin the time into YEAR interval and count them with a line chart, and could you show by the X in desc?", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC", "binning": "BIN date_to BY YEAR"}, "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC BIN date_to BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Plot date to by the number of date to as a trend line, and sort by the x-axis from high to low.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC", "binning": "BIN date_to BY YEAR"}, "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC BIN date_to BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Give me the trend about the date_to attributes of all researchers, and bin the date_to into Year interval, I want to rank in descending by the X.", "db_id": "tracking_grants_for_research", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC", "binning": "BIN date_to BY YEAR"}, "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to DESC BIN date_to BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Compute the proportion of names of each product by a pie chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_name , COUNT(product_name) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY product_name", "binning": ""}, "VQL": "Visualize PIE SELECT product_name , COUNT(product_name) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY product_name"}, "hardness": "Medium"}, {"nl_queries": "For each product, show its proportion of the name with a pie chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT product_name , COUNT(product_name) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY product_name", "binning": ""}, "VQL": "Visualize PIE SELECT product_name , COUNT(product_name) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY product_name"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of names of each product by a bar chart.\n", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_name , COUNT(product_name) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY product_name", "binning": ""}, "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY product_name"}, "hardness": "Medium"}, {"nl_queries": "For each product, show the frequency of the name with a bar chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT product_name , COUNT(product_name) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY product_name", "binning": ""}, "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY product_name"}, "hardness": "Medium"}, {"nl_queries": "List the name and count of each product in all orders with a bar chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name", "binning": ""}, "VQL": "Visualize BAR SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name"}, "hardness": "Medium"}, {"nl_queries": "List the name and count of each product in all orders. ", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name", "binning": ""}, "VQL": "Visualize BAR SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name"}, "hardness": "Medium"}, {"nl_queries": "For each product, show its name and the number of times it was ordered. Plot them as bar chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name", "binning": ""}, "VQL": "Visualize BAR SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name"}, "hardness": "Medium"}, {"nl_queries": "List the name and count of each product in all orders with a bar chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.product_name , AVG(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name", "binning": ""}, "VQL": "Visualize BAR SELECT T3.product_name , AVG(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name"}, "hardness": "Medium"}, {"nl_queries": "List the name and count of each product in all orders. ", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.product_name , AVG(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name", "binning": ""}, "VQL": "Visualize BAR SELECT T3.product_name , AVG(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name"}, "hardness": "Medium"}, {"nl_queries": "For each product, show its name and the number of times it was ordered. Plot them as bar chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T3.product_name , AVG(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name", "binning": ""}, "VQL": "Visualize BAR SELECT T3.product_name , AVG(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name"}, "hardness": "Medium"}, {"nl_queries": "List the name and count of each product in all orders with a pie chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name", "binning": ""}, "VQL": "Visualize PIE SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name"}, "hardness": "Medium"}, {"nl_queries": "List the name and count of each product in all orders. Plot them as pie chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name", "binning": ""}, "VQL": "Visualize PIE SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name"}, "hardness": "Medium"}, {"nl_queries": "For each product, show its name and the number of times it was ordered. Show the proportion.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name", "binning": ""}, "VQL": "Visualize PIE SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name"}, "hardness": "Medium"}, {"nl_queries": "For each customer who has at least two orders, find the customer name and number of orders made. Show a pie chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT customer_name , count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id", "binning": ""}, "VQL": "Visualize PIE SELECT customer_name , count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id"}, "hardness": "Medium"}, {"nl_queries": "For each customer who has at least two orders, find the customer name and number of orders made. Visualize by bar chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT customer_name , count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id", "binning": ""}, "VQL": "Visualize BAR SELECT customer_name , count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id"}, "hardness": "Medium"}, {"nl_queries": "What is the placement date of the order whose invoice number is 10, and count them by a bar chart", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10", "binning": "BIN date_order_placed BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_order_placed , COUNT(date_order_placed) FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10 BIN date_order_placed BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "On what day was the order with invoice number 10 placed, and count them by a bar chart", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10", "binning": "BIN date_order_placed BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_order_placed , COUNT(date_order_placed) FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10 BIN date_order_placed BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "On what day was the order with invoice number 10 placed, and count them by a line chart", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10", "binning": "BIN date_order_placed BY YEAR"}, "VQL": "Visualize LINE SELECT date_order_placed , COUNT(date_order_placed) FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10 BIN date_order_placed BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "What is the placement date of the order whose invoice number is 10, and count them by a line chart", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10", "binning": "BIN date_order_placed BY YEAR"}, "VQL": "Visualize LINE SELECT date_order_placed , COUNT(date_order_placed) FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10 BIN date_order_placed BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for finding the number of the dates of orders which belong to the customer named \"Jeramie\".", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What are the dates of the orders made by the customer named \"Jeramie\", and count them by a bar chart", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Find the number of the dates of orders which belong to the customer named \"Jeramie\".", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the dates of the orders made by the customer named \"Jeramie\"?", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the dates of the orders made by the customer named \"Jeramie\"?", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Find the dates of orders which belong to the customer named \"Jeramie\", and count them by a bar chart", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What are the dates of the orders made by the customer named \"Jeramie\", and count them by a line chart", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY YEAR"}, "VQL": "Visualize LINE SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "A line chart for finding the number of the dates of orders which belong to the customer named \"Jeramie\".", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY YEAR"}, "VQL": "Visualize LINE SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "A line chart for what are the number of the dates of the orders made by the customer named \"Jeramie\"?", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY YEAR"}, "VQL": "Visualize LINE SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Find the dates of orders which belong to the customer named \"Jeramie\", and count them by a line chart", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY YEAR"}, "VQL": "Visualize LINE SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Find the number of the dates of orders which belong to the customer named \"Jeramie\".", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY YEAR"}, "VQL": "Visualize LINE SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the dates of the orders made by the customer named \"Jeramie\"?", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "binning": "BIN date_order_placed BY YEAR"}, "VQL": "Visualize LINE SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" BIN date_order_placed BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "List the count and id of each product in all the orders with a scatter chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , T2.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , T2.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"}, "hardness": "Medium"}, {"nl_queries": "List the count and id of each product in all the orders. ", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , T2.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , T2.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"}, "hardness": "Medium"}, {"nl_queries": "For each product, return its id and the number of times it was ordered. Show the correlation.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , T2.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , T2.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"}, "hardness": "Medium"}, {"nl_queries": "Find the status of orders which belong to the customer named \"Jeramie\", group by order status, and count them. Show the result with a bar chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.order_status , COUNT(T2.order_status) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" GROUP BY order_status", "binning": ""}, "VQL": "Visualize BAR SELECT T2.order_status , COUNT(T2.order_status) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" GROUP BY order_status"}, "hardness": "Hard"}, {"nl_queries": "Find the status of orders which belong to the customer named \"Jeramie\", group by order status, and count them. Show the result with a pie chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.order_status , COUNT(T2.order_status) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" GROUP BY order_status", "binning": ""}, "VQL": "Visualize PIE SELECT T2.order_status , COUNT(T2.order_status) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" GROUP BY order_status"}, "hardness": "Hard"}, {"nl_queries": "Find the status of orders which belong to the customer named \"Jeramie\", group by order status, and show the proportion of order status with a pie chart.", "db_id": "tracking_orders", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T2.order_status , COUNT(T2.order_status) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" GROUP BY order_status", "binning": ""}, "VQL": "Visualize PIE SELECT T2.order_status , COUNT(T2.order_status) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" GROUP BY order_status"}, "hardness": "Hard"}, {"nl_queries": "Show the average share count of transactions each each investor, ordered by average share count in a scatter chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)"}, "hardness": "Medium"}, {"nl_queries": "Show the average share count of transactions each each investor, ordered by average share count. Visualize by scatter chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)"}, "hardness": "Medium"}, {"nl_queries": "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval. Show the result with a grouping line chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10 BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show all dates of transactions whose type code is \"SALE\", and count them by a bar chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\" BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show all dates of transactions whose type code is \"SALE\", and count them by a line chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\" BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show the average amount of transactions for different lots in a scatter chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id"}, "hardness": "Medium"}, {"nl_queries": "Show the average amount of transactions for different lots. Show the correlation.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id"}, "hardness": "Medium"}, {"nl_queries": "Show the average share count of transactions for different investors with a scatter chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id"}, "hardness": "Easy"}, {"nl_queries": "Show the average share count of transactions for different investors. Plot them as scatter chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id"}, "hardness": "Easy"}, {"nl_queries": "Show me a scatter plot of investor id and mean share count for .", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id"}, "hardness": "Easy"}, {"nl_queries": "Return the lot details, group the lot details, and compute the number of each lot details.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details"}, "hardness": "Easy"}, {"nl_queries": "A bar chart groups the lot details, and computes the number of each lot details.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis lot details y axis the number of lot details", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details"}, "hardness": "Easy"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" with a pie chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\"", "binning": ""}, "VQL": "Visualize PIE SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\""}, "hardness": "Medium"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\". Show a pie chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\"", "binning": ""}, "VQL": "Visualize PIE SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\""}, "hardness": "Medium"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" by a bar chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\"", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\""}, "hardness": "Medium"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\". Plot them as bar chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\"", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\""}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a bar chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a line chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Return the number of the lot details of lots that belong to investors with details \"l\"?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details", "binning": ""}, "VQL": "Visualize PIE SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details"}, "hardness": "Hard"}, {"nl_queries": "A pie chart for returning the number of the lot details of lots that belong to investors with details \"l\"?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details", "binning": ""}, "VQL": "Visualize PIE SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details"}, "hardness": "Hard"}, {"nl_queries": "Return the lot details of lots that belong to investors with details \"l\", and count them by a pie chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details", "binning": ""}, "VQL": "Visualize PIE SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for returning the number of the lot details of lots that belong to investors with details \"l\"?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details"}, "hardness": "Hard"}, {"nl_queries": "Return the number of the lot details of lots that belong to investors with details \"l\"?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details"}, "hardness": "Hard"}, {"nl_queries": "Return the lot details of lots that belong to investors with details \"l\", and count them by a bar chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details"}, "hardness": "Hard"}, {"nl_queries": "Show all investor details, and count them by a bar chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details"}, "hardness": "Easy"}, {"nl_queries": "Plot the number of investor details by grouped by investor details as a bar graph", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details"}, "hardness": "Easy"}, {"nl_queries": "Show the number of transactions for different investors with a scatter chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , COUNT(*) FROM TRANSACTIONS GROUP BY investor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , COUNT(*) FROM TRANSACTIONS GROUP BY investor_id"}, "hardness": "Easy"}, {"nl_queries": "Show the number of transactions for different investors. Plot them as scatter chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , COUNT(*) FROM TRANSACTIONS GROUP BY investor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , COUNT(*) FROM TRANSACTIONS GROUP BY investor_id"}, "hardness": "Easy"}, {"nl_queries": "Show me a scatter plot of investor id and the total number for .", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , COUNT(*) FROM TRANSACTIONS GROUP BY investor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , COUNT(*) FROM TRANSACTIONS GROUP BY investor_id"}, "hardness": "Easy"}, {"nl_queries": "Show the average transaction amount for different transaction types with a pie chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code", "binning": ""}, "VQL": "Visualize PIE SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code"}, "hardness": "Easy"}, {"nl_queries": "Show the average transaction amount for different transaction types. Visualize by pie chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code", "binning": ""}, "VQL": "Visualize PIE SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code"}, "hardness": "Easy"}, {"nl_queries": "Compute the total the average of amount of transaction across transaction type code as a pie chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code", "binning": ""}, "VQL": "Visualize PIE SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code"}, "hardness": "Easy"}, {"nl_queries": "Show the average transaction amount for different transaction types with a bar chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code"}, "hardness": "Easy"}, {"nl_queries": "Show the average transaction amount for different transaction types. ", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing mean amount of transaction across transaction type code", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code"}, "hardness": "Easy"}, {"nl_queries": "Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart that bin all date of transactions into the weekday interval and the y-axis is their total number.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for how many date of transaction of each date of transaction", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Bin all date of transactions into the weekday interval, and the total number of each bin, and then show me the trend.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS BIN date_of_transaction BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Give me a line chart, that bins all date of transactions into the weekday interval, and the count for each bin.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS BIN date_of_transaction BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Plot how many date of transaction over date of transaction in a line chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS BIN date_of_transaction BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Bin all date of transactions into the weekday interval, and sum the share count of each bin. Return the result using a bar chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show sum share count from different date of transaction", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Bin all date of transactions into the weekday interval, and compute the average of the share count for each bin. Return the result using a bar chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis date of transaction y axis mean share count", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and sum the share count of each bin. Return the result using a line chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and sum the share count of each bin. What is the trend?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Visualize the general trend of sum share count over the date of transaction.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and calculate the average the share count for each bin. Visualize the result using a trend line.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and give the average of the share count for each bin. What is the trend?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Plot date of transaction by mean share count as a trend line", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS BIN date_of_transaction BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Show the average amount of transactions for different investors with a scatter chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id"}, "hardness": "Easy"}, {"nl_queries": "Show the average amount of transactions for different investors. Plot them as scatter chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id"}, "hardness": "Easy"}, {"nl_queries": "Plot a scatter chart, investor id by mean amount of transaction.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id"}, "hardness": "Easy"}, {"nl_queries": "Find the data about the sale details and dates of transactions with amount smaller than 3000? Bin the date of the transaction into a weekday interval and compute the total number of each day with a bar chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 BIN date_of_transaction BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details", "binning": ""}, "VQL": "Visualize BAR SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details"}, "hardness": "Hard"}, {"nl_queries": "For the dates of transactions with amount smaller than 3000, bin the date into year interval,  and draw a line chart to show the trend of the number of records in each bin.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a bar chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a line chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000 BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show the id and details for the investors who have the top 3 number of transactions in a pie chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3", "binning": ""}, "VQL": "Visualize PIE SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3"}, "hardness": "Hard"}, {"nl_queries": "Show the id and details for the investors who have the top 3 number of transactions. Show the proportion.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3", "binning": ""}, "VQL": "Visualize PIE SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3"}, "hardness": "Hard"}, {"nl_queries": "Show the id and details for the investors who have the top 3 number of transactions by a bar chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3"}, "hardness": "Hard"}, {"nl_queries": "Show the id and details for the investors who have the top 3 number of transactions. Show bar chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3"}, "hardness": "Hard"}, {"nl_queries": "What are the purchase details of transactions with amount bigger than 10000, and count them by a pie chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details", "binning": ""}, "VQL": "Visualize PIE SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details"}, "hardness": "Hard"}, {"nl_queries": "A pie chart for what are the number of the purchase details of transactions with amount bigger than 10000?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details", "binning": ""}, "VQL": "Visualize PIE SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the purchase details of transactions with amount bigger than 10000?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details", "binning": ""}, "VQL": "Visualize PIE SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the purchase details of transactions with amount bigger than 10000?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details"}, "hardness": "Hard"}, {"nl_queries": "What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details"}, "hardness": "Hard"}, {"nl_queries": "Show the average amount of transactions for different lots, ordered by average amount of transactions by a scatter chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)", "binning": ""}, "VQL": "Visualize SCATTER SELECT lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)"}, "hardness": "Hard"}, {"nl_queries": "Show the average amount of transactions for different lots, ordered by average amount of transactions. Show scatter chart.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)", "binning": ""}, "VQL": "Visualize SCATTER SELECT lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)"}, "hardness": "Hard"}, {"nl_queries": "Show the number of transactions with transaction type code \"SALE\" for different investors if it is larger than 0 in a scatter chart", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\" GROUP BY investor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\" GROUP BY investor_id"}, "hardness": "Medium"}, {"nl_queries": "Show the number of transactions with transaction type code \"SALE\" for different investors if it is larger than 0. Show the correlation.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT investor_id , COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\" GROUP BY investor_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT investor_id , COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\" GROUP BY investor_id"}, "hardness": "Medium"}, {"nl_queries": "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval, I want to order by the total number from low to high please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval, I want to display y axis from high to low order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, order by the x axis in ascending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, sort date_of_transaction from low to high order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, and order by the x axis in descending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, and could you sort from high to low by the X-axis?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart, and list in ascending by the x axis please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart, order X from low to high order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart, could you sort X from high to low order?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart, and I want to show by the x axis in desc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show all dates of transactions whose type code is \"SALE\", and count them by a bar chart, and I want to sort by the y-axis in asc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"  ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show all dates of transactions whose type code is \"SALE\", and count them by a bar chart, I want to order by the Y-axis in descending please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show all dates of transactions whose type code is \"SALE\", and count them by a line chart, show from low to high by the x-axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show all dates of transactions whose type code is \"SALE\", and count them by a line chart, order by the X from low to high.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show all dates of transactions whose type code is \"SALE\", and count them by a line chart, and display by the x-axis from high to low.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Show all dates of transactions whose type code is \"SALE\", and count them by a line chart, and list x axis from high to low order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Return the lot details, group the lot details, and compute the number of each lot details, list X-axis from low to high order please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart groups the lot details, and computes the number of each lot details, I want to display x axis in ascending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis lot details y axis the number of lot details, and sort by the names in asc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis lot details y axis the number of lot details, could you show x-axis in descending order?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart groups the lot details, and computes the number of each lot details, could you rank bar from high to low order?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the lot details, group the lot details, and compute the number of each lot details, and could you show x-axis in descending order?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart groups the lot details, and computes the number of each lot details, and list y axis in asc order please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the lot details, group the lot details, and compute the number of each lot details, and show y-axis in ascending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis lot details y axis the number of lot details, rank in ascending by the total number.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart groups the lot details, and computes the number of each lot details, and list by the how many lot details in desc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis lot details y axis the number of lot details, and list by the Y-axis in desc please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the lot details, group the lot details, and compute the number of each lot details, list in desc by the y-axis please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" Plot them as bar chart, I want to rank by the bar in ascending please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.Investor_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.Investor_details ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" by a bar chart, list by the X-axis from low to high.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.Investor_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.Investor_details ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" Plot them as bar chart, and list in desc by the Investor_details please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.Investor_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.Investor_details DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" by a bar chart, rank in descending by the bar.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.Investor_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.Investor_details DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" Plot them as bar chart, order total number in asc order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.investor_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.investor_id ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" by a bar chart, and could you rank from low to high by the y-axis?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.investor_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.investor_id ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" by a bar chart, list from high to low by the Y.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.investor_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.investor_id DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" Plot them as bar chart, sort in desc by the y-axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.investor_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" ORDER BY T1.investor_id DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, I want to display Y-axis in ascending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a bar chart, and I want to display Y-axis in ascending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, order by the Y in ascending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a bar chart, and order in desc by the the number of date of transaction.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and sort by the Y from high to low.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and show total number in desc order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a line chart, and could you rank by the X from low to high?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and could you display by the date_of_transaction in ascending?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and display by the date_of_transaction in asc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, could you order date_of_transaction from high to low order please?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a line chart, and I want to display by the x-axis in desc please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and sort from high to low by the X-axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Return the lot details of lots that belong to investors with details \"l\", and count them by a bar chart, order by the lot_details in ascending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for returning the number of the lot details of lots that belong to investors with details \"l\"?, display by the X in asc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return the number of the lot details of lots that belong to investors with details \"l\"?, and order by the lot_details in ascending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return the number of the lot details of lots that belong to investors with details \"l\"?, and show in desc by the x axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for returning the number of the lot details of lots that belong to investors with details \"l\"?, could you sort by the x-axis from high to low?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return the lot details of lots that belong to investors with details \"l\", and count them by a bar chart, and I want to rank by the bar in descending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return the lot details of lots that belong to investors with details \"l\", and count them by a bar chart, and order in ascending by the Y-axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for returning the number of the lot details of lots that belong to investors with details \"l\"?, and I want to list in ascending by the y axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return the number of the lot details of lots that belong to investors with details \"l\"?, sort total number in asc order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return the number of the lot details of lots that belong to investors with details \"l\"?, and order in desc by the y axis please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for returning the number of the lot details of lots that belong to investors with details \"l\"?, I want to rank by the how many lot details in descending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Return the lot details of lots that belong to investors with details \"l\", and count them by a bar chart, and could you list in descending by the y-axis?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY COUNT(lot_details) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show all investor details, and count them by a bar chart, and sort from low to high by the x axis please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY Investor_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY Investor_details ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of investor details by grouped by investor details as a bar graph, and order in ascending by the bar.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY Investor_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY Investor_details ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of investor details by grouped by investor details as a bar graph, sort in desc by the x-axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY Investor_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY Investor_details DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all investor details, and count them by a bar chart, sort bars from high to low order please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY Investor_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY Investor_details DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all investor details, and count them by a bar chart, and order by the Y-axis in ascending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of investor details by grouped by investor details as a bar graph, list in ascending by the total number.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all investor details, and count them by a bar chart, I want to rank from high to low by the how many investor details please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of investor details by grouped by investor details as a bar graph, display Y from high to low order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing mean amount of transaction across transaction type code, display by the transaction_type_code in asc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the average transaction amount for different transaction types, show in ascending by the X-axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the average transaction amount for different transaction types with a bar chart, and I want to sort by the x-axis in ascending please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing mean amount of transaction across transaction type code, rank in descending by the x axis please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the average transaction amount for different transaction types, and I want to list in descending by the x-axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the average transaction amount for different transaction types with a bar chart, I want to list in descending by the x-axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing mean amount of transaction across transaction type code, rank Y-axis in asc order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the average transaction amount for different transaction types with a bar chart, sort from low to high by the y axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the average transaction amount for different transaction types, I want to display by the total number in ascending please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the average transaction amount for different transaction types with a bar chart, and I want to display Y in descending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing mean amount of transaction across transaction type code, I want to display Y in descending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the average transaction amount for different transaction types, order by the y axis from high to low please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart, sort X in asc order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details ORDER BY Investor_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details ORDER BY Investor_details ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart, rank names from high to low order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details ORDER BY Investor_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details ORDER BY Investor_details DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart, and I want to order by the Y in ascending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details ORDER BY COUNT(Investor_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details ORDER BY COUNT(Investor_details) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart, I want to show by the y-axis from high to low.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details ORDER BY COUNT(Investor_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details ORDER BY COUNT(Investor_details) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me a bar chart for how many date of transaction of each date of transaction, and display by the the number of date of transaction in ascending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart that bin all date of transactions into the weekday interval and the y-axis is their total number, and show y-axis in ascending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart that bin all date of transactions into the weekday interval and the y-axis is their total number, and order by the y-axis in desc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for how many date of transaction of each date of transaction, and order by the y-axis in desc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the weekday interval, and the total number of each bin, and then show me the trend, and list in asc by the X.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Plot how many date of transaction over date of transaction in a line chart, I want to order X from low to high order please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Give me a line chart, that bins all date of transactions into the weekday interval, and the count for each bin, and list in asc by the X.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the weekday interval, and the total number of each bin, and then show me the trend, display by the date_of_transaction in desc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Plot how many date of transaction over date of transaction in a line chart, and list X-axis from high to low order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Give me a line chart, that bins all date of transactions into the weekday interval, and the count for each bin, order in desc by the date_of_transaction.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show sum share count from different date of transaction, and could you rank Y from low to high order?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the weekday interval, and sum the share count of each bin Return the result using a bar chart, order in asc by the total number of share count please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the weekday interval, and sum the share count of each bin Return the result using a bar chart, list in descending by the y axis please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show sum share count from different date of transaction, and rank total number in descending order please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the weekday interval, and compute the average of the share count for each bin Return the result using a bar chart, show in ascending by the total number please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis date of transaction y axis mean share count, and could you list by the Y in asc?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the weekday interval, and compute the average of the share count for each bin Return the result using a bar chart, and show by the Y in descending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis date of transaction y axis mean share count, and show by the Y in descending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and sum the share count of each bin What is the trend?, and list in asc by the x axis please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Visualize the general trend of sum share count over the date of transaction, list x-axis in ascending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and sum the share count of each bin Return the result using a line chart, sort by the X from low to high.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and sum the share count of each bin What is the trend?, and order by the X-axis from high to low please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and sum the share count of each bin Return the result using a line chart, and I want to display from high to low by the x axis please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Visualize the general trend of sum share count over the date of transaction, sort in descending by the X-axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and give the average of the share count for each bin What is the trend?, display by the x-axis in asc please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and calculate the average the share count for each bin Visualize the result using a trend line, order date_of_transaction from low to high order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Plot date of transaction by mean share count as a trend line, and sort by the date_of_transaction in ascending please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and give the average of the share count for each bin What is the trend?, sort x-axis in desc order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Plot date of transaction by mean share count as a trend line, and I want to show from high to low by the x-axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bin all date of transactions into the YEAR interval, and calculate the average the share count for each bin Visualize the result using a trend line, show by the X-axis from high to low.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Find the data about the sale details and dates of transactions with amount smaller than 3000? Bin the date of the transaction into a weekday interval and compute the total number of each day with a bar chart, and display Y in ascending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the data about the sale details and dates of transactions with amount smaller than 3000? Bin the date of the transaction into a weekday interval and compute the total number of each day with a bar chart, and sort y axis in desc order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y, rank names in asc order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY sales_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY sales_details ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y, and sort names in descending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY sales_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY sales_details DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y, and rank by the y axis from low to high please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY COUNT(sales_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY COUNT(sales_details) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y, I want to sort by the Y in desc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY COUNT(sales_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY COUNT(sales_details) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "For the dates of transactions with amount smaller than 3000, bin the date into year interval, and draw a line chart to show the trend of the number of records in each bin, and list by the x axis in ascending please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For the dates of transactions with amount smaller than 3000, bin the date into year interval, and draw a line chart to show the trend of the number of records in each bin, list by the x axis in ascending please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For the dates of transactions with amount smaller than 3000, bin the date into year interval, and draw a line chart to show the trend of the number of records in each bin, rank x axis from high to low order please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "For the dates of transactions with amount smaller than 3000, bin the date into year interval, and draw a line chart to show the trend of the number of records in each bin, and order by the x-axis in desc please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, could you display by the how many date of transaction in ascending?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a bar chart, and could you show y-axis in asc order?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and sort in asc by the Y please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, list Y in descending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, could you list from high to low by the Y?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a bar chart, and sort y-axis in descending order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC", "binning": "BIN date_of_transaction BY WEEKDAY"}, "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a line chart, order x-axis from low to high order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, show in ascending by the X-axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and display x-axis from low to high order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a line chart, and I want to order by the X-axis in descending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, display from high to low by the x-axis.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and list by the date_of_transaction in desc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC", "binning": "BIN date_of_transaction BY YEAR"}, "VQL": "Visualize LINE SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC BIN date_of_transaction BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart, show by the names in ascending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the purchase details of transactions with amount bigger than 10000?, and show by the names in ascending.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?, could you sort in asc by the x axis?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details ASC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the purchase details of transactions with amount bigger than 10000?, and I want to list by the X-axis in desc please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?, and I want to show by the X from high to low please.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart, order by the bar from high to low.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details DESC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?, and could you rank in asc by the the number of purchase details?", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the purchase details of transactions with amount bigger than 10000?, I want to list by the y-axis in asc.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart, list by the the number of purchase details from low to high.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?, and display y-axis from high to low order.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart, rank by the the number of purchase details from high to low.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the purchase details of transactions with amount bigger than 10000?, rank by the the number of purchase details from high to low.", "db_id": "tracking_share_transactions", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find all the ids and dates of the logs for the problem whose id is 10. Plot them as bar chart.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10"}, "hardness": "Easy"}, {"nl_queries": "Find all dates of the logs for the problem whose id is 10, show me a bar chart that bins the dates into the weekday interval, and counts the dates.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10", "binning": "BIN log_entry_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10 BIN log_entry_date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "For the problem whose id is 10, bin the log_entry_date into the weekday interval and count the date, and return a bar chart.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10", "binning": "BIN log_entry_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10 BIN log_entry_date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show the correlation between the problem id and log id which are assigned to the staff named Rylan Homenick with a scatter chart.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT problem_id , problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\"", "binning": ""}, "VQL": "Visualize SCATTER SELECT problem_id , problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\""}, "hardness": "Medium"}, {"nl_queries": "List the problem id and log id which are assigned to the staff named Rylan Homenick. Plot them as scatter chart.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT problem_id , problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\"", "binning": ""}, "VQL": "Visualize SCATTER SELECT problem_id , problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\""}, "hardness": "Medium"}, {"nl_queries": "List all the log entry descriptions and count them using a bar chart.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description"}, "hardness": "Easy"}, {"nl_queries": "What is the number of entry descriptions of each problem?", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart for what is the number of entry descriptions of each problem?", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis log entry description y axis the number of log entry description", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description"}, "hardness": "Easy"}, {"nl_queries": "For each product which has problems, what are the number of problems and the product id. Visualize by scatter chart.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id"}, "hardness": "Medium"}, {"nl_queries": "For each product with some problems, list the count of problems and the product id. Show the correlation.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id"}, "hardness": "Medium"}, {"nl_queries": "For each product that has problems, find the number of problems reported after 1986-11-13 and the product id. Visualize by scatter chart.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"}, "hardness": "Hard"}, {"nl_queries": "Show me a scatter chart for what are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"}, "hardness": "Hard"}, {"nl_queries": "Return a scatter on what are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"}, "hardness": "Hard"}, {"nl_queries": "What are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13. Visualize by scatter chart.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id", "binning": ""}, "VQL": "Visualize SCATTER SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"}, "hardness": "Hard"}, {"nl_queries": "Find all the ids and dates of the logs for the problem whose id is 10 Plot them as bar chart, I want to sort bars in asc order please.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY log_entry_date ASC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY log_entry_date ASC"}, "hardness": "Medium"}, {"nl_queries": "Find all the ids and dates of the logs for the problem whose id is 10 Plot them as bar chart, I want to list in descending by the log_entry_date.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY log_entry_date DESC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY log_entry_date DESC"}, "hardness": "Medium"}, {"nl_queries": "Find all the ids and dates of the logs for the problem whose id is 10 Plot them as bar chart, display from low to high by the total number.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY problem_log_id ASC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY problem_log_id ASC"}, "hardness": "Medium"}, {"nl_queries": "Find all the ids and dates of the logs for the problem whose id is 10 Plot them as bar chart, and list in descending by the Y-axis please.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY problem_log_id DESC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY problem_log_id DESC"}, "hardness": "Medium"}, {"nl_queries": "For the problem whose id is 10, bin the log_entry_date into the weekday interval and count the date, and return a bar chart, and I want to list by the Y-axis in ascending.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10  ORDER BY COUNT(log_entry_date) ASC", "binning": "BIN log_entry_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10  ORDER BY COUNT(log_entry_date) ASC BIN log_entry_date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Find all dates of the logs for the problem whose id is 10, show me a bar chart that bins the dates into the weekday interval, and counts the dates, could you display by the y axis in asc?", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10  ORDER BY COUNT(log_entry_date) ASC", "binning": "BIN log_entry_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10  ORDER BY COUNT(log_entry_date) ASC BIN log_entry_date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "For the problem whose id is 10, bin the log_entry_date into the weekday interval and count the date, and return a bar chart, display by the Y from high to low.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10  ORDER BY COUNT(log_entry_date) DESC", "binning": "BIN log_entry_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10  ORDER BY COUNT(log_entry_date) DESC BIN log_entry_date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Find all dates of the logs for the problem whose id is 10, show me a bar chart that bins the dates into the weekday interval, and counts the dates, and I want to show from high to low by the y axis.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10  ORDER BY COUNT(log_entry_date) DESC", "binning": "BIN log_entry_date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10  ORDER BY COUNT(log_entry_date) DESC BIN log_entry_date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Bar chart x axis log entry description y axis the number of log entry description, could you show in asc by the log_entry_description please?", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of entry descriptions of each problem?, and order by the x axis in ascending.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC"}, "hardness": "Medium"}, {"nl_queries": "List all the log entry descriptions and count them using a bar chart, and could you show in asc by the log_entry_description please?", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the number of entry descriptions of each problem?, rank by the X from low to high.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis log entry description y axis the number of log entry description, and I want to display in descending by the bar please.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the number of entry descriptions of each problem?, and show in descending by the X-axis.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC"}, "hardness": "Medium"}, {"nl_queries": "List all the log entry descriptions and count them using a bar chart, show in descending by the X-axis.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of entry descriptions of each problem?, show from high to low by the x-axis.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis log entry description y axis the number of log entry description, and I want to order y-axis in ascending order.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the number of entry descriptions of each problem?, and list total number in ascending order.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of entry descriptions of each problem?, and sort from low to high by the how many log entry description.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC"}, "hardness": "Medium"}, {"nl_queries": "List all the log entry descriptions and count them using a bar chart, order by the Y in ascending.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC"}, "hardness": "Medium"}, {"nl_queries": "List all the log entry descriptions and count them using a bar chart, sort in descending by the Y-axis.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of entry descriptions of each problem?, list Y-axis from high to low order.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what is the number of entry descriptions of each problem?, could you show by the total number in descending?", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis log entry description y axis the number of log entry description, list by the Y in descending.", "db_id": "tracking_software_problems", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the name of all trains, count the name and show them with a bar chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart, group by name and compute each group's total number.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name"}, "hardness": "Easy"}, {"nl_queries": "Plot the number of name by grouped by name as a bar graph", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows how many locations.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "How many locations? Draw a bar chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show how many location from different location", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "What is the number of platforms for each location? Show the proportion with a pie chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart about the proportion of the number of platforms in different locations.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Compute the total sum number of platforms across location as a pie chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "What is the number of platforms for each location? Show the comparison with a bar chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart about the number of platforms in different locations", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing total number of number of platforms across location", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart about the average of number_of_platforms in different locations.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "What is the average of number_of_platforms for each location? Show the comparison with a bar chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis location y axis the average of number of platforms", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "How many different locations? Show the proportion with a pie chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart about the proportion of the different locations.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each location.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM station GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "For all train stations not in London with a pie chart, show me the proportion of total_passengers of different names.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'"}, "hardness": "Easy"}, {"nl_queries": "Show the names and total passengers for all train stations not in London. Plot them as a pie chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'"}, "hardness": "Easy"}, {"nl_queries": "Show the names and total passengers for all train stations not in London with a bar chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'"}, "hardness": "Easy"}, {"nl_queries": "Show the names and total passengers for all train stations not in London. Visualize by bar chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London'"}, "hardness": "Easy"}, {"nl_queries": "Show all locations and the total number of platforms for all train stations in each location in a pie chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize PIE SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Show the proportion of the total number of platforms of locations in each location in a pie chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize PIE SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show total number of number of platforms from different location.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize PIE SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Show all locations and the total number of platforms for all train stations in each location in a bar chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Show the total number of platforms of locations in each location in a bar chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of total number of number of platforms from each location", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Show the total number of passengers of each location in a bar chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart showing each location's total number of passengers.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis location y axis sum total passengers", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Show the proportion of the total number of passengers in each location with a pie chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize PIE SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie about the proportion of each location's total number of passengers.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize PIE SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Compute the total total number of total passengers across location as a pie chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize PIE SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION"}, "hardness": "Easy"}, {"nl_queries": "Show me the correlation between the number of platforms and the number of total_passengers in a scatter chart.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY LOCATION"}, "hardness": "Medium"}, {"nl_queries": "Draw a scatter plot about the correlation between the number of platforms and the number of total_passengers.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY LOCATION"}, "hardness": "Medium"}, {"nl_queries": "Plot a scatter chart, sum(number of platforms) by sum total passengers.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY LOCATION", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY LOCATION"}, "hardness": "Medium"}, {"nl_queries": "For each location, give me a scatter chart showing the relationships between the number of total_passengers and the number of platforms.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY Location"}, "hardness": "Medium"}, {"nl_queries": "Draw a scatterplot of sum(number of platforms) vs total number of total passengers where sum(number of platforms) is on the x-axis and points are colored by Location", "db_id": "train_station", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY Location", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY Location"}, "hardness": "Medium"}, {"nl_queries": "Show the name of all trains, count the name and show them with a bar chart, could you rank in asc by the X please?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of name by grouped by name as a bar graph, and could you show Name in asc order?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, group by name and compute each group's total number, and display X-axis in ascending order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of name by grouped by name as a bar graph, and order names from high to low order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the name of all trains, count the name and show them with a bar chart, and display by the bar from high to low.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, group by name and compute each group's total number, could you display Name in descending order please?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the name of all trains, count the name and show them with a bar chart, and could you list Y from low to high order?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of name by grouped by name as a bar graph, could you list Y in ascending order?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, group by name and compute each group's total number, could you show by the the number of name in ascending?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart, group by name and compute each group's total number, and I want to list the number of name from high to low order please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the name of all trains, count the name and show them with a bar chart, show by the Y-axis from high to low please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of name by grouped by name as a bar graph, and I want to list the number of name in desc order please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows how many locations, and order in ascending by the X-axis please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many location from different location, order in ascending by the X-axis please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "How many locations? Draw a bar chart, and list by the X-axis in ascending.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "How many locations? Draw a bar chart, could you sort X-axis in descending order?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many location from different location, list X-axis in desc order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows how many locations, and sort from high to low by the X.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many location from different location, and list total number from low to high order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many locations? Draw a bar chart, sort total number from low to high order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows how many locations, list Y-axis in asc order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows how many locations, list by the the number of location from high to low.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many locations? Draw a bar chart, order by the Y from high to low.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many location from different location, and sort Y from high to low order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of platforms for each location? Show the comparison with a bar chart, and show from low to high by the X.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart about the number of platforms in different locations, rank from low to high by the bars.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing total number of number of platforms across location, rank from low to high by the X-axis.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing total number of number of platforms across location, sort by the x-axis in desc.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of platforms for each location? Show the comparison with a bar chart, rank bars from high to low order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart about the number of platforms in different locations, sort by the x-axis in desc.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart about the number of platforms in different locations, show total number in asc order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing total number of number of platforms across location, and show total number in asc order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of platforms for each location? Show the comparison with a bar chart, I want to order by the Y in asc.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart about the number of platforms in different locations, and I want to list from high to low by the total number please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of platforms for each location? Show the comparison with a bar chart, and could you order by the total number in desc?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing total number of number of platforms across location, show from high to low by the total number of number of platforms.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average of number_of_platforms for each location? Show the comparison with a bar chart, could you list x-axis in ascending order?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis location y axis the average of number of platforms, could you list x-axis in ascending order?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart about the average of number_of_platforms in different locations, and rank X from low to high order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average of number_of_platforms for each location? Show the comparison with a bar chart, I want to order X-axis from high to low order please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis location y axis the average of number of platforms, and show x axis from high to low order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart about the average of number_of_platforms in different locations, sort from high to low by the x axis.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average of number_of_platforms for each location? Show the comparison with a bar chart, and sort Y-axis in ascending order please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart about the average of number_of_platforms in different locations, and list by the total number in ascending please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis location y axis the average of number of platforms, and show in ascending by the y-axis.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis location y axis the average of number of platforms, and rank total number in descending order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart about the average of number_of_platforms in different locations, and rank total number in descending order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average of number_of_platforms for each location? Show the comparison with a bar chart, and sort from high to low by the total number.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location ORDER BY AVG(Number_of_Platforms) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and total passengers for all train stations not in London Visualize by bar chart, and I want to sort in ascending by the bars please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and total passengers for all train stations not in London with a bar chart, and could you display by the x axis from low to high please?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and total passengers for all train stations not in London Visualize by bar chart, and show by the X-axis from high to low.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and total passengers for all train stations not in London with a bar chart, rank in descending by the Name please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and total passengers for all train stations not in London with a bar chart, rank by the total number in asc.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and total passengers for all train stations not in London Visualize by bar chart, I want to list in asc by the y-axis please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and total passengers for all train stations not in London with a bar chart, show Total_Passengers in desc order please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the names and total passengers for all train stations not in London Visualize by bar chart, rank y axis in desc order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Total_Passengers DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all locations and the total number of platforms for all train stations in each location in a bar chart, sort by the Location in ascending.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of total number of number of platforms from each location, and display by the X-axis in asc please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number of platforms of locations in each location in a bar chart, and list by the X from low to high.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number of platforms of locations in each location in a bar chart, could you order by the names from high to low?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of total number of number of platforms from each location, sort bars from high to low order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all locations and the total number of platforms for all train stations in each location in a bar chart, I want to order by the x axis in desc.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number of platforms of locations in each location in a bar chart, I want to show y axis in asc order please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of total number of number of platforms from each location, and I want to show y axis in asc order please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all locations and the total number of platforms for all train stations in each location in a bar chart, and rank by the Y-axis from low to high please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all locations and the total number of platforms for all train stations in each location in a bar chart, and order by the y-axis in desc.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of total number of number of platforms from each location, could you show in descending by the y-axis please?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number of platforms of locations in each location in a bar chart, and could you show in descending by the y-axis please?", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number of passengers of each location in a bar chart, and display in asc by the x-axis.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart showing each location's total number of passengers, rank in ascending by the x-axis please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis location y axis sum total passengers, show from low to high by the x axis.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart showing each location's total number of passengers, and I want to sort by the bars in desc please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis location y axis sum total passengers, I want to sort in descending by the Location please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number of passengers of each location in a bar chart, I want to sort by the bars in desc please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis location y axis sum total passengers, order from low to high by the y axis please.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart showing each location's total number of passengers, and rank total number in asc order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number of passengers of each location in a bar chart, and sort Y-axis in asc order.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis location y axis sum total passengers, and sort by the total number in desc.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart showing each location's total number of passengers, show by the y-axis from high to low.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the total number of passengers of each location in a bar chart, and sort in desc by the total number of total passengers.", "db_id": "train_station", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY sum(total_passengers) DESC"}, "hardness": "Medium"}]