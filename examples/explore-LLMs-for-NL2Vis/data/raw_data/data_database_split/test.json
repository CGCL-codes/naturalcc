[{"nl_queries": "List each language and the number of TV Channels using it with a pie chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE", "binning": ""}, "VQL": "Visualize PIE SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE"}, "hardness": "Easy"}, {"nl_queries": "List each language and the number of TV Channels using it. Show the proportion.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE", "binning": ""}, "VQL": "Visualize PIE SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE"}, "hardness": "Easy"}, {"nl_queries": "For each language, list the number of TV Channels that use it. Show a pie chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE", "binning": ""}, "VQL": "Visualize PIE SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the total number from different language.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE", "binning": ""}, "VQL": "Visualize PIE SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE"}, "hardness": "Easy"}, {"nl_queries": "List each language and the number of TV Channels using it in a bar chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE"}, "hardness": "Easy"}, {"nl_queries": "List each language and the number of TV Channels using it. Visualize by bar chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE"}, "hardness": "Easy"}, {"nl_queries": "For each language, list the number of TV Channels that use it. Plot them as bar chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of the total number from each language", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE"}, "hardness": "Easy"}, {"nl_queries": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating with a pie chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize PIE SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating. Show a pie chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize PIE SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "Show me the proportion on what are 3 most highly rated episodes in the TV series table and what were those ratings?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize PIE SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "what are 3 most highly rated episodes in the TV series table and what were those ratings?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize PIE SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "What are 3 most highly rated episodes in the TV series table and what were those ratings. Visualize by pie chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize PIE SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating in a bar chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating. Show bar chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart for what are 3 most highly rated episodes in the TV series table and what were those ratings?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are 3 most highly rated episodes in the TV series table and what were those ratings?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "What are 3 most highly rated episodes in the TV series table and what were those ratings. Plot them as bar chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "Find the pixel aspect ratio and the nation of the tv channels that do not use English. Show the proportion of the pixel aspect ratio with a pie chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR", "binning": ""}, "VQL": "Visualize PIE SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR"}, "hardness": "Medium"}, {"nl_queries": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the proportion of the pixel aspect ratio with a pie chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR", "binning": ""}, "VQL": "Visualize PIE SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR"}, "hardness": "Medium"}, {"nl_queries": "Give me a pie chart showing the proportion of the pixel aspect ratio and the nation of the tv channels that do not use English. ", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR", "binning": ""}, "VQL": "Visualize PIE SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR"}, "hardness": "Medium"}, {"nl_queries": "Find the pixel aspect ratio and the nation of the tv channels that do not use English. Show the number of different pixel aspect ratios with a bar chart.\n\n\n\n", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR"}, "hardness": "Medium"}, {"nl_queries": "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR"}, "hardness": "Medium"}, {"nl_queries": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a pie chart", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option", "binning": ""}, "VQL": "Visualize PIE SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option", "binning": ""}, "VQL": "Visualize PIE SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option"}, "hardness": "Medium"}, {"nl_queries": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a pie chart", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option", "binning": ""}, "VQL": "Visualize PIE SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option"}, "hardness": "Medium"}, {"nl_queries": "A pie chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option", "binning": ""}, "VQL": "Visualize PIE SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option"}, "hardness": "Medium"}, {"nl_queries": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option"}, "hardness": "Medium"}, {"nl_queries": "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option"}, "hardness": "Medium"}, {"nl_queries": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option"}, "hardness": "Medium"}, {"nl_queries": "For each language, list the number of TV Channels that use it Plot them as bar chart, sort in asc by the bar.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language ASC"}, "hardness": "Medium"}, {"nl_queries": "List each language and the number of TV Channels using it Visualize by bar chart, I want to order X in ascending order please.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language ASC"}, "hardness": "Medium"}, {"nl_queries": "List each language and the number of TV Channels using it in a bar chart, and show by the bars from low to high.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the total number from each language, and sort in asc by the bar.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language ASC"}, "hardness": "Medium"}, {"nl_queries": "List each language and the number of TV Channels using it Visualize by bar chart, and list in desc by the X.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language DESC"}, "hardness": "Medium"}, {"nl_queries": "For each language, list the number of TV Channels that use it Plot them as bar chart, and I want to sort by the X-axis in descending.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the total number from each language, show X-axis in descending order.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language DESC"}, "hardness": "Medium"}, {"nl_queries": "List each language and the number of TV Channels using it in a bar chart, could you sort names in desc order?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language DESC"}, "hardness": "Medium"}, {"nl_queries": "List each language and the number of TV Channels using it Visualize by bar chart, rank y-axis in ascending order.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the total number from each language, and list by the total number from low to high.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "List each language and the number of TV Channels using it in a bar chart, list by the total number from low to high.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each language, list the number of TV Channels that use it Plot them as bar chart, I want to order from low to high by the y axis.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "List each language and the number of TV Channels using it in a bar chart, and display in descending by the total number.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each language, list the number of TV Channels that use it Plot them as bar chart, order Y in desc order.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the total number from each language, display in descending by the total number.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "List each language and the number of TV Channels using it Visualize by bar chart, and rank Y from high to low order.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart, order names in asc order.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English, could you sort by the X-axis in ascending please?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart\n\n\n\n, I want to show by the Pixel_aspect_ratio_PAR in ascending.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English, I want to display in desc by the Pixel_aspect_ratio_PAR.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart, I want to display in desc by the Pixel_aspect_ratio_PAR.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart\n\n\n\n, list X-axis from high to low order.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English, show by the total number in asc.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart, order in ascending by the y axis.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart\n\n\n\n, list in ascending by the Y.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart, sort by the y axis in desc.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart\n\n\n\n, and I want to rank by the y-axis in descending.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English, I want to rank by the y-axis in descending.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY COUNT(Pixel_aspect_ratio_PAR) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and could you display X-axis from low to high order?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, could you display in asc by the X-axis?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option ASC"}, "hardness": "Hard"}, {"nl_queries": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart, could you display in asc by the X-axis?", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart, and sort bar in ascending order.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, I want to rank names in descending order.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart, and I want to show from high to low by the X.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option DESC"}, "hardness": "Hard"}, {"nl_queries": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart, and list by the bars from high to low.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, I want to rank names in descending order.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and order from low to high by the Y please.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) ASC"}, "hardness": "Hard"}, {"nl_queries": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart, and rank by the total number in ascending.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and rank in ascending by the total number please.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart, and rank by the total number in ascending.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) ASC"}, "hardness": "Hard"}, {"nl_queries": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart, and list in descending by the y-axis.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and display total number in desc order.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and list in desc by the total number.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart, rank how many package option in desc order.", "db_id": "tvshow", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the name and partition id for users who tweeted less than twice. Show a pie chart.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid", "binning": ""}, "VQL": "Visualize PIE SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid"}, "hardness": "Easy"}, {"nl_queries": "Find the name and partition id for users who tweeted less than twice. Show bar chart.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid", "binning": ""}, "VQL": "Visualize BAR SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid"}, "hardness": "Easy"}, {"nl_queries": "List the name and number of followers for each user, and sort the results by the number of followers in descending order with a bar chart.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , followers FROM user_profiles ORDER BY followers DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , followers FROM user_profiles ORDER BY followers DESC"}, "hardness": "Easy"}, {"nl_queries": "List the name and number of followers for each user, and sort the results by the number of followers in descending order. ", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , followers FROM user_profiles ORDER BY followers DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , followers FROM user_profiles ORDER BY followers DESC"}, "hardness": "Easy"}, {"nl_queries": "Find the name of each user and number of tweets tweeted by each of them. Visualize by pie chart.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid", "binning": ""}, "VQL": "Visualize PIE SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid"}, "hardness": "Medium"}, {"nl_queries": "Find the name of each user and number of tweets tweeted by each of them. Visualize by bar chart.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid"}, "hardness": "Medium"}, {"nl_queries": "Find the name and partition id for users who tweeted less than twice Show bar chart, sort name in asc order.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY name ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and partition id for users who tweeted less than twice Show bar chart, could you show by the name from high to low?", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY name DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and partition id for users who tweeted less than twice Show bar chart, and could you sort by the total number in ascending?", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY partitionid ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY partitionid ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the name and partition id for users who tweeted less than twice Show bar chart, rank by the y-axis in descending.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY partitionid DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY partitionid DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, could you order X-axis in asc order?", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, and rank in descending by the x-axis.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, and order Y-axis from low to high order please.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY count(*) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, and I want to list by the total number in desc.", "db_id": "twitter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY count(*) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the total student enrollment for different affiliation type schools. ", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation", "binning": ""}, "VQL": "Visualize PIE SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation"}, "hardness": "Easy"}, {"nl_queries": "Display a pie chart for what are the total enrollments of universities of each affiliation type?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation", "binning": ""}, "VQL": "Visualize PIE SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart with what are the total enrollments of universities of each affiliation type?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation", "binning": ""}, "VQL": "Visualize PIE SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation"}, "hardness": "Easy"}, {"nl_queries": "What are the total enrollments of universities of each affiliation type. Plot them as pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation", "binning": ""}, "VQL": "Visualize PIE SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation"}, "hardness": "Easy"}, {"nl_queries": "Compute the total total number of enrollment across affiliation as a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation", "binning": ""}, "VQL": "Visualize PIE SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation"}, "hardness": "Easy"}, {"nl_queries": "Find the total student enrollment for different affiliation type schools. Plot them as bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what are the total enrollments of universities of each affiliation type?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what are the total enrollments of universities of each affiliation type?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation"}, "hardness": "Easy"}, {"nl_queries": "What are the total enrollments of universities of each affiliation type. Plot them as bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of affiliation versus sum enrollment", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation"}, "hardness": "Easy"}, {"nl_queries": "Group by all home, show the team id and school id in a scatter plot.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me a scatter chart that groups by all home, the x-axis is team id and the y-axis is school id.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of team id vs school_id where team id is on the x-axis and points are colored by All_Home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me a scatter chart that groups acc road, the x-axis is team id and the y-axis is acc percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Group by all acc road, show the team id and acc percent in a scatter plot.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Show team id vs acc_percent as scatter plot use a different color for each ACC_Road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me a scatter chart that groups acc road, the x-axis is team id and the y-axis is All_Games_Percent.\n\n", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Group by all acc road, show the team id and All_Games_Percent in a scatter plot.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between team id and all_games_percent for each ACC_Road using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me a scatter chart that groups acc road, the x-axis is school id and the y-axis is acc percent.\n\n", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Group by all acc road, show the school id and All_Games_Percent in a scatter plot.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of school id vs acc_percent where school id is on the x-axis and points are colored by ACC_Road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Group by all acc road, show me the school id and All_Games_Percent in a scatter plot.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me a scatter chart that groups acc road, the x-axis is school id and the y-axis is all games percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between school id and all_games_percent for each ACC_Road using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me a scatter chart that groups all home attribute, the x-axis is school id and the y-axis is acc percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Group by all home attribute, show me the school id and acc_percent in a scatter plot.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show school id vs acc_percent as scatter plot use a different color for each All_Home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me a scatter chart that groups all home, the x-axis is school id and the y-axis is all games percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Group by all home attribute, show me the school id and all_games_percent in a scatter plot.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of school id vs all_games_percent where school id is on the x-axis and points are colored by All_Home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Road?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of acc percent vs all_games_percent where acc percent is on the x-axis and points are colored by ACC_Road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  School_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  School_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Scatterplot of school_id vs team id by ACC_Home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  ACC_Percent , and group by attribute ACC_Home?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  ACC_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  ACC_Percent , and group by attribute ACC_Home in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Scatterplot of acc_percent vs team id by ACC_Home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  All_Games_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  All_Games_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  All_Games_Percent , and group by attribute ACC_Home in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of team id vs all_games_percent where team id is on the x-axis and points are colored by ACC_Home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  ACC_Percent , and group by attribute ACC_Home in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  School_ID and  ACC_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Show school id vs acc_percent as scatter plot use a different color for each ACC_Home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  School_ID and  All_Games_Percent , and group by attribute ACC_Home?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  School_ID and  All_Games_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  All_Games_Percent , and group by attribute ACC_Home in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  School_ID and  All_Games_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Show school id vs all_games_percent as scatter plot use a different color for each ACC_Home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Home?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Home in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between acc percent and all_games_percent for each ACC_Home using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"}, "hardness": "Easy"}, {"nl_queries": "Find  All_Home and  Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about  Team_ID over the  All_Home , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Home and  Team_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart about the distribution of  All_Home and  Team_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Home and  Team_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Stacked bar chart of team_id for with each ACC_Road in each all home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Home and  School_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Find  All_Home and  School_ID , and group by attribute ACC_Road, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about  School_ID over the  All_Home , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Home and  School_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about  School_ID over the  All_Home , and group by attribute ACC_Road by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Stack bar chart of school_id vs ACC_Road based on all home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about  Team_ID over the  ACC_Road , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Find  ACC_Road and  Team_ID , and group by attribute All_Home, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart about the distribution of  ACC_Road and  Team_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart about the distribution of  ACC_Road and  Team_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart shows the distribution of  ACC_Road and  Team_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Stacked bar chart of team_id for with each All_Home in each acc road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Find  ACC_Road and  School_ID , and group by attribute All_Home, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about  School_ID over the  ACC_Road , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me about the distribution of  ACC_Road and  School_ID , and group by attribute All_Home in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart about the distribution of  ACC_Road and  School_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart about the distribution of  ACC_Road and  School_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Stack bar chart of school_id vs All_Home based on acc road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Find  ACC_Road and  Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me about the distribution of  ACC_Road and  Team_ID , and group by attribute ACC_Home in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart about the distribution of  ACC_Road and  Team_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about  Team_ID over the  ACC_Road , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart shows the distribution of  ACC_Road and  Team_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Stacked bar chart of team_id for with each ACC_Home in each acc road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart about the distribution of  ACC_Road and  School_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me about the distribution of  ACC_Road and  School_ID , and group by attribute ACC_Home in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about  School_ID over the  ACC_Road , and group by attribute ACC_Home by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart about the distribution of  ACC_Road and  School_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about  School_ID over the  ACC_Road , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Stacked bar chart of school_id for with each ACC_Home in each acc road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road"}, "hardness": "Extra Hard"}, {"nl_queries": "Find  All_Home and  Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about  Team_ID over the  All_Home , and group by attribute ACC_Home by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Give me the comparison about  Team_ID over the  All_Home , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Home and  Team_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me about the distribution of  All_Home and  Team_ID , and group by attribute ACC_Home in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Stack bar chart of team_id vs ACC_Home based on all home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Find  All_Home and  School_ID , and group by attribute ACC_Home, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me about the distribution of  All_Home and  School_ID , and group by attribute ACC_Home in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Home and  School_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart shows the distribution of  All_Home and  School_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Return a bar chart about the distribution of  All_Home and  School_ID , and group by attribute ACC_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Stack bar chart of school_id vs ACC_Home based on all home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home"}, "hardness": "Extra Hard"}, {"nl_queries": "Show me about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Road in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  School_ID , and group by attribute ACC_Road?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of team id vs school_id where team id is on the x-axis and points are colored by ACC_Road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  ACC_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  ACC_Percent , and group by attribute All_Home?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between team id and acc_percent for each All_Home using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Home in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of team id vs all_games_percent where team id is on the x-axis and points are colored by All_Home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Home in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute All_Home?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Scatterplot of all_games_percent vs acc percent by All_Home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  ACC_Road and the sum of Team_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  ACC_Road and the sum of Team_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of Team_ID over the  ACC_Road , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  ACC_Road and the sum of Team_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  ACC_Road and the sum of Team_ID , and group by attribute ACC_Road in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for total number of team id of each acc road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Find  ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  ACC_Road and the average of Team_ID , and group by attribute ACC_Road in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the average of Team_ID over the  ACC_Road , and group by attribute ACC_Road by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  ACC_Road and the average of Team_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the average of Team_ID over the  ACC_Road , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for the average of team id of each acc road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  ACC_Road and the sum of School_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  ACC_Road and the sum of School_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the  ACC_Road , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the  ACC_Road , and group by attribute ACC_Road by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  ACC_Road and the sum of School_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis acc road y axis total number of school id", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  ACC_Road and the average of School_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Find  ACC_Road and the average of School_ID , and group by attribute ACC_Road, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  ACC_Road and the average of School_ID , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the average of School_ID over the  ACC_Road , and group by attribute ACC_Road by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  ACC_Road and the average of School_ID , and group by attribute ACC_Road in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis acc road y axis the average of school id", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Home and the sum of Team_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Home and the sum of Team_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Home and the sum of Team_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of Team_ID over the  All_Home , and group by attribute All_Home by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Home and the sum of Team_ID , and group by attribute All_Home in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show sum team id from each all home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  All_Home and the average of Team_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Home and the average of Team_ID , and group by attribute All_Home in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Find  All_Home and the average of Team_ID , and group by attribute All_Home, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Home and the average of Team_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Home and the average of Team_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for mean team id of each all home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the  All_Home , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Find  All_Home and the sum of School_ID , and group by attribute All_Home, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Home and the sum of School_ID , and group by attribute All_Home in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Home and the sum of School_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Home and the sum of School_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for total number of school id of each all home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the average of School_ID over the  All_Home , and group by attribute All_Home by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  All_Home and the average of School_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Home and the average of School_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Home and the average of School_ID , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Find  All_Home and the average of School_ID , and group by attribute All_Home, and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show mean school id from different all home", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  All_Games_Percent  in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Plot a scatter chart, team id by all_games_percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  School_ID and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  School_ID and  ACC_Percent ?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  School_ID and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  ACC_Percent  in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  School_ID and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Scatter plot to show school id on x axis and acc_percent on y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  School_ID ?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  School_ID  in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Plot a scatter chart, team id by school_id.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  All_Games_Percent  in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  School_ID and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  School_ID and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  School_ID and  All_Games_Percent ?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me a scatter plot of school id and all_games_percent for .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  Team_Name and  Team_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  Team_ID over the  Team_Name  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  Team_Name and  Team_ID , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  Team_Name and  Team_ID  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  Team_Name and  Team_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show team_id from each team name", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  Team_Name and  School_ID  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  Team_Name and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  Team_Name and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  School_ID over the  Team_Name .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  Team_Name and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis team name y axis school_id", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  ACC_Regular_Season and  Team_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  Team_ID over the  ACC_Regular_Season  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  Team_ID over the  ACC_Regular_Season .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  ACC_Regular_Season and  Team_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  ACC_Regular_Season and  Team_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me team_id by acc regular season in a histogram", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  ACC_Regular_Season and  School_ID  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  School_ID over the  ACC_Regular_Season  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  ACC_Regular_Season and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  ACC_Regular_Season and  School_ID , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  ACC_Regular_Season and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me school_id by acc regular season in a histogram", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  Team_ID over the  All_Games .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  All_Games and  Team_ID , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  All_Games and  Team_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  Team_ID over the  All_Games  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Games and  Team_ID  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis all games y axis team_id", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Games and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  All_Games and  School_ID , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Games and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  All_Games and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  School_ID over the  All_Games  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of school_id from each all games", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Road and  Team_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  All_Road and  Team_ID , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Road and  Team_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Road and  Team_ID  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  Team_ID over the  All_Road  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me team_id by all road in a histogram", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  All_Road and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  All_Road and  School_ID , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Road and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Road and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Road and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me school_id by all road in a histogram", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  Team_ID over the  All_Neutral  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Neutral and  Team_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  Team_ID over the  All_Neutral .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Neutral and  Team_ID  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  All_Neutral and  Team_ID , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for team_id of each all neutral", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Neutral and  School_ID  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  School_ID over the  All_Neutral  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  School_ID over the  All_Neutral .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Neutral and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  All_Neutral and  School_ID .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing school_id across all neutral", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  ACC_Percent ?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me a scatter plot of team id and acc_percent for .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  ACC_Percent and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  ACC_Percent and  All_Games_Percent ?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  ACC_Percent and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  ACC_Percent and  All_Games_Percent  in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Scatter plot to show acc percent on x axis and all_games_percent on y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of the sum of Team_ID and the sum of Team_ID in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Home and the sum of Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  All_Home and the sum of Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  All_Home and the sum of Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  All_Home and the sum of Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Compute the total sum team id across all home as a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the amount of ACC_Road over the  ACC_Road , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis acc road y axis how many acc road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about the amount of All_Home over the  All_Home , and group by attribute All_Home by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Home and the amount of All_Home , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Home and the amount of All_Home , and group by attribute All_Home in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  All_Home and the amount of All_Home , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Home and the amount of All_Home , and group by attribute All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me the number of all home by all home in a histogram", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of All_Home and the sum of School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of All_Home and the sum of School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of All_Home and the sum of school id.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  All_Home and the sum of School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of all home and the sum of School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of sum school id for each all home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of  Team_ID and  Team_ID in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  Team_Name and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  Team_Name and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  Team_Name and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  Team_Name and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing team_id across team name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  ACC_Regular_Season and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of  Team_ID and  Team_ID in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  ACC_Regular_Season and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  ACC_Regular_Season and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  ACC_Regular_Season and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show team_id from different acc regular season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of  Team_ID and  Team_ID in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  All_Games and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  All_Games and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  All_Games and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Games and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Compute the total team_id across all games as a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  All_Road and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  All_Road and  Team_ID, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of  Team_ID and  Team_ID in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  All_Road and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Road and  Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show team_id from different all road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of Team_ID and Team_ID in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of All_Neutral and Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of All_Neutral and Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of All_Neutral and team id.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of All_Neutral and Team ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of team id for each all neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , Team_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  ACC_Road and the sum of Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  ACC_Road and the sum of Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  ACC_Road and the sum of Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  ACC_Road and the sum of Team_ID, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  ACC_Road and the sum of Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show sum team id from different acc road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ACC_Percent over the  Team_Name  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ACC_Percent over the  Team_Name .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  Team_Name and  ACC_Percent , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  Team_Name and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  Team_Name and  ACC_Percent  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Plot acc_percent by grouped by team name as a bar graph", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  Team_Name and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  Team_Name and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  Team_Name and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of  All_Games_Percent and  All_Games_Percent in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  Team_Name and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of all grams percent for each team name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  Team_Name and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  Team_Name and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  All_Games_Percent over the  Team_Name .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  Team_Name and  All_Games_Percent , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  Team_Name and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for all_games_percent of each team name", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  ACC_Regular_Season and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  ACC_Regular_Season and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  ACC_Regular_Season and  ACC_Percent , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ACC_Percent over the  ACC_Regular_Season  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ACC_Percent over the  ACC_Regular_Season .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis acc regular season y axis acc_percent", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  ACC_Regular_Season and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  ACC_Regular_Season and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of  All_Games_Percent and  All_Games_Percent in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  ACC_Regular_Season and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  ACC_Regular_Season and  All_Games_Percent, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing all_games_percent across acc regular season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  All_Games_Percent over the  ACC_Regular_Season  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  All_Games_Percent over the  ACC_Regular_Season .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  ACC_Regular_Season and  All_Games_Percent , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  ACC_Regular_Season and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  ACC_Regular_Season and  All_Games_Percent  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing all_games_percent across acc regular season", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Games and  ACC_Percent  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Games and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  All_Games and  ACC_Percent , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  All_Games and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Games and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis all games y axis acc_percent", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of  All_Games_Percent and  All_Games_Percent in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  All_Games and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  All_Games and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  All_Games and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Games and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing all_games_percent across all games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Games and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Games and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  All_Games_Percent over the  All_Games  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  All_Games and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  All_Games_Percent over the  All_Games .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Plot all_games_percent by grouped by all games as a bar graph", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  All_Road and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Road and  ACC_Percent  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Road and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ACC_Percent over the  All_Road  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Road and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me acc_percent by all road in a histogram", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  All_Road and  All_Games_Percent, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  All_Road and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  All_Road and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Road and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of  All_Games_Percent and  All_Games_Percent in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of All_Games_Percent for each all road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Road and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Road and  All_Games_Percent  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  All_Road and  All_Games_Percent , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Road and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of  All_Road and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of all_games_percent from each all road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Neutral and  ACC_Percent  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of  All_Neutral and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of  All_Neutral and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Neutral and  ACC_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  ACC_Percent over the  All_Neutral .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of acc_percent from each all neutral", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Neutral and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  All_Neutral and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  All_Neutral and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  All_Neutral and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  All_Neutral and  All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of All_Games_Percent for each all neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Find  All_Neutral and  All_Games_Percent , and visualize them by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of  All_Neutral and  All_Games_Percent  in a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  All_Games_Percent over the  All_Neutral  by a bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about  All_Games_Percent over the  All_Neutral .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of  All_Neutral and  All_Games_Percent .", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing all_games_percent across all neutral", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of Team_Name and School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "School_ID across team name in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of Team_Name and School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of Team_Name and School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of team name and School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of school id for each team name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  Team_Name and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  Team_Name and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  Team_Name and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of  ACC_Percent and  ACC_Percent in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  Team_Name and  ACC_Percent, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing acc_percent across team name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT Team_Name , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  ACC_Regular_Season and  School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  ACC_Regular_Season and  School_ID, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  ACC_Regular_Season and  School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  ACC_Regular_Season and  School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  ACC_Regular_Season and  School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show school_id from different acc regular season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  ACC_Regular_Season and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  ACC_Regular_Season and  ACC_Percent, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  ACC_Regular_Season and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  ACC_Regular_Season and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  ACC_Regular_Season and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing acc_percent across acc regular season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  All_Games and  School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  All_Games and  School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  All_Games and  School_ID, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  All_Games and  School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  All_Games and  School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of school id for each all games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  All_Games and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  All_Games and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Games and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  All_Games and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of  ACC_Percent and  ACC_Percent in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Compute the total acc_percent across all games as a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Games , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  All_Road and School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "School_ID across all road attribute in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of All_Road and School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For the attribute All_Road and  School_ID, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of All_Road and School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of school id for each all road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  All_Road and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  All_Road and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Road and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  All_Road and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  All_Road and  ACC_Percent, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show acc_percent from different all road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Road , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Shows the scholl id across by the attribute all neutral in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of All_Neutral and School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  All_Neutral and School_ID, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of All_Neutral and School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of All_Neutral and School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing school_id across all neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , School_ID FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  All_Neutral and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  All_Neutral and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  All_Neutral and  ACC_Percent, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Neutral and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  All_Neutral and  ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show acc_percent from different all neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match", "binning": ""}, "VQL": "Visualize PIE SELECT All_Neutral , ACC_Percent FROM basketball_match"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  ACC_Road and the amount of ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  ACC_Road and the amount of ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  ACC_Road and the amount of ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of  ACC_Road and the amount of ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of the amount of ACC_Road and the amount of ACC_Road in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the number of acc road from different acc road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  ACC_Road and the sum of School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a pie chart about the proportion of  ACC_Road and the sum of School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  ACC_Road and the sum of School_ID, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  ACC_Road and the sum of School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  ACC_Road and the sum of School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Create a pie chart showing sum school id across acc road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road", "binning": ""}, "VQL": "Visualize PIE SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart about the proportion of  All_Home and the amount of All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie chart to reflect the proportion of  All_Home and the amount of All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of the amount of All_Home and the amount of All_Home in a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart about the proportion of  All_Home and the amount of All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "For the attribute  All_Home and the amount of All_Home, show their proportion by a pie chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the number of all home from different all home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home", "binning": ""}, "VQL": "Visualize PIE SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  School_ID , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  School_ID , and group by attribute Team_Name in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  School_ID , and group by attribute Team_Name?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Scatterplot of school_id vs team id by Team_Name", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  ACC_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  ACC_Percent , and group by attribute Team_Name?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  ACC_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of team id vs acc_percent where team id is on the x-axis and points are colored by Team_Name", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Scatterplot of all_games_percent vs team id by Team_Name", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  School_ID and  ACC_Percent , and group by attribute Team_Name?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  School_ID and  ACC_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  ACC_Percent , and group by attribute Team_Name in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between school id and acc_percent for each Team_Name using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  All_Games_Percent , and group by attribute Team_Name in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  School_ID and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between school id and all_games_percent for each Team_Name using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute Team_Name?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "Scatterplot of all_games_percent vs acc percent by Team_Name", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  School_ID , and group by attribute ACC_Regular_Season?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Regular_Season in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between team id and school_id for each ACC_Regular_Season using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  ACC_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  ACC_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  ACC_Percent , and group by attribute ACC_Regular_Season in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Show team id vs acc_percent as scatter plot use a different color for each ACC_Regular_Season", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  All_Games_Percent , and group by attribute ACC_Regular_Season?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of team id vs all_games_percent where team id is on the x-axis and points are colored by ACC_Regular_Season", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  School_ID and  ACC_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  ACC_Percent , and group by attribute ACC_Regular_Season in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  School_ID and  ACC_Percent , and group by attribute ACC_Regular_Season?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Scatterplot of acc_percent vs school id by ACC_Regular_Season", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  School_ID and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  School_ID and  All_Games_Percent , and group by attribute ACC_Regular_Season?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  All_Games_Percent , and group by attribute ACC_Regular_Season in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Show school id vs all_games_percent as scatter plot use a different color for each ACC_Regular_Season", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between acc percent and all_games_percent for each ACC_Regular_Season using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  School_ID , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  School_ID , and group by attribute All_Games in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between team id and school_id for each All_Games using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Games in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  ACC_Percent , and group by attribute All_Games?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Show team id vs acc_percent as scatter plot use a different color for each All_Games", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  All_Games_Percent , and group by attribute All_Games?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Games in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of team id vs all_games_percent where team id is on the x-axis and points are colored by All_Games", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  School_ID and  ACC_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Games in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Show school id vs acc_percent as scatter plot use a different color for each All_Games", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  School_ID and  All_Games_Percent , and group by attribute All_Games?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Games in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  School_ID and  All_Games_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between school id and all_games_percent for each All_Games using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Games in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute All_Games?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Games.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of acc percent vs all_games_percent where acc percent is on the x-axis and points are colored by All_Games", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  School_ID , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  School_ID , and group by attribute All_Road?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  School_ID , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between team id and school_id for each All_Road using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  ACC_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Road in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  ACC_Percent , and group by attribute All_Road?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between team id and acc_percent for each All_Road using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between team id and all_games_percent for each All_Road using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  School_ID and  ACC_Percent , and group by attribute All_Road?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  School_ID and  ACC_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Road in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Show school id vs acc_percent as scatter plot use a different color for each All_Road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Road in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of school id vs all_games_percent where school id is on the x-axis and points are colored by All_Road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Road in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute All_Road?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Scatterplot of all_games_percent vs acc percent by All_Road", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  School_ID , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  School_ID , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  School_ID , and group by attribute All_Neutral?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Scatterplot of school_id vs team id by All_Neutral", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  ACC_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  ACC_Percent , and group by attribute All_Neutral?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Scatterplot of acc_percent vs team id by All_Neutral", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Show me about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Neutral in a scatter chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  Team_ID and  All_Games_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  Team_ID and  All_Games_Percent , and group by attribute All_Neutral?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of team id vs all_games_percent where team id is on the x-axis and points are colored by All_Neutral", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  School_ID and  ACC_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  School_ID and  ACC_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  School_ID and  ACC_Percent , and group by attribute All_Neutral?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Show school id vs acc_percent as scatter plot use a different color for each All_Neutral", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  School_ID and  All_Games_Percent , and group by attribute All_Neutral?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  School_ID and  All_Games_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatterplot of school id vs all_games_percent where school id is on the x-axis and points are colored by All_Neutral", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "What is the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute All_Neutral?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart shows the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Visualize the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Neutral.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Show the relation between acc percent and all_games_percent for each All_Neutral using a scatter chart", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral", "binning": ""}, "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral"}, "hardness": "Easy"}, {"nl_queries": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type. ", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation", "binning": ""}, "VQL": "Visualize PIE SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation"}, "hardness": "Medium"}, {"nl_queries": "Visualize a pie chart with what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation", "binning": ""}, "VQL": "Visualize PIE SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation"}, "hardness": "Medium"}, {"nl_queries": "Draw a pie chart for what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation", "binning": ""}, "VQL": "Visualize PIE SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation"}, "hardness": "Medium"}, {"nl_queries": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type. ", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation", "binning": ""}, "VQL": "Visualize PIE SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation"}, "hardness": "Medium"}, {"nl_queries": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type. Show bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation"}, "hardness": "Medium"}, {"nl_queries": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type. Visualize by bar chart.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of affiliation versus sum enrollment, and I want to list from low to high by the x axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the total student enrollment for different affiliation type schools Plot them as bar chart, could you rank in asc by the bar please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the total enrollments of universities of each affiliation type?, order Affiliation in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the total enrollments of universities of each affiliation type Plot them as bar chart, and could you rank in asc by the bar please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the total enrollments of universities of each affiliation type?, I want to list from low to high by the x axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the total enrollments of universities of each affiliation type Plot them as bar chart, and display in descending by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of affiliation versus sum enrollment, and could you rank by the names from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the total enrollments of universities of each affiliation type?, I want to order by the names in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the total enrollments of universities of each affiliation type?, and could you list bar from high to low order please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the total student enrollment for different affiliation type schools Plot them as bar chart, could you rank by the names from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the total enrollments of universities of each affiliation type?, sort y axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the total student enrollment for different affiliation type schools Plot them as bar chart, display by the sum enrollment from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the total enrollments of universities of each affiliation type Plot them as bar chart, rank in asc by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of affiliation versus sum enrollment, and I want to display y axis from low to high order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the total enrollments of universities of each affiliation type?, display by the y axis from low to high please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the total student enrollment for different affiliation type schools Plot them as bar chart, I want to show by the sum enrollment in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the total enrollments of universities of each affiliation type Plot them as bar chart, and I want to show by the sum enrollment in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the total enrollments of universities of each affiliation type?, list Y-axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of affiliation versus sum enrollment, I want to show by the sum enrollment in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what are the total enrollments of universities of each affiliation type?, I want to show by the sum enrollment in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, rank in asc by the names please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Road, rank in asc by the names please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, I want to show X from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of team_id for with each ACC_Road in each all home, I want to sort from low to high by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, and show by the x-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, and show by the x-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Road, and show from high to low by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, display from high to low by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, order in desc by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, I want to rank by the All_Home from high to low please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of team_id for with each ACC_Road in each all home, and sort by the x axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and order in desc by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, and could you rank by the Y in asc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, and rank Team_ID in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, and sort from low to high by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Road, and list from low to high by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, could you rank by the total number in asc please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of team_id for with each ACC_Road in each all home, and list in asc by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Road, and I want to order in descending by the Y please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, I want to order in descending by the Y please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and I want to show total number from high to low order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of team_id for with each ACC_Road in each all home, and I want to show total number from high to low order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, and rank y-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, and order by the total number in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, sort bars in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, could you sort by the bar in asc please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road by a bar chart, and sort names in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of school_id vs ACC_Road based on all home, and show bar in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road, and show bar in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, and sort bars in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road, sort X-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of school_id vs ACC_Road based on all home, and list x axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, rank in desc by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, and rank in desc by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road by a bar chart, and sort X-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and could you show x axis in descending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, order in asc by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and I want to list from low to high by the y-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road, and display from low to high by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road by a bar chart, and rank in asc by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, I want to list from low to high by the y-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of school_id vs ACC_Road based on all home, I want to sort in ascending by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, and sort by the Y-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, could you list School_ID in descending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road, and could you sort by the Y in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of school_id vs ACC_Road based on all home, and show by the Y-axis from high to low please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road by a bar chart, and rank from high to low by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, sort by the Y-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, list ACC_Road in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and Team_ID , and group by attribute All_Home, and visualize them by a bar chart, list X in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Road , and group by attribute All_Home, and display in ascending by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of team_id for with each All_Home in each acc road, and list X from low to high order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute All_Home, could you list ACC_Road in asc order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, I want to list from low to high by the ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of team_id for with each All_Home in each acc road, I want to order from high to low by the ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, could you rank in descending by the X-axis?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute All_Home, and I want to show by the names in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, and could you rank in descending by the X-axis?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Road , and group by attribute All_Home, I want to order from high to low by the ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and Team_ID , and group by attribute All_Home, and visualize them by a bar chart, and could you sort by the bar in descending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute All_Home, list Team_ID from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Road , and group by attribute All_Home, list in ascending by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, and list in ascending by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and Team_ID , and group by attribute All_Home, and visualize them by a bar chart, and list Team_ID from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of team_id for with each All_Home in each acc road, and could you list by the Y in ascending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, and could you sort by the y-axis in asc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, and I want to sort from high to low by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and Team_ID , and group by attribute All_Home, and visualize them by a bar chart, order total number from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of team_id for with each All_Home in each acc road, and rank Y-axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute All_Home, and sort in desc by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Road , and group by attribute All_Home, and rank Y-axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, sort in desc by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and School_ID , and group by attribute All_Home in a bar chart, and could you sort bar from low to high order please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of school_id vs All_Home based on acc road, and show in asc by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, could you sort bar from low to high order please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and School_ID , and group by attribute All_Home, and visualize them by a bar chart, and sort X in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, could you sort bar from low to high order please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute All_Home, I want to list X-axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, and rank by the x axis in desc please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, display in descending by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of school_id vs All_Home based on acc road, and display in descending by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and School_ID , and group by attribute All_Home in a bar chart, and sort from high to low by the ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and School_ID , and group by attribute All_Home, and visualize them by a bar chart, order by the x axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute All_Home, and show by the names in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and School_ID , and group by attribute All_Home in a bar chart, and list y axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute All_Home, and sort from low to high by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and School_ID , and group by attribute All_Home, and visualize them by a bar chart, and sort from low to high by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of school_id vs All_Home based on acc road, and list y axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, I want to list Y in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, and sort from low to high by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, order by the Y from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute All_Home, could you display from high to low by the Y-axis?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of school_id vs All_Home based on acc road, rank Y from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, and display by the total number in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and School_ID , and group by attribute All_Home in a bar chart, could you list from high to low by the y axis?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and School_ID , and group by attribute All_Home, and visualize them by a bar chart, order by the Y from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Road , and group by attribute ACC_Home, list by the x-axis from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, I want to show in ascending by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home in a bar chart, and show by the x-axis in asc please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of team_id for with each ACC_Home in each acc road, I want to show in ascending by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, list by the x-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, display by the X from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and could you show X in descending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Road , and group by attribute ACC_Home, and could you show X in descending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of team_id for with each ACC_Home in each acc road, and I want to sort in descending by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, and list x axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home in a bar chart, could you show by the X in descending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, and could you show by the X in descending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home in a bar chart, could you order by the Y in ascending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and rank by the Team_ID in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, sort y axis from low to high order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Road , and group by attribute ACC_Home, and sort by the Y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of team_id for with each ACC_Home in each acc road, sort by the Y in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, I want to list in asc by the Team_ID please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and list from high to low by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, and list from high to low by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Road , and group by attribute ACC_Home, and display Y in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of team_id for with each ACC_Home in each acc road, display Y in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, list Y-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home in a bar chart, list from high to low by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home, and order by the ACC_Road in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home, and order by the ACC_Road in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of school_id for with each ACC_Home in each acc road, and show by the ACC_Road in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home, and show by the ACC_Road in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home by a bar chart, sort by the X in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home in a bar chart, and show x axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home by a bar chart, and order by the bars in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home in a bar chart, and display in descending by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home, order in descending by the X please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home, order by the bars in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of school_id for with each ACC_Home in each acc road, list in desc by the names.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home, and display in descending by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of school_id for with each ACC_Home in each acc road, rank by the Y-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home, display School_ID in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home by a bar chart, could you list in ascending by the y axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home in a bar chart, and could you list total number in asc order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home, and I want to show from low to high by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home, and sort from low to high by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home, list total number in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home, and list total number in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home, could you display by the Y-axis in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home in a bar chart, and show Y-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home by a bar chart, could you display by the Y-axis in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Stacked bar chart of school_id for with each ACC_Home in each acc road, display in desc by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Home, I want to rank All_Home in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and display in asc by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and Team_ID , and group by attribute ACC_Home in a bar chart, and rank x-axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home by a bar chart, and list from low to high by the All_Home please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of team_id vs ACC_Home based on all home, and display by the x axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home, and I want to rank All_Home in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and Team_ID , and group by attribute ACC_Home in a bar chart, display in desc by the names.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of team_id vs ACC_Home based on all home, could you order by the X-axis in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home, and sort in desc by the X-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home by a bar chart, and order bars in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and list in desc by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Home, and display in descending by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, order total number in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and Team_ID , and group by attribute ACC_Home in a bar chart, and order total number in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home by a bar chart, rank in asc by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home, rank in asc by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of team_id vs ACC_Home based on all home, and could you display Y in asc order please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Home, order total number in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Home, show by the total number from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home, I want to list by the Team_ID in descending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home by a bar chart, and could you rank in desc by the Y?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of team_id vs ACC_Home based on all home, show by the total number from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and Team_ID , and group by attribute ACC_Home in a bar chart, and show by the total number from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and list in desc by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and School_ID , and group by attribute ACC_Home in a bar chart, sort by the X from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, list by the names in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and School_ID , and group by attribute ACC_Home, could you show bar in ascending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of school_id vs ACC_Home based on all home, list by the names in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and School_ID , and group by attribute ACC_Home, and visualize them by a bar chart, could you show bar in ascending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, and rank from low to high by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, sort X-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, rank in desc by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and School_ID , and group by attribute ACC_Home in a bar chart, and could you rank by the bars from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and School_ID , and group by attribute ACC_Home, and sort X-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of school_id vs ACC_Home based on all home, and list from high to low by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and School_ID , and group by attribute ACC_Home, and visualize them by a bar chart, sort X-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and School_ID , and group by attribute ACC_Home, and visualize them by a bar chart, I want to order from low to high by the School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and School_ID , and group by attribute ACC_Home, order in asc by the Y-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, and order in asc by the Y-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, show in asc by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and School_ID , and group by attribute ACC_Home in a bar chart, list by the Y in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of school_id vs ACC_Home based on all home, rank total number from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and School_ID , and group by attribute ACC_Home, order by the y axis from high to low please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and School_ID , and group by attribute ACC_Home, and visualize them by a bar chart, could you list in descending by the y-axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and School_ID , and group by attribute ACC_Home in a bar chart, and sort by the y-axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, and sort by the y-axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Stack bar chart of school_id vs ACC_Home based on all home, list by the y-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, and rank in descending by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of Team_ID over the ACC_Road , and group by attribute ACC_Road, and could you order by the bar in asc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, I want to show in asc by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, and could you show in asc by the names?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road in a bar chart, order by the X-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for total number of team id of each acc road, order by the X-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, list ACC_Road in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, sort in descending by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, and sort in descending by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for total number of team id of each acc road, and sort in descending by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, sort in descending by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of Team_ID over the ACC_Road , and group by attribute ACC_Road, show names in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road in a bar chart, show names in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, and display by the total number in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, and rank total number in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road in a bar chart, show from low to high by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, show from low to high by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of Team_ID over the ACC_Road , and group by attribute ACC_Road, show from low to high by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for total number of team id of each acc road, and order y axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road in a bar chart, and sort Y in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, and list by the total number in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of Team_ID over the ACC_Road , and group by attribute ACC_Road, list in desc by the Y please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for total number of team id of each acc road, I want to order from high to low by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, list in desc by the Y please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, and list in desc by the Y please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road, and order names in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road in a bar chart, list X-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and order in asc by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the average of team id of each acc road, and sort in ascending by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and list X-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and sort by the x-axis from low to high please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road in a bar chart, and display x-axis in desc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road, and rank in desc by the bars please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and order in desc by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and sort by the bar in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the average of team id of each acc road, and rank ACC_Road from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road, sort by the bar in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and I want to display from low to high by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and display by the y-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the average of team id of each acc road, and display by the y-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road, I want to display from low to high by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road in a bar chart, order in asc by the the average of team id.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and I want to list by the Y-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road in a bar chart, list in desc by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the average of team id of each acc road, could you list by the total number in descending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road, I want to sort in desc by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and order by the y axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and list Y from high to low order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and I want to sort in desc by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, and display names from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc road y axis total number of school id, I want to rank in asc by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road, and I want to display in asc by the ACC_Road please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, display from low to high by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, show from low to high by the bar please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, and display from low to high by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road, display in desc by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, display in desc by the x axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, show in descending by the bars please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, list x axis in descending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, and display from high to low by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc road y axis total number of school id, display from high to low by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, display in asc by the total number of school id.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, I want to show by the Y in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc road y axis total number of school id, and I want to show by the Y in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, and display by the Y-axis from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road, and display in ascending by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and I want to show by the Y in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc road y axis total number of school id, order in descending by the total number of school id.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road, and I want to rank from high to low by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, order by the Y-axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, order in descending by the total number of school id.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, and I want to rank from high to low by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, and rank by the total number from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc road y axis the average of school id, and sort bar in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, could you order in ascending by the names?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, and I want to show names from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road in a bar chart, sort bar in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and the average of School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, I want to list by the bar from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and could you sort from low to high by the names?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, and order X-axis in descending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, list by the x axis in descending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and the average of School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and show in descending by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc road y axis the average of school id, and list by the x axis in descending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, order X-axis in descending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road in a bar chart, order X-axis in descending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road in a bar chart, and sort in ascending by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, rank from low to high by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, list Y-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc road y axis the average of school id, rank from low to high by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, list Y-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and the average of School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and list Y-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, I want to sort in desc by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, and rank from high to low by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc road y axis the average of school id, and rank in desc by the Y please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find ACC_Road and the average of School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, rank in desc by the Y please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, I want to sort in desc by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road in a bar chart, I want to display Y in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and I want to show in ascending by the x axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home in a bar chart, and order bars in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and display by the x-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and display from low to high by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Show sum team id from each all home, sort bars from low to high order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of Team_ID over the All_Home , and group by attribute All_Home by a bar chart, and display from low to high by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Show sum team id from each all home, and display by the X-axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home in a bar chart, and rank x-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and I want to show from high to low by the All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, I want to show from high to low by the All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and display by the X in descending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of Team_ID over the All_Home , and group by attribute All_Home by a bar chart, display by the X-axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and list by the y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and rank total number from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show sum team id from each all home, and list Y in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, list by the y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of Team_ID over the All_Home , and group by attribute All_Home by a bar chart, list Y in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home in a bar chart, order by the y axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and I want to list by the y axis from high to low please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show sum team id from each all home, and could you show by the total number in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, sort by the total number in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home in a bar chart, and could you show by the total number in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of Team_ID over the All_Home , and group by attribute All_Home by a bar chart, and I want to list by the y axis from high to low please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, I want to display y-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home in a bar chart, and rank by the X-axis in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and order X from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and could you sort by the X in asc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and the average of Team_ID , and group by attribute All_Home, and visualize them by a bar chart, could you sort by the X in asc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean team id of each all home, sort from low to high by the bars please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and rank by the X-axis in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and list All_Home in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and the average of Team_ID , and group by attribute All_Home, and visualize them by a bar chart, I want to display from high to low by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home in a bar chart, and sort by the X in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and I want to show by the names from high to low please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and sort by the X in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean team id of each all home, and I want to show in descending by the All_Home.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, rank by the y-axis from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean team id of each all home, and I want to display total number in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home in a bar chart, sort by the y-axis in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and the average of Team_ID , and group by attribute All_Home, and visualize them by a bar chart, order by the total number in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and rank from low to high by the y-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and sort in ascending by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home in a bar chart, and sort by the y-axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and list by the the average of team id from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and order from high to low by the Y please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and sort in desc by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and the average of Team_ID , and group by attribute All_Home, and visualize them by a bar chart, sort in desc by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean team id of each all home, and list by the the average of team id from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the All_Home , and group by attribute All_Home, and display by the x-axis from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home, and order All_Home from low to high order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and the sum of School_ID , and group by attribute All_Home, and visualize them by a bar chart, could you order from low to high by the x-axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for total number of school id of each all home, and display in asc by the bars please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home, and display in asc by the bars please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home in a bar chart, and display x axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home, could you display by the x-axis in descending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and the sum of School_ID , and group by attribute All_Home, and visualize them by a bar chart, display X-axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for total number of school id of each all home, display in descending by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the All_Home , and group by attribute All_Home, and rank from high to low by the X-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home, and could you show by the All_Home in descending please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home in a bar chart, display X-axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home in a bar chart, and rank sum school id in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the All_Home , and group by attribute All_Home, and list Y-axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home, and order sum school id from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for total number of school id of each all home, order sum school id from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home, sort by the y-axis in asc please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and the sum of School_ID , and group by attribute All_Home, and visualize them by a bar chart, and rank sum school id in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for total number of school id of each all home, and rank by the y axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the sum of School_ID over the All_Home , and group by attribute All_Home, display by the y axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and the sum of School_ID , and group by attribute All_Home, and visualize them by a bar chart, and list by the y axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home, and display by the y axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home in a bar chart, and show y axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home, could you show in desc by the y-axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, order from low to high by the x-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, display X from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the average of School_ID , and group by attribute All_Home, rank by the names in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and the average of School_ID , and group by attribute All_Home, and visualize them by a bar chart, show in asc by the x-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show mean school id from different all home, rank by the names in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of School_ID over the All_Home , and group by attribute All_Home by a bar chart, I want to display by the x axis from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and could you list in descending by the x axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and could you sort in descending by the x-axis?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show mean school id from different all home, and list by the bar in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and list in descending by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and the average of School_ID , and group by attribute All_Home, and visualize them by a bar chart, and could you list in descending by the x axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of School_ID over the All_Home , and group by attribute All_Home by a bar chart, and could you show by the X in desc please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and the average of School_ID , and group by attribute All_Home, and visualize them by a bar chart, rank mean school id in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, show by the Y in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of School_ID over the All_Home , and group by attribute All_Home by a bar chart, and list y axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and sort total number from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, sort total number from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show mean school id from different all home, rank by the y-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show mean school id from different all home, sort y-axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and I want to list Y-axis in desc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the average of School_ID over the All_Home , and group by attribute All_Home by a bar chart, and sort total number in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find All_Home and the average of School_ID , and group by attribute All_Home, and visualize them by a bar chart, sort y-axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and order by the total number from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, order by the total number from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about Team_ID over the Team_Name by a bar chart, and could you rank in ascending by the bar please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and Team_ID , could you rank in ascending by the bar please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Show team_id from each team name, order in asc by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and Team_ID , order by the names in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and Team_ID in a bar chart, sort X-axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Find Team_Name and Team_ID , and visualize them by a bar chart, and display X-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Find Team_Name and Team_ID , and visualize them by a bar chart, list X-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and Team_ID in a bar chart, I want to list in descending by the bar please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and Team_ID , and list X-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the Team_Name by a bar chart, I want to rank by the X in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Show team_id from each team name, show by the x axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and Team_ID , and sort in descending by the names please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Find Team_Name and Team_ID , and visualize them by a bar chart, and show by the Y-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and Team_ID , and order from low to high by the Y please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and Team_ID in a bar chart, and order Y-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show team_id from each team name, rank by the y axis from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the Team_Name by a bar chart, and I want to sort from low to high by the y-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and Team_ID , I want to order in asc by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Find Team_Name and Team_ID , and visualize them by a bar chart, could you show by the y-axis from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and Team_ID , I want to list y axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the Team_Name by a bar chart, could you rank by the Y in descending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and Team_ID in a bar chart, could you show by the y-axis from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and Team_ID , and show by the Y-axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show team_id from each team name, and display y axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Team_Name and School_ID , could you order by the X-axis in ascending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and School_ID , list in ascending by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis team name y axis school_id, and list in ascending by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the Team_Name , and sort by the x axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and School_ID , show by the x-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and School_ID in a bar chart, display bars in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and School_ID , list x-axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and School_ID , sort in desc by the names.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and School_ID in a bar chart, show in desc by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the Team_Name , order X-axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Team_Name and School_ID , could you order from high to low by the x axis?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis team name y axis school_id, order x axis from high to low order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and School_ID , order by the School_ID in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Team_Name and School_ID , and list by the School_ID from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and School_ID in a bar chart, and I want to rank by the total number in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the Team_Name , could you list from low to high by the total number?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and School_ID , I want to rank by the total number in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis team name y axis school_id, and sort by the Y-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and School_ID , and display in desc by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis team name y axis school_id, display in desc by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the Team_Name , order by the total number in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and School_ID , and rank total number from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and School_ID in a bar chart, and display in desc by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Team_Name and School_ID , list by the Y in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and Team_ID , and I want to rank x axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Regular_Season , could you order from low to high by the X-axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Regular_Season and Team_ID , and could you order from low to high by the X-axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me team_id by acc regular season in a histogram, and sort by the bar in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Regular_Season by a bar chart, sort x axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of ACC_Regular_Season and Team_ID , and I want to rank x axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Regular_Season by a bar chart, rank in desc by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Regular_Season , and list x axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Regular_Season and Team_ID , and I want to sort by the X-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of ACC_Regular_Season and Team_ID , show x axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and Team_ID , and I want to rank X in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me team_id by acc regular season in a histogram, and rank X-axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Regular_Season by a bar chart, and could you rank by the total number from low to high please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and Team_ID , show by the y axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Regular_Season , sort by the Y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of ACC_Regular_Season and Team_ID , and I want to order by the Team_ID in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Regular_Season and Team_ID , I want to order by the Team_ID in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me team_id by acc regular season in a histogram, and display from low to high by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of ACC_Regular_Season and Team_ID , could you rank Y in descending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Regular_Season by a bar chart, rank from high to low by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me team_id by acc regular season in a histogram, list by the Y-axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the ACC_Regular_Season , and show from high to low by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Regular_Season and Team_ID , show by the Y-axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and Team_ID , and show by the Y-axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me school_id by acc regular season in a histogram, and I want to order X-axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Regular_Season and School_ID , and could you rank by the x-axis from low to high?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and School_ID , and visualize them by a bar chart, and show in asc by the x axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of ACC_Regular_Season and School_ID in a bar chart, and could you rank by the x-axis from low to high?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and School_ID , list x axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Regular_Season by a bar chart, list by the names in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Regular_Season and School_ID , and sort in descending by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and School_ID , sort bar in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of ACC_Regular_Season and School_ID in a bar chart, and display bar in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and School_ID , and visualize them by a bar chart, sort in descending by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me school_id by acc regular season in a histogram, display in desc by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Regular_Season by a bar chart, and order in desc by the names please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Regular_Season and School_ID , display School_ID in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of ACC_Regular_Season and School_ID in a bar chart, rank from low to high by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Regular_Season by a bar chart, rank total number in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and School_ID , and visualize them by a bar chart, and rank from low to high by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me school_id by acc regular season in a histogram, rank from low to high by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and School_ID , and I want to show total number in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and School_ID , and display Y-axis in desc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of ACC_Regular_Season and School_ID in a bar chart, and order from high to low by the y axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and School_ID , and visualize them by a bar chart, and order from high to low by the y axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the ACC_Regular_Season by a bar chart, and I want to rank in desc by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me school_id by acc regular season in a histogram, show in descending by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Regular_Season and School_ID , and show in descending by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis all games y axis team_id, and display by the X-axis in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Games by a bar chart, display by the X-axis in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Games and Team_ID in a bar chart, and order by the bars from low to high please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Games and Team_ID , and visualize them by a bar chart, I want to order in asc by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Games , and rank from low to high by the bar please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and Team_ID , order by the bars from low to high please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Games by a bar chart, and list by the All_Games in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Games and Team_ID , and visualize them by a bar chart, and could you display by the x-axis in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis all games y axis team_id, and I want to rank by the names from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Games and Team_ID in a bar chart, could you display by the x-axis in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and Team_ID , could you display by the x-axis in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Games , order x axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Games , and show total number in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Games and Team_ID in a bar chart, and list Team_ID from low to high order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Games by a bar chart, rank in asc by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and Team_ID , and rank in asc by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis all games y axis team_id, and I want to list by the y-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Games and Team_ID , and visualize them by a bar chart, and I want to list by the y-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis all games y axis team_id, display in desc by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Games , could you show by the total number from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and Team_ID , list by the Y-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Games and Team_ID , and visualize them by a bar chart, show Team_ID from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Games by a bar chart, and list by the Team_ID in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Games and Team_ID in a bar chart, display in desc by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the All_Games by a bar chart, could you list by the names in asc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Games and School_ID , and show in ascending by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Games and School_ID , and visualize them by a bar chart, and show in ascending by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Games and School_ID , could you show in asc by the All_Games?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and School_ID , show in ascending by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of school_id from each all games, and list in asc by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of school_id from each all games, I want to list x-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the All_Games by a bar chart, could you rank by the X from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Games and School_ID , and order by the X in descending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Games and School_ID , and visualize them by a bar chart, could you list by the bars in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and School_ID , and could you list by the bars in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Games and School_ID , order bar in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the All_Games by a bar chart, display total number from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Games and School_ID , and visualize them by a bar chart, I want to show by the total number in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Games and School_ID , and rank total number from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of school_id from each all games, display total number from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Games and School_ID , and rank total number from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and School_ID , I want to show by the total number in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Games and School_ID , and list by the y axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the All_Games by a bar chart, could you sort in desc by the total number please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and School_ID , show by the y-axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Games and School_ID , list by the School_ID in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Games and School_ID , and visualize them by a bar chart, rank Y in desc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of school_id from each all games, and I want to sort total number from high to low order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me team_id by all road in a histogram, I want to list by the X-axis in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Road and Team_ID , and visualize them by a bar chart, and rank by the x axis from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and Team_ID , and show X-axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and Team_ID , show by the bar in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Road by a bar chart, I want to list by the X-axis in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Road and Team_ID in a bar chart, rank by the x axis from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and Team_ID , I want to order x axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me team_id by all road in a histogram, could you rank x-axis in descending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Road and Team_ID in a bar chart, I want to order x axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Road and Team_ID , and visualize them by a bar chart, and display from high to low by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and Team_ID , show by the bars from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Road by a bar chart, could you rank from high to low by the X-axis?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and Team_ID , sort in asc by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Road by a bar chart, rank by the y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Road and Team_ID , and visualize them by a bar chart, I want to rank from low to high by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me team_id by all road in a histogram, and rank by the y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Road and Team_ID in a bar chart, display by the y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and Team_ID , sort from low to high by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Road and Team_ID , and visualize them by a bar chart, I want to order y axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and Team_ID , display Team_ID in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Road by a bar chart, and list by the Y-axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Road and Team_ID in a bar chart, and display Y in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me team_id by all road in a histogram, and I want to list from high to low by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and Team_ID , order y axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me school_id by all road in a histogram, and I want to list from low to high by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and School_ID , and list by the X in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and School_ID , could you list by the names in asc please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Road and School_ID , rank by the X from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Road and School_ID , and visualize them by a bar chart, rank by the X from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Road and School_ID , and could you rank bar in ascending order please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and School_ID , and sort in desc by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Road and School_ID , and visualize them by a bar chart, and list by the x axis in descending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me school_id by all road in a histogram, sort in desc by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and School_ID , and could you show x axis from high to low order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Road and School_ID , could you show x axis from high to low order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Road and School_ID , could you show x axis from high to low order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Road and School_ID , and rank Y in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and School_ID , order by the Y-axis from low to high please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me school_id by all road in a histogram, rank Y in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Road and School_ID , sort by the Y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and School_ID , list by the y-axis from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Road and School_ID , and visualize them by a bar chart, I want to rank School_ID in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and School_ID , sort y axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Road and School_ID , and visualize them by a bar chart, could you show y-axis in desc order please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Road and School_ID , and show from high to low by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me school_id by all road in a histogram, show from high to low by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and School_ID , and could you sort total number from high to low order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Road and School_ID , could you sort total number from high to low order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Neutral and Team_ID , rank by the bar in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and Team_ID in a bar chart, list in ascending by the names.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Neutral , and display in asc by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for team_id of each all neutral, I want to rank by the bar from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Neutral and Team_ID , and visualize them by a bar chart, list in ascending by the names.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Neutral by a bar chart, and show from low to high by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and Team_ID in a bar chart, and show bars in descending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Neutral , I want to show All_Neutral in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Neutral and Team_ID , and I want to list by the x axis from high to low please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Neutral and Team_ID , and visualize them by a bar chart, and show in descending by the names.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for team_id of each all neutral, show in descending by the names.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Neutral by a bar chart, show from high to low by the All_Neutral please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Neutral and Team_ID , rank in ascending by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and Team_ID in a bar chart, and show by the Y in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for team_id of each all neutral, and order total number in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Neutral by a bar chart, and display by the Y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Neutral and Team_ID , and visualize them by a bar chart, and show by the Y in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Neutral , and could you rank by the total number in asc please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Neutral by a bar chart, and display in desc by the y-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for team_id of each all neutral, and sort in descending by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and Team_ID in a bar chart, and sort in descending by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Neutral and Team_ID , I want to display by the Y-axis from high to low please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Neutral and Team_ID , and visualize them by a bar chart, sort in descending by the Team_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about Team_ID over the All_Neutral , and I want to display by the Y-axis from high to low please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Neutral and School_ID , list by the All_Neutral in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing school_id across all neutral, and display by the x-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Neutral and School_ID , could you display in asc by the bar?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and School_ID in a bar chart, rank in ascending by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the All_Neutral by a bar chart, and I want to display bar in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the All_Neutral , and list by the All_Neutral in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and School_ID in a bar chart, and list in desc by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing school_id across all neutral, and rank All_Neutral in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Neutral and School_ID , and list from high to low by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the All_Neutral , and rank All_Neutral in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Neutral and School_ID , and rank by the bars in descending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the All_Neutral by a bar chart, and sort in descending by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the All_Neutral , show Y from low to high order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Neutral and School_ID , sort by the y axis in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Neutral and School_ID , and sort Y in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing school_id across all neutral, and show by the y axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the All_Neutral by a bar chart, and display in ascending by the School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and School_ID in a bar chart, and display in ascending by the School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the All_Neutral , and list by the y axis in desc please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing school_id across all neutral, and rank by the School_ID from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about School_ID over the All_Neutral by a bar chart, and could you display in desc by the School_ID?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Neutral and School_ID , and I want to sort in descending by the School_ID.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and School_ID in a bar chart, and rank from high to low by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Neutral and School_ID , list in descending by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and display bars in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road in a bar chart, and list x-axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and show in ascending by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of ACC_Road over the ACC_Road , and group by attribute ACC_Road, list in asc by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc road y axis how many acc road, and list x-axis in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, display bars in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and order by the ACC_Road in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc road y axis how many acc road, and could you sort from high to low by the names?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and could you display by the X in descending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and display from high to low by the ACC_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road in a bar chart, and display x-axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of ACC_Road over the ACC_Road , and group by attribute ACC_Road, display x-axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc road y axis how many acc road, and sort Y in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road in a bar chart, and order Y-axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of ACC_Road over the ACC_Road , and group by attribute ACC_Road, display y-axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and could you order how many acc road in ascending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and sort in asc by the how many acc road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, sort Y in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and sort total number in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of ACC_Road over the ACC_Road , and group by attribute ACC_Road, and could you display by the Y from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road in a bar chart, could you display by the Y from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and list in descending by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, sort total number in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis acc road y axis how many acc road, and could you sort how many acc road in desc order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the number of all home by all home in a histogram, I want to show X-axis from low to high order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of All_Home over the All_Home , and group by attribute All_Home by a bar chart, rank by the X from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, and rank by the X from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, and order x-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, and order x-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home in a bar chart, and show in asc by the x-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, and sort by the x axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home in a bar chart, could you order by the bars from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of All_Home over the All_Home , and group by attribute All_Home by a bar chart, display by the X from high to low please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, list by the All_Home in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, sort by the x axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the number of all home by all home in a histogram, and could you order by the bars from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, and I want to rank in ascending by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of All_Home over the All_Home , and group by attribute All_Home by a bar chart, and sort in asc by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, rank y axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the number of all home by all home in a histogram, show total number in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, I want to sort by the total number from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home in a bar chart, and could you order by the y-axis from low to high?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home in a bar chart, list in descending by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, display by the how many all home in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, and show by the how many all home in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, display from high to low by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me the comparison about the amount of All_Home over the All_Home , and group by attribute All_Home by a bar chart, I want to sort by the how many all home in desc please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the number of all home by all home in a histogram, and show by the how many all home in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find Team_Name and ACC_Percent , and visualize them by a bar chart, and display by the x-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and ACC_Percent , and list X in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and ACC_Percent in a bar chart, list X in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the Team_Name by a bar chart, display by the x-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the Team_Name , and I want to list in ascending by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Plot acc_percent by grouped by team name as a bar graph, and show X-axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Find Team_Name and ACC_Percent , and visualize them by a bar chart, could you order by the Team_Name in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the Team_Name , show in desc by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and ACC_Percent in a bar chart, and order from high to low by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the Team_Name by a bar chart, order by the bars in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and ACC_Percent , could you order by the Team_Name in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Plot acc_percent by grouped by team name as a bar graph, list from high to low by the Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Find Team_Name and ACC_Percent , and visualize them by a bar chart, and order by the ACC_Percent in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and ACC_Percent , display in asc by the y-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Plot acc_percent by grouped by team name as a bar graph, and could you rank Y-axis in ascending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and ACC_Percent in a bar chart, and could you rank Y-axis in ascending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the Team_Name by a bar chart, and rank from low to high by the ACC_Percent please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the Team_Name , and rank from low to high by the ACC_Percent please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Find Team_Name and ACC_Percent , and visualize them by a bar chart, I want to order by the Y-axis in desc please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the Team_Name by a bar chart, could you display by the ACC_Percent in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of Team_Name and ACC_Percent in a bar chart, and show by the Y-axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the Team_Name , and rank in descending by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of Team_Name and ACC_Percent , and rank in descending by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Plot acc_percent by grouped by team name as a bar graph, and I want to order in desc by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and All_Games_Percent , and list Team_Name from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Team_Name and All_Games_Percent , display from low to high by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Find Team_Name and All_Games_Percent , and visualize them by a bar chart, display by the x axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the Team_Name , and order from low to high by the Team_Name.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of Team_Name and All_Games_Percent , list Team_Name from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for all_games_percent of each team name, and list Team_Name from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the Team_Name , and could you display from high to low by the X-axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of Team_Name and All_Games_Percent , could you display from high to low by the X-axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for all_games_percent of each team name, order in descending by the Team_Name please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Team_Name and All_Games_Percent , and order by the x axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and All_Games_Percent , order by the x axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Find Team_Name and All_Games_Percent , and visualize them by a bar chart, and order by the x axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for all_games_percent of each team name, could you list in asc by the y axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Find Team_Name and All_Games_Percent , and visualize them by a bar chart, could you list in asc by the y axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the Team_Name , show in asc by the All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of Team_Name and All_Games_Percent , order by the All_Games_Percent in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Team_Name and All_Games_Percent , and order y-axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and All_Games_Percent , and I want to display in asc by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the Team_Name , I want to list by the y axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of Team_Name and All_Games_Percent , sort Y in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of Team_Name and All_Games_Percent , and sort Y in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for all_games_percent of each team name, and list in descending by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of Team_Name and All_Games_Percent , could you display y-axis in descending order please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Find Team_Name and All_Games_Percent , and visualize them by a bar chart, and list in descending by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and ACC_Percent , and visualize them by a bar chart, display from low to high by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis acc regular season y axis acc_percent, I want to rank X-axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the ACC_Regular_Season by a bar chart, I want to rank X-axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , I want to sort by the names from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , order in asc by the ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the ACC_Regular_Season , and rank in asc by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the ACC_Regular_Season , and rank in desc by the X.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , and I want to show in descending by the ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the ACC_Regular_Season by a bar chart, could you list in descending by the bar?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and ACC_Percent , and visualize them by a bar chart, I want to show in descending by the ACC_Regular_Season.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , and show X in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis acc regular season y axis acc_percent, and show X-axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the ACC_Regular_Season by a bar chart, and order Y-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the ACC_Regular_Season , sort by the ACC_Percent in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis acc regular season y axis acc_percent, display ACC_Percent in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , show by the y-axis from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , and display ACC_Percent in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and ACC_Percent , and visualize them by a bar chart, and order from low to high by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the ACC_Regular_Season , and rank by the Y-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and ACC_Percent , and visualize them by a bar chart, and could you order by the y axis from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the ACC_Regular_Season by a bar chart, could you order by the y axis from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis acc regular season y axis acc_percent, sort by the ACC_Percent in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , show in descending by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , show in descending by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of ACC_Regular_Season and All_Games_Percent , and display from low to high by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of ACC_Regular_Season and All_Games_Percent in a bar chart, and could you order x-axis in asc order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing all_games_percent across acc regular season, could you list ACC_Regular_Season in ascending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the ACC_Regular_Season , and display from low to high by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart, show X from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and All_Games_Percent , and visualize them by a bar chart, and show X-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing all_games_percent across acc regular season, rank X-axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of ACC_Regular_Season and All_Games_Percent in a bar chart, and could you order in desc by the names please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of ACC_Regular_Season and All_Games_Percent , order bars from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart, and could you order in desc by the names please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the ACC_Regular_Season , and sort in descending by the bars.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and All_Games_Percent , and visualize them by a bar chart, I want to show X in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the ACC_Regular_Season , list total number in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of ACC_Regular_Season and All_Games_Percent , rank All_Games_Percent in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of ACC_Regular_Season and All_Games_Percent in a bar chart, display by the Y in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and All_Games_Percent , and visualize them by a bar chart, and list total number in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing all_games_percent across acc regular season, and could you sort Y-axis in asc order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart, rank All_Games_Percent from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart, and I want to order All_Games_Percent in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing all_games_percent across acc regular season, sort in descending by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of ACC_Regular_Season and All_Games_Percent , and rank by the Y-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Find ACC_Regular_Season and All_Games_Percent , and visualize them by a bar chart, rank by the Y-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the ACC_Regular_Season , and I want to display by the Y in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of ACC_Regular_Season and All_Games_Percent in a bar chart, and list Y-axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and ACC_Percent , could you display by the x-axis in asc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Games and ACC_Percent , display from low to high by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis all games y axis acc_percent, and could you display by the x-axis in asc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Games and ACC_Percent , I want to display by the X-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Games and ACC_Percent , and visualize them by a bar chart, and order x axis from low to high order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Games and ACC_Percent in a bar chart, and could you display by the x-axis in asc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and ACC_Percent , could you list from high to low by the names?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Games and ACC_Percent , could you order bar from high to low order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis all games y axis acc_percent, and could you show in desc by the X-axis?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Games and ACC_Percent , and visualize them by a bar chart, and I want to list from high to low by the names.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Games and ACC_Percent in a bar chart, could you show in desc by the X-axis?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Games and ACC_Percent , and could you show in desc by the X-axis?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Games and ACC_Percent , and list y axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and ACC_Percent , list in asc by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Games and ACC_Percent , and visualize them by a bar chart, order by the ACC_Percent in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis all games y axis acc_percent, order by the ACC_Percent in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Games and ACC_Percent in a bar chart, and list from low to high by the total number please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Games and ACC_Percent , and sort from low to high by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Games and ACC_Percent , and rank by the Y in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Games and ACC_Percent in a bar chart, and could you show by the total number from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Games and ACC_Percent , and list Y-axis from high to low order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis all games y axis acc_percent, I want to order from high to low by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and ACC_Percent , rank by the total number in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Games and ACC_Percent , and visualize them by a bar chart, and display Y-axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and All_Games_Percent , and order in asc by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Plot all_games_percent by grouped by all games as a bar graph, and could you list bar in asc order please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Games , could you list bar in asc order please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Games and All_Games_Percent , show by the x axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Games and All_Games_Percent , and order in asc by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Games by a bar chart, order in asc by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Games by a bar chart, could you list names in descending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Games and All_Games_Percent , could you order in descending by the names please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Games , I want to rank by the All_Games in desc please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and All_Games_Percent , I want to order x-axis in descending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Games and All_Games_Percent , could you list names in descending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "Plot all_games_percent by grouped by all games as a bar graph, I want to order x-axis in descending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and All_Games_Percent , list in asc by the All_Games_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Plot all_games_percent by grouped by all games as a bar graph, and rank by the total number in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Games and All_Games_Percent , display Y-axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Games by a bar chart, and display Y-axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Games , and show in asc by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Games and All_Games_Percent , display Y-axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Games , rank Y-axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Games and All_Games_Percent , I want to display total number in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Games by a bar chart, could you sort in desc by the Y please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Games and All_Games_Percent , and I want to rank y axis in descending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Plot all_games_percent by grouped by all games as a bar graph, order y axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Games and All_Games_Percent , rank Y-axis in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and ACC_Percent , and rank in asc by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Road and ACC_Percent , display in ascending by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Road and ACC_Percent in a bar chart, and show x axis in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and ACC_Percent , display by the bar in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me acc_percent by all road in a histogram, display by the bar in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the All_Road by a bar chart, and show x axis in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and ACC_Percent , and rank in desc by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and ACC_Percent , order X from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Road and ACC_Percent in a bar chart, and show from high to low by the X please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the All_Road by a bar chart, show bar in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me acc_percent by all road in a histogram, show from high to low by the X please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Road and ACC_Percent , and order X from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and ACC_Percent , I want to list total number in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and ACC_Percent , and display y-axis in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Road and ACC_Percent in a bar chart, display by the total number in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Road and ACC_Percent , display in ascending by the y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the All_Road by a bar chart, display y-axis in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me acc_percent by all road in a histogram, and show by the Y in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and ACC_Percent , and I want to show by the total number from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Road and ACC_Percent in a bar chart, display from high to low by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the All_Road by a bar chart, and I want to show by the total number from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me acc_percent by all road in a histogram, order by the Y in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Road and ACC_Percent , and could you display by the y axis from high to low?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and ACC_Percent , could you list by the ACC_Percent in desc?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Road and All_Games_Percent in a bar chart, I want to display X in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and All_Games_Percent , and I want to display X in ascending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of all_games_percent from each all road, and I want to sort bars in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and All_Games_Percent , order by the bars from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Road and All_Games_Percent , and display bar in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Road and All_Games_Percent , and visualize them by a bar chart, display bar in asc order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Road and All_Games_Percent in a bar chart, and I want to show by the names in desc please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and All_Games_Percent , and I want to list from high to low by the x-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of all_games_percent from each all road, and rank by the X from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Road and All_Games_Percent , and sort in desc by the All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and All_Games_Percent , sort in desc by the All_Road.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Road and All_Games_Percent , and visualize them by a bar chart, sort X in desc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of all_games_percent from each all road, and show in asc by the Y.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Road and All_Games_Percent , and visualize them by a bar chart, I want to display by the total number in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Road and All_Games_Percent in a bar chart, and rank by the Y in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and All_Games_Percent , rank in asc by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Road and All_Games_Percent , and rank by the All_Games_Percent in ascending please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and All_Games_Percent , order from low to high by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Road and All_Games_Percent , and visualize them by a bar chart, sort in descending by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of all_games_percent from each all road, list in desc by the y axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Road and All_Games_Percent in a bar chart, and show by the y-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Road and All_Games_Percent , could you rank from high to low by the total number?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Road and All_Games_Percent , rank from high to low by the y axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart about the distribution of All_Road and All_Games_Percent , and could you display total number from high to low order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and ACC_Percent in a bar chart, and could you list X in asc order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Neutral and ACC_Percent , and rank by the x-axis from low to high please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of acc_percent from each all neutral, and could you show from low to high by the X please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Neutral and ACC_Percent , could you list X in asc order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Neutral and ACC_Percent , and sort by the x-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the All_Neutral , and could you rank All_Neutral in ascending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Neutral and ACC_Percent , and show in desc by the x axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Neutral and ACC_Percent , and sort names from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Neutral and ACC_Percent , sort in descending by the X-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and ACC_Percent in a bar chart, sort names from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the All_Neutral , show in desc by the All_Neutral please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of acc_percent from each all neutral, could you order bars in descending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Neutral and ACC_Percent , rank in asc by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the All_Neutral , order total number in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Neutral and ACC_Percent , rank y-axis in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and ACC_Percent in a bar chart, sort by the Y-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Neutral and ACC_Percent , and rank by the y-axis from low to high please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of acc_percent from each all neutral, and show in ascending by the Y please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of acc_percent from each all neutral, and display by the Y-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Neutral and ACC_Percent , I want to display from high to low by the total number.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart about the distribution of All_Neutral and ACC_Percent , and display from high to low by the ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and ACC_Percent in a bar chart, rank by the total number in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the distribution of All_Neutral and ACC_Percent , display from high to low by the ACC_Percent.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about ACC_Percent over the All_Neutral , and rank by the total number in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing all_games_percent across all neutral, I want to show bar in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and All_Games_Percent in a bar chart, and list by the bars in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Neutral , and sort by the x-axis in asc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Neutral by a bar chart, and order by the x axis in asc please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Neutral and All_Games_Percent , rank by the X in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Neutral and All_Games_Percent , and visualize them by a bar chart, and I want to rank by the names from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and All_Games_Percent in a bar chart, list by the names in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Neutral , I want to order by the x axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing all_games_percent across all neutral, and could you order in desc by the X-axis?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Neutral by a bar chart, I want to order by the x axis in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Neutral and All_Games_Percent , and could you sort by the x axis in descending?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Neutral and All_Games_Percent , and visualize them by a bar chart, and rank by the All_Neutral from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Neutral and All_Games_Percent , and visualize them by a bar chart, display by the Y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Neutral by a bar chart, and rank total number in ascending order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Neutral , could you order by the Y from low to high?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and All_Games_Percent in a bar chart, I want to display by the total number in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Neutral and All_Games_Percent , and display by the Y-axis in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing all_games_percent across all neutral, I want to display by the Y-axis from low to high.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing all_games_percent across all neutral, sort by the y axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the distribution of All_Neutral and All_Games_Percent , and sort by the y-axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Neutral , could you list y axis in descending order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Find All_Neutral and All_Games_Percent , and visualize them by a bar chart, and order y axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the distribution of All_Neutral and All_Games_Percent in a bar chart, and sort y axis from high to low order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the comparison about All_Games_Percent over the All_Neutral by a bar chart, sort by the y axis from high to low.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?, and rank in asc by the bar.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type Show bar chart, I want to sort X-axis from low to high order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type Visualize by bar chart, and could you list from low to high by the bars?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?, I want to sort X-axis from low to high order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type Visualize by bar chart, and list by the bars in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?, list by the bars in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type Show bar chart, and could you rank Affiliation from high to low order?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?, could you order in descending by the x axis please?", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY Affiliation DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type Show bar chart, and list by the total number in ascending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type Visualize by bar chart, and I want to rank from low to high by the total number of enrollment please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?, list y-axis in asc order.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?, and sort from low to high by the Y-axis please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type Visualize by bar chart, and order by the total number in desc.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show me a bar chart for what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?, and show by the y axis in descending.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type Show bar chart, show total number of enrollment in descending order please.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?, order from high to low by the Y-axis.", "db_id": "university_basketball", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC"}, "hardness": "Hard"}, {"nl_queries": "List the states of all votes, group states and count them in a bar chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT state , COUNT(state) FROM votes GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of the number of state from each state", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT state , COUNT(state) FROM votes GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "List the states of all votes, compute the total number of states, and sum their vote id with a pie chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT state , SUM(vote_id) FROM votes GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of sum of vote id for each state.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT state , SUM(vote_id) FROM votes GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "List the states of all votes, compute the total number of states, and sum their vote id with a bar chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Show me total number of vote id by state in a histogram", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "List the states of all votes, compute the total number of states, and compute the average of their vote id with a bar chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , AVG(vote_id) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT state , AVG(vote_id) FROM votes GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis state y axis the average of vote id", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , AVG(vote_id) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT state , AVG(vote_id) FROM votes GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "List the states of all votes, compute the total number of states, and show the proportion with a pie chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT state , COUNT(state) FROM votes GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "Compute the total the number of state across state as a pie chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT state , COUNT(state) FROM votes GROUP BY state"}, "hardness": "Easy"}, {"nl_queries": "List the contestant numbers and names, ordered by contestant name descending in a bar chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT contestant_name , contestant_number FROM contestants ORDER BY contestant_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT contestant_name , contestant_number FROM contestants ORDER BY contestant_name DESC"}, "hardness": "Easy"}, {"nl_queries": "List the contestant numbers and names, ordered by contestant name descending. Show bar chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT contestant_name , contestant_number FROM contestants ORDER BY contestant_name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT contestant_name , contestant_number FROM contestants ORDER BY contestant_name DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me about the proportion of the number of distinct states with a pie chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state"}, "hardness": "Medium"}, {"nl_queries": "Group by the distinct states, and count them in a pie chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state"}, "hardness": "Medium"}, {"nl_queries": "I want to know the proportion of the total number for each state.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize PIE SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state"}, "hardness": "Medium"}, {"nl_queries": "Group by distinct states and them count them in a bar chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state"}, "hardness": "Medium"}, {"nl_queries": "What is the number of distinct states?  Show me a bar chart.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis state y axis the number of state", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of state from each state, and show x axis in asc order.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, group states and count them in a bar chart, and show by the X-axis from low to high please.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, group states and count them in a bar chart, rank X-axis in descending order.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of state from each state, could you order in desc by the X-axis please?", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, group states and count them in a bar chart, order by the total number in asc.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of state from each state, and could you sort in ascending by the y axis please?", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) ASC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, group states and count them in a bar chart, display y-axis in desc order please.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the number of state from each state, and show by the y-axis in descending.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, compute the total number of states, and sum their vote id with a bar chart, I want to sort bar from low to high order.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me total number of vote id by state in a histogram, sort in asc by the bars.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me total number of vote id by state in a histogram, and could you rank x axis from high to low order please?", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, compute the total number of states, and sum their vote id with a bar chart, could you list in descending by the X please?", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me total number of vote id by state in a histogram, and rank y axis in ascending order.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY SUM(vote_id) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY SUM(vote_id) ASC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, compute the total number of states, and sum their vote id with a bar chart, and display sum vote id in ascending order.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY SUM(vote_id) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY SUM(vote_id) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me total number of vote id by state in a histogram, and I want to list in desc by the y-axis.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY SUM(vote_id) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY SUM(vote_id) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, compute the total number of states, and sum their vote id with a bar chart, and could you list by the Y-axis from high to low?", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY SUM(vote_id) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY SUM(vote_id) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, compute the total number of states, and compute the average of their vote id with a bar chart, and order by the x axis in ascending.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis state y axis the average of vote id, and list bar from low to high order.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis state y axis the average of vote id, and show bars from high to low order please.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, compute the total number of states, and compute the average of their vote id with a bar chart, and list in descending by the bar.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, compute the total number of states, and compute the average of their vote id with a bar chart, list in ascending by the mean vote id please.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY AVG(vote_id) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY AVG(vote_id) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis state y axis the average of vote id, and order by the mean vote id in ascending please.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY AVG(vote_id) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY AVG(vote_id) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis state y axis the average of vote id, and list mean vote id in descending order.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY AVG(vote_id) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY AVG(vote_id) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the states of all votes, compute the total number of states, and compute the average of their vote id with a bar chart, and list total number in desc order.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY AVG(vote_id) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY AVG(vote_id) DESC"}, "hardness": "Medium"}, {"nl_queries": "Group by distinct states and them count them in a bar chart, I want to order x-axis from low to high order.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis state y axis the number of state, could you list in asc by the bars?", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of distinct states? Show me a bar chart, rank x axis in ascending order please.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis state y axis the number of state, I want to sort in descending by the bars please.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of distinct states? Show me a bar chart, show in desc by the names.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "Group by distinct states and them count them in a bar chart, and I want to order by the x axis in descending.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state DESC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state DESC"}, "hardness": "Medium"}, {"nl_queries": "Group by distinct states and them count them in a bar chart, and I want to list by the y-axis in ascending.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of distinct states? Show me a bar chart, list by the y axis from low to high.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis state y axis the number of state, and I want to order Y-axis in asc order.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis state y axis the number of state, and sort by the how many state in descending.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of distinct states? Show me a bar chart, I want to list by the Y-axis in descending please.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC"}, "hardness": "Medium"}, {"nl_queries": "Group by distinct states and them count them in a bar chart, and I want to list by the Y-axis in descending please.", "db_id": "voter_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each advisor, report the total number of students advised by him or her. Plot them as scatter chart.", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor", "binning": ""}, "VQL": "Visualize SCATTER SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor"}, "hardness": "Easy"}, {"nl_queries": "Visualize a scatter chart on how many students does each advisor have?", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor", "binning": ""}, "VQL": "Visualize SCATTER SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor"}, "hardness": "Easy"}, {"nl_queries": "A scatter chart about how many students does each advisor have?", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor", "binning": ""}, "VQL": "Visualize SCATTER SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor"}, "hardness": "Easy"}, {"nl_queries": "How many students does each advisor have. ", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor", "binning": ""}, "VQL": "Visualize SCATTER SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor"}, "hardness": "Easy"}, {"nl_queries": "Scatter plot to show advisor on x axis and the total number on y axis.", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor", "binning": ""}, "VQL": "Visualize SCATTER SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor"}, "hardness": "Easy"}, {"nl_queries": "Report the distinct registration date and bin the date into the weekday interval in a bar chart.", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD", "binning": "BIN Registration_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD BIN Registration_Date BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart shows the distinct registration date, and bin the date into the weekday interval in a bar chart.", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD", "binning": "BIN Registration_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD BIN Registration_Date BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Show how many registration date from each registration date", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD", "binning": "BIN Registration_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD BIN Registration_Date BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Show how many registration date from each registration date, and I want to display by the the number of registration date in ascending.", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) ASC", "binning": "BIN Registration_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) ASC BIN Registration_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Report the distinct registration date and bin the date into the weekday interval in a bar chart, and order Y in asc order.", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) ASC", "binning": "BIN Registration_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) ASC BIN Registration_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart shows the distinct registration date, and bin the date into the weekday interval in a bar chart, and show by the y axis in asc.", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) ASC", "binning": "BIN Registration_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) ASC BIN Registration_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show how many registration date from each registration date, and I want to display Y in desc order.", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) DESC", "binning": "BIN Registration_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) DESC BIN Registration_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart shows the distinct registration date, and bin the date into the weekday interval in a bar chart, and sort by the y axis from high to low please.", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) DESC", "binning": "BIN Registration_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) DESC BIN Registration_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Report the distinct registration date and bin the date into the weekday interval in a bar chart, and sort by the y axis from high to low please.", "db_id": "voter_2", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) DESC", "binning": "BIN Registration_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) DESC BIN Registration_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show the name and age for all male people who don't have a wedding by a pie chart.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)"}, "hardness": "Easy"}, {"nl_queries": "Show the name and age for all male people who don't have a wedding. Visualize by pie chart.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)", "binning": ""}, "VQL": "Visualize PIE SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)"}, "hardness": "Easy"}, {"nl_queries": "Show the name and age for all male people who don't have a wedding with a bar chart.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about the name and age for all male people who don't have a wedding. ", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)"}, "hardness": "Easy"}, {"nl_queries": "How many churches open each year? Convert the year into the weekday interval and visualize with a bar chart.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church BIN Open_Date BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis open date y axis how many open date", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church BIN Open_Date BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "A line chart shows how many churches open each year?", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date", "binning": ""}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date"}, "hardness": "Easy"}, {"nl_queries": "Give me the trend about the number of church opening in each year.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date", "binning": ""}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date"}, "hardness": "Easy"}, {"nl_queries": "Show me a line chart of how the number of open date change over the open date", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date", "binning": ""}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date"}, "hardness": "Easy"}, {"nl_queries": "Show the number of opening years for three churches that opened most recently in a bar chart.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church GROUP BY Open_Date ORDER BY open_date DESC LIMIT 3", "binning": ""}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church GROUP BY Open_Date ORDER BY open_date DESC LIMIT 3"}, "hardness": "Medium"}, {"nl_queries": "Show the number of opening years for three churches that opened most recently in a bar chart. Bin the year into the weekday interval.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY open_date DESC LIMIT 3", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY open_date DESC LIMIT 3 BIN Open_Date BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "Show the proportion of the number of countries for all people whose age is smaller than the average.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country"}, "hardness": "Medium"}, {"nl_queries": "A pie chart about the proportion of the number of countries for all people whose age is smaller than the average.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country"}, "hardness": "Medium"}, {"nl_queries": "Show the number of countries for all people whose age is smaller than the average.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about the number of countries for all people whose age is smaller than the average.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country"}, "hardness": "Medium"}, {"nl_queries": "Show all countries and the number of people from each country in a pie chart.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , count(*) FROM people GROUP BY country"}, "hardness": "Easy"}, {"nl_queries": "Show all countries and the number of people from each country. ", "db_id": "wedding", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , count(*) FROM people GROUP BY country"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the total number from different country.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country", "binning": ""}, "VQL": "Visualize PIE SELECT Country , count(*) FROM people GROUP BY country"}, "hardness": "Easy"}, {"nl_queries": "Show all countries and the number of people from each country with a bar chart.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country"}, "hardness": "Easy"}, {"nl_queries": "Show all countries and the number of people from each country. ", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for the total number of each country", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country"}, "hardness": "Easy"}, {"nl_queries": "Please compare the number of the church by open date (bin into the weekday) using a bar chart.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart that bin the open date into a day of the week interval and count them.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of open date versus the number of open date", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Please show the trend of the number of the church by open date (bin into the year) using a line chart.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church", "binning": "BIN Open_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Visualize a line chart that bins the open date into the Year interval and counts them.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church", "binning": "BIN Open_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "I want to see trend of the number of open date by open date", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church", "binning": "BIN Open_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church BIN Open_Date BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Show the name and age for all male people who don't have a wedding with a bar chart, and I want to show from low to high by the names.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about the name and age for all male people who don't have a wedding, could you display by the x axis in ascending?", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the name and age for all male people who don't have a wedding with a bar chart, and list by the x axis in descending please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about the name and age for all male people who don't have a wedding, and could you rank in desc by the X please?", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about the name and age for all male people who don't have a wedding, and could you order y-axis in ascending order?", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Age ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the name and age for all male people who don't have a wedding with a bar chart, list from low to high by the Y-axis.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Age ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Age ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about the name and age for all male people who don't have a wedding, and show by the Y in descending please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Age DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the name and age for all male people who don't have a wedding with a bar chart, and list from high to low by the Y.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Age DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Age DESC"}, "hardness": "Medium"}, {"nl_queries": "How many churches open each year? Convert the year into the weekday interval and visualize with a bar chart, and display in ascending by the Y-axis.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) ASC", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis open date y axis how many open date, and order in asc by the y-axis.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) ASC", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "How many churches open each year? Convert the year into the weekday interval and visualize with a bar chart, and rank total number in desc order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) DESC", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) DESC BIN Open_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis open date y axis how many open date, rank total number in desc order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) DESC", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM Church  ORDER BY COUNT(Open_Date) DESC BIN Open_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Give me the trend about the number of church opening in each year, and display X-axis from low to high order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me a line chart of how the number of open date change over the open date, and I want to display by the x-axis from low to high.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date ASC"}, "hardness": "Easy"}, {"nl_queries": "A line chart shows how many churches open each year?, I want to sort by the X-axis from low to high.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me a line chart of how the number of open date change over the open date, list by the Open_Date in desc please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me the trend about the number of church opening in each year, could you show by the X-axis in desc?", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date DESC"}, "hardness": "Easy"}, {"nl_queries": "A line chart shows how many churches open each year?, and list x axis from high to low order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date DESC"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about the number of countries for all people whose age is smaller than the average, list in ascending by the x-axis.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of countries for all people whose age is smaller than the average, display by the x-axis in ascending.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country ASC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about the number of countries for all people whose age is smaller than the average, and could you display in desc by the X-axis?", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country DESC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of countries for all people whose age is smaller than the average, could you rank in descending by the names?", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about the number of countries for all people whose age is smaller than the average, display Y in ascending order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of countries for all people whose age is smaller than the average, order from low to high by the total number.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) ASC"}, "hardness": "Hard"}, {"nl_queries": "Show the number of countries for all people whose age is smaller than the average, display Y-axis in desc order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Hard"}, {"nl_queries": "A bar chart about the number of countries for all people whose age is smaller than the average, and display by the total number in descending.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) DESC"}, "hardness": "Hard"}, {"nl_queries": "Show all countries and the number of people from each country with a bar chart, rank bar in asc order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each country, I want to list by the x axis in ascending.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all countries and the number of people from each country, rank bar in asc order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all countries and the number of people from each country, and display bar in descending order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all countries and the number of people from each country with a bar chart, I want to sort Country from high to low order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each country, rank by the X-axis from high to low.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each country, could you order from low to high by the the total number ?", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all countries and the number of people from each country, I want to display in asc by the y axis please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all countries and the number of people from each country with a bar chart, order y axis from low to high order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show all countries and the number of people from each country with a bar chart, and show Y in descending order please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show all countries and the number of people from each country, order Y in descending order please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the total number of each country, and display from high to low by the Y-axis.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart that bin the open date into a day of the week interval and count them, and list in ascending by the total number please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) ASC", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of open date versus the number of open date, show in ascending by the y axis.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) ASC", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Please compare the number of the church by open date (bin into the weekday) using a bar chart, rank y axis in asc order please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) ASC", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) ASC BIN Open_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart that bin the open date into a day of the week interval and count them, and sort from high to low by the Y-axis.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) DESC", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) DESC BIN Open_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Please compare the number of the church by open date (bin into the weekday) using a bar chart, and order total number from high to low order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) DESC", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) DESC BIN Open_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of open date versus the number of open date, and order from high to low by the total number.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) DESC", "binning": "BIN Open_Date BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) DESC BIN Open_Date BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Visualize a line chart that bins the open date into the Year interval and counts them, I want to rank in ascending by the x-axis please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date ASC", "binning": "BIN Open_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date ASC BIN Open_Date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Please show the trend of the number of the church by open date (bin into the year) using a line chart, and I want to rank x axis from low to high order.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date ASC", "binning": "BIN Open_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date ASC BIN Open_Date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "I want to see trend of the number of open date by open date, and list by the X-axis in asc.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date ASC", "binning": "BIN Open_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date ASC BIN Open_Date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Visualize a line chart that bins the open date into the Year interval and counts them, and could you sort X-axis in descending order?", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC", "binning": "BIN Open_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC BIN Open_Date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Please show the trend of the number of the church by open date (bin into the year) using a line chart, and display by the x-axis in descending please.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC", "binning": "BIN Open_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC BIN Open_Date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "I want to see trend of the number of open date by open date, display by the Open_Date from high to low.", "db_id": "wedding", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC", "binning": "BIN Open_Date BY YEAR"}, "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC BIN Open_Date BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "What is the correlation between the average price and the score of wines of each appellation?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(Price) , avg(Score) FROM WINE GROUP BY avg(Price)", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(Price) , avg(Score) FROM WINE GROUP BY avg(Price)"}, "hardness": "Medium"}, {"nl_queries": "What are the average price and score of wines for each appellation? Show me a scatter plot.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(Price) , avg(Score) FROM WINE GROUP BY avg(Price)", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(Price) , avg(Score) FROM WINE GROUP BY avg(Price)"}, "hardness": "Medium"}, {"nl_queries": "Give me a scatter chart about the correlation between the average price and the score of wines grouped by appellation?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(Price) , avg(Score) FROM WINE GROUP BY avg(Price)", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(Price) , avg(Score) FROM WINE GROUP BY avg(Price)"}, "hardness": "Medium"}, {"nl_queries": "Show me a scatter plot of avg(price) and the average of score for .", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT avg(Price) , avg(Score) FROM WINE GROUP BY avg(Price)", "binning": ""}, "VQL": "Visualize SCATTER SELECT avg(Price) , avg(Score) FROM WINE GROUP BY avg(Price)"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart that counts the number of grape of wine.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape"}, "hardness": "Easy"}, {"nl_queries": "What is the number of different grapes of each wine? Show me a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for how many grape of each grape", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for listing the number of grapes, whose score is higher than 93 ordered by Name.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE WHERE Score > 93 GROUP BY Grape ORDER BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE WHERE Score > 93 GROUP BY Grape ORDER BY Name"}, "hardness": "Hard"}, {"nl_queries": "What is the number of grapes with scores above 93, sorted by Name? Visualize by a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE WHERE Score > 93 GROUP BY Grape ORDER BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE WHERE Score > 93 GROUP BY Grape ORDER BY Name"}, "hardness": "Hard"}, {"nl_queries": "A bar chart shows the number of appellations whose score is higher than 93, and ordered by Name.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Appelation ORDER BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Appelation ORDER BY Name"}, "hardness": "Hard"}, {"nl_queries": "For those appellations whose score is higher than 93, return a stacked to group them by appellation, count appellation, and ordered by Name", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Grape ,  Appelation ORDER BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Grape ,  Appelation ORDER BY Name"}, "hardness": "Extra Hard"}, {"nl_queries": "List the number of areas of all appellations in the bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart for what is the number of areas for all appellations?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart about the number of areas for all appellations.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for the number of area of each area", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area"}, "hardness": "Easy"}, {"nl_queries": "List the number of counties of all appellations in a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County"}, "hardness": "Easy"}, {"nl_queries": "What is the number of counties for all appellations?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart about the number of counties for all appellations?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County"}, "hardness": "Easy"}, {"nl_queries": "Plot the number of county by grouped by county as a bar graph", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County"}, "hardness": "Easy"}, {"nl_queries": "What are the number of the wines that have prices lower than 50 and have appelations in Monterey county?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name"}, "hardness": "Hard"}, {"nl_queries": "Give the neames of wines with prices below 50 and with appelations in Monterey county, and count them by a bar chart", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for what are the number of the wines that have prices lower than 50 and have appelations in Monterey county?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name"}, "hardness": "Hard"}, {"nl_queries": "What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name"}, "hardness": "Hard"}, {"nl_queries": "For those wines whose price is bigger than 100, count their total number of each year and sort by year in a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Year ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Year ORDER BY YEAR"}, "hardness": "Extra Hard"}, {"nl_queries": "List the number of wines whose price is bigger than 100 ordered by year, group by grape, and visualize with a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "What is the number of wines with price higher than 100, sorted by year, group by grape and show by bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "A bar chart listing the number of wines whose price is bigger than 100 ordered by year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "What is the number of wines with price higher than 100, sorted by year? Visualize them by a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "A bar chart for how many wines whose price is bigger than 100 ordered by year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "For those wines with a price is bigger than 100, count then and group by year, order by year. Visualize the result with a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "A bar chart showing the number of those wines with a price is bigger than 100 and order by year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "A stacked bar chart that computes the total number of wines with a price is bigger than 100 of each year, and group by grape. Next, Bin the year into the weekday interval. ", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR BIN Year BY WEEKDAY"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart that computes the total number of wines with a price is bigger than 100. Next, Bin the year into the weekday interval.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "How many wines with a price higher than 100 of each year? Show a bar chart that converts year into weekday interval.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape", "binning": ""}, "VQL": "Visualize PIE SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape"}, "hardness": "Medium"}, {"nl_queries": "Give me a pie chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape", "binning": ""}, "VQL": "Visualize PIE SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape"}, "hardness": "Medium"}, {"nl_queries": "Visualize a pie chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape", "binning": ""}, "VQL": "Visualize PIE SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape"}, "hardness": "Medium"}, {"nl_queries": "Visualize the number of grape of the wines whose price is bigger than 100 with a bar chart, ordered the x-axis by year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "Visualize a pie chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR"}, "hardness": "Hard"}, {"nl_queries": "List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery"}, "hardness": "Hard"}, {"nl_queries": "List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery"}, "hardness": "Hard"}, {"nl_queries": "List the number of winery of the wines whose price is bigger than 100 in a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart about the number of winery of the wines whose price is bigger than 100.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery"}, "hardness": "Medium"}, {"nl_queries": "Compare the number of winery of the wines whose price is bigger than 100.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery"}, "hardness": "Medium"}, {"nl_queries": "Find the country of all appellations who have at most three wines, and visualize them in a bar chart", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County"}, "hardness": "Medium"}, {"nl_queries": "What are the countries for applications with at most 3 wines? Return the result in a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for those countries of all appellations who have at most three wines", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County"}, "hardness": "Medium"}, {"nl_queries": "what are the numbers of wines for different grapes?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape"}, "hardness": "Easy"}, {"nl_queries": "Display a bar chart for what are the numbers of wines for different grapes?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape"}, "hardness": "Easy"}, {"nl_queries": "What are the numbers of wines for different grapes. Plot them as bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about how many wines are there for each grape?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on how many wines are there for each grape?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape"}, "hardness": "Easy"}, {"nl_queries": "How many wines are there for each grape. ", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape"}, "hardness": "Easy"}, {"nl_queries": "Show me the total number by grape in a histogram", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape"}, "hardness": "Easy"}, {"nl_queries": "Bin the year attribute into the Year interval and count them for a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for the number of year of each year", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Give me a tendency forwhat are the average prices of wines for different years?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "What are the average prices of wines for different years. Show the trend.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Display a line chart for what is the average prices of wines for each each?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Draw a line chart for what is the average prices of wines for each each?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "What is the average prices of wines for each each. Visualize by line chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Plot year by mean price as a line chart", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Sum the average prices of wines for different years, and bin year attribute into weekday interval for a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , SUM(avg(Price)) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , SUM(avg(Price)) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis year y axis total number of avg(price)", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , SUM(avg(Price)) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , SUM(avg(Price)) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the number of year of the maximum price and score of wines, and bin the year into the weekday interval.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Show the number of year of the maximum price and score of wines in a bar chart, and bin the year into the weekday interval.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show how many year from different year", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "What are the maximum score of wines in each year?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year"}, "hardness": "Easy"}, {"nl_queries": "Show me the trend aboutthe maximum score of wines for each year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year"}, "hardness": "Easy"}, {"nl_queries": "Give me a line chart about each year's maximum score .", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year"}, "hardness": "Easy"}, {"nl_queries": "Can you draw the trend of maximal score over the year?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about the average of maximum price of wines each year, bin the year into the weekday interval.\n\n\n", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Price)) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Price)) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Compare the average of maximum price of wines each year, bin the year into the weekday interval.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Price)) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Price)) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Compare the average of maximum price of wines each year, bin the year into the weekday interval and draw a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Price)) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Price)) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Show mean max(price) from each year", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Price)) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Price)) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about the average of maximum score of wines each year, bin the year into the weekday interval.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Compare the average of maximum score of wines each year, bin the year into the weekday interval.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Compare the average of maximum score of wines each year, bin the year into the weekday interval and draw a bar chart.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for mean max(score) of each year", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE BIN Year BY WEEKDAY"}, "hardness": "Easy"}, {"nl_queries": "What is the maximum price of wines in each year?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year"}, "hardness": "Easy"}, {"nl_queries": "Show me the trend about  the maximum price of wines for each year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year"}, "hardness": "Easy"}, {"nl_queries": "Given a line chart about the maximum price of wines for each year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year"}, "hardness": "Easy"}, {"nl_queries": "Visualize the general trend of maximal price over the year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year"}, "hardness": "Easy"}, {"nl_queries": "What is the correlation between the maximum price and the score of wines each year?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT max(Price) , max(Score) FROM WINE GROUP BY max(Price)", "binning": ""}, "VQL": "Visualize SCATTER SELECT max(Price) , max(Score) FROM WINE GROUP BY max(Price)"}, "hardness": "Easy"}, {"nl_queries": "Show me the correlation between the maximum price and the score of wines for each year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT max(Price) , max(Score) FROM WINE GROUP BY max(Price)", "binning": ""}, "VQL": "Visualize SCATTER SELECT max(Price) , max(Score) FROM WINE GROUP BY max(Price)"}, "hardness": "Easy"}, {"nl_queries": "A scatter, shows the correlation between the maximum price and the score of wines for each year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT max(Price) , max(Score) FROM WINE GROUP BY max(Price)", "binning": ""}, "VQL": "Visualize SCATTER SELECT max(Price) , max(Score) FROM WINE GROUP BY max(Price)"}, "hardness": "Easy"}, {"nl_queries": "Scatter plot to show max(price) on x axis and maximal score on y axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT max(Price) , max(Score) FROM WINE GROUP BY max(Price)", "binning": ""}, "VQL": "Visualize SCATTER SELECT max(Price) , max(Score) FROM WINE GROUP BY max(Price)"}, "hardness": "Easy"}, {"nl_queries": "Give me a bar chart for how many grape of each grape, could you show by the bar in asc?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of different grapes of each wine? Show me a bar chart, and display X-axis in ascending order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape ASC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart that counts the number of grape of wine, and I want to display in ascending by the X-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for how many grape of each grape, and I want to order by the bars in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of different grapes of each wine? Show me a bar chart, rank names from high to low order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart that counts the number of grape of wine, and sort from high to low by the bars.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart that counts the number of grape of wine, list in ascending by the total number.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for how many grape of each grape, and sort by the total number in asc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of different grapes of each wine? Show me a bar chart, and sort y axis in asc order please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of different grapes of each wine? Show me a bar chart, I want to sort by the Y-axis in desc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) DESC"}, "hardness": "Medium"}, {"nl_queries": "Please give me a bar chart that counts the number of grape of wine, could you sort Y from high to low order?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for how many grape of each grape, and I want to sort by the total number in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of areas of all appellations in the bar chart, I want to display from low to high by the x-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart for what is the number of areas for all appellations?, I want to display from low to high by the x-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart about the number of areas for all appellations, order by the Area in asc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of area of each area, and order by the Area in asc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart about the number of areas for all appellations, rank from high to low by the x-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart for what is the number of areas for all appellations?, and could you show X-axis in desc order?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of areas of all appellations in the bar chart, rank from high to low by the x-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of area of each area, display by the x-axis in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of areas of all appellations in the bar chart, and I want to show y axis in ascending order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart for what is the number of areas for all appellations?, and could you rank y axis in asc order please?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of area of each area, and I want to show y axis in ascending order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart about the number of areas for all appellations, and I want to show y axis in ascending order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of area of each area, sort by the Y from high to low.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart for what is the number of areas for all appellations?, and show y axis from high to low order please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of areas of all appellations in the bar chart, rank by the total number from high to low.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart about the number of areas for all appellations, sort in desc by the total number.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of counties of all appellations in a bar chart, and I want to list in ascending by the bars.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of counties for all appellations?, I want to rank bars in asc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of county by grouped by county as a bar graph, and I want to list in ascending by the bars.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the number of counties for all appellations?, and I want to list in ascending by the bars.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County ASC"}, "hardness": "Medium"}, {"nl_queries": "List the number of counties of all appellations in a bar chart, and display in desc by the X-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of county by grouped by county as a bar graph, display in descending by the x axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of counties for all appellations?, and I want to order bars from high to low order please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the number of counties for all appellations?, I want to order bars from high to low order please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the number of counties for all appellations?, and could you display in ascending by the Y?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of counties for all appellations?, and order Y-axis in ascending order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) ASC"}, "hardness": "Medium"}, {"nl_queries": "List the number of counties of all appellations in a bar chart, show by the y-axis from low to high.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of county by grouped by county as a bar graph, and order Y-axis in ascending order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot the number of county by grouped by county as a bar graph, and list by the y axis in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC"}, "hardness": "Medium"}, {"nl_queries": "List the number of counties of all appellations in a bar chart, and list by the Y-axis in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of counties for all appellations?, and list by the Y-axis in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart about the number of counties for all appellations?, and list by the y axis in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart, rank x axis from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, and show Name from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give the neames of wines with prices below 50 and with appelations in Monterey county, and count them by a bar chart, sort X from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, and order by the X from low to high please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, and display by the x-axis in desc please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give the neames of wines with prices below 50 and with appelations in Monterey county, and count them by a bar chart, sort from high to low by the bars please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart, list x axis from high to low order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, and display by the x-axis in desc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY Name DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, could you sort the number of name from low to high order?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, display in asc by the Y.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart, rank total number from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give the neames of wines with prices below 50 and with appelations in Monterey county, and count them by a bar chart, show in asc by the Y.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "Give the neames of wines with prices below 50 and with appelations in Monterey county, and count them by a bar chart, sort y-axis from high to low order please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart for what are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, I want to sort by the Y in descending please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, sort y-axis from high to low order please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart, and order in desc by the y axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "A bar chart that computes the total number of wines with a price is bigger than 100 Next, Bin the year into the weekday interval, rank y-axis from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "How many wines with a price higher than 100 of each year? Show a bar chart that converts year into weekday interval, and I want to show by the Y in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "A bar chart that computes the total number of wines with a price is bigger than 100 Next, Bin the year into the weekday interval, and I want to rank by the y axis in desc please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "How many wines with a price higher than 100 of each year? Show a bar chart that converts year into weekday interval, and I want to rank from high to low by the total number.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY"}, "hardness": "Hard"}, {"nl_queries": "List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries, and display in ascending by the bars.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries, order x axis in asc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries, display by the X in desc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries, could you show bar in desc order please?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries, and show y-axis in asc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries, and display by the total number from low to high.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries, show by the y-axis from high to low.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries, and could you show by the y axis in descending?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Compare the number of winery of the wines whose price is bigger than 100, and could you order bar in asc order please?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC"}, "hardness": "Hard"}, {"nl_queries": "List the number of winery of the wines whose price is bigger than 100 in a bar chart, rank from low to high by the names please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart about the number of winery of the wines whose price is bigger than 100, and rank X in ascending order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart about the number of winery of the wines whose price is bigger than 100, sort bars from high to low order please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery DESC"}, "hardness": "Hard"}, {"nl_queries": "List the number of winery of the wines whose price is bigger than 100 in a bar chart, rank names from high to low order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery DESC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of winery of the wines whose price is bigger than 100, and show by the x-axis from high to low.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery DESC"}, "hardness": "Hard"}, {"nl_queries": "List the number of winery of the wines whose price is bigger than 100 in a bar chart, and I want to rank in asc by the Y-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) ASC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart about the number of winery of the wines whose price is bigger than 100, and rank by the Y-axis in asc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) ASC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of winery of the wines whose price is bigger than 100, and could you sort total number from low to high order?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) ASC"}, "hardness": "Hard"}, {"nl_queries": "Compare the number of winery of the wines whose price is bigger than 100, I want to show by the y axis from high to low.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) DESC"}, "hardness": "Hard"}, {"nl_queries": "Visualize a bar chart about the number of winery of the wines whose price is bigger than 100, and order from high to low by the Y-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) DESC"}, "hardness": "Hard"}, {"nl_queries": "List the number of winery of the wines whose price is bigger than 100 in a bar chart, could you display in descending by the total number please?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the country of all appellations who have at most three wines, and visualize them in a bar chart, list X-axis in asc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County ASC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart for those countries of all appellations who have at most three wines, sort x axis in asc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the countries for applications with at most 3 wines? Return the result in a bar chart, and could you display County in ascending order?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the countries for applications with at most 3 wines? Return the result in a bar chart, I want to list from high to low by the x-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart for those countries of all appellations who have at most three wines, I want to list from high to low by the x-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County DESC"}, "hardness": "Hard"}, {"nl_queries": "Find the country of all appellations who have at most three wines, and visualize them in a bar chart, and I want to list by the County in desc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart for those countries of all appellations who have at most three wines, I want to sort by the Y from low to high please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) ASC"}, "hardness": "Hard"}, {"nl_queries": "What are the countries for applications with at most 3 wines? Return the result in a bar chart, and sort Y-axis in asc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the country of all appellations who have at most three wines, and visualize them in a bar chart, and rank in ascending by the Y-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) ASC"}, "hardness": "Hard"}, {"nl_queries": "Find the country of all appellations who have at most three wines, and visualize them in a bar chart, and show from high to low by the Y-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the countries for applications with at most 3 wines? Return the result in a bar chart, could you display in desc by the Y?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) DESC"}, "hardness": "Hard"}, {"nl_queries": "Give me a bar chart for those countries of all appellations who have at most three wines, order y axis in descending order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) DESC"}, "hardness": "Hard"}, {"nl_queries": "What are the numbers of wines for different grapes Plot them as bar chart, and list from low to high by the Grape please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC"}, "hardness": "Medium"}, {"nl_queries": "How many wines are there for each grape, and I want to display by the X in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many wines are there for each grape?, sort in ascending by the Grape.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC"}, "hardness": "Medium"}, {"nl_queries": "what are the numbers of wines for different grapes?, display by the X-axis in asc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the numbers of wines for different grapes?, and list from low to high by the bars.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by grape in a histogram, and display by the X-axis in asc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many wines are there for each grape?, list from low to high by the Grape please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC"}, "hardness": "Medium"}, {"nl_queries": "How many wines are there for each grape, and show x-axis from high to low order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many wines are there for each grape?, rank by the bars from high to low.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "what are the numbers of wines for different grapes?, and show x-axis from high to low order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the numbers of wines for different grapes Plot them as bar chart, sort by the bar in desc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by grape in a histogram, sort by the bar in desc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many wines are there for each grape?, I want to list in desc by the x axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the numbers of wines for different grapes?, and I want to show from high to low by the Grape.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC"}, "hardness": "Medium"}, {"nl_queries": "How many wines are there for each grape, sort y axis from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many wines are there for each grape?, order by the Y from low to high.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the numbers of wines for different grapes?, and order by the total number in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many wines are there for each grape?, order by the total number in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by grape in a histogram, and show from low to high by the y axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "what are the numbers of wines for different grapes?, and rank total number in ascending order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the numbers of wines for different grapes Plot them as bar chart, show by the the total number in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many wines are there for each grape?, and display by the the total number in desc please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many wines are there for each grape, display by the the total number in desc please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the numbers of wines for different grapes Plot them as bar chart, and I want to rank in descending by the the total number .", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number by grape in a histogram, and show Y-axis in descending order please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "what are the numbers of wines for different grapes?, and I want to rank in descending by the the total number .", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many wines are there for each grape?, and I want to list the total number in desc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a bar chart for what are the numbers of wines for different grapes?, display by the the total number in desc please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of year of each year, order by the how many year in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bin the year attribute into the Year interval and count them for a bar chart, and order by the how many year in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for the number of year of each year, and rank total number in desc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bin the year attribute into the Year interval and count them for a bar chart, and rank total number in desc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "What are the average prices of wines for different years Show the trend, and list x axis in asc order please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the average prices of wines for each each Visualize by line chart, rank by the X in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC"}, "hardness": "Medium"}, {"nl_queries": "Plot year by mean price as a line chart, and sort x axis from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a line chart for what is the average prices of wines for each each?, sort x axis from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC"}, "hardness": "Medium"}, {"nl_queries": "Display a line chart for what is the average prices of wines for each each?, and display in ascending by the x-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a tendency forwhat are the average prices of wines for different years?, and could you list by the X in asc please?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the average prices of wines for different years Show the trend, list by the X-axis in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC"}, "hardness": "Medium"}, {"nl_queries": "Display a line chart for what is the average prices of wines for each each?, list by the X-axis in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a tendency forwhat are the average prices of wines for different years?, and could you show by the X from high to low?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC"}, "hardness": "Medium"}, {"nl_queries": "Plot year by mean price as a line chart, rank from high to low by the x axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a line chart for what is the average prices of wines for each each?, and show in desc by the x-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the average prices of wines for each each Visualize by line chart, and rank from high to low by the x axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC"}, "hardness": "Medium"}, {"nl_queries": "Sum the average prices of wines for different years, and bin year attribute into weekday interval for a bar chart, list from low to high by the Y.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis year y axis total number of avg(price), and list from low to high by the Y.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Sum the average prices of wines for different years, and bin year attribute into weekday interval for a bar chart, I want to list by the total number from high to low.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis year y axis total number of avg(price), order in desc by the sum avg(price).", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show the number of year of the maximum price and score of wines in a bar chart, and bin the year into the weekday interval, could you order by the Y from low to high?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many year from different year, and rank y-axis from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the number of year of the maximum price and score of wines, and bin the year into the weekday interval, and list total number from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show the number of year of the maximum price and score of wines in a bar chart, and bin the year into the weekday interval, and could you order y axis from high to low order?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the number of year of the maximum price and score of wines, and bin the year into the weekday interval, could you rank by the y axis in desc?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many year from different year, sort the number of year in desc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "What are the maximum score of wines in each year?, and show in asc by the X.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC"}, "hardness": "Easy"}, {"nl_queries": "Give me a line chart about each year's maximum score , I want to order x axis from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me the trend aboutthe maximum score of wines for each year, and I want to order by the Year from low to high.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC"}, "hardness": "Easy"}, {"nl_queries": "Can you draw the trend of maximal score over the year?, sort X in asc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC"}, "hardness": "Easy"}, {"nl_queries": "Can you draw the trend of maximal score over the year?, rank by the x-axis in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year DESC"}, "hardness": "Easy"}, {"nl_queries": "What are the maximum score of wines in each year?, and list by the Year in descending please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me the trend aboutthe maximum score of wines for each year, rank Year in desc order please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year DESC"}, "hardness": "Easy"}, {"nl_queries": "Give me a line chart about each year's maximum score , and rank by the x-axis in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year DESC"}, "hardness": "Easy"}, {"nl_queries": "Compare the average of maximum price of wines each year, bin the year into the weekday interval, and I want to display in asc by the y axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about the average of maximum price of wines each year, bin the year into the weekday interval\n\n\n, I want to display in asc by the y axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Compare the average of maximum price of wines each year, bin the year into the weekday interval and draw a bar chart, could you list from low to high by the Y-axis?", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show mean max(price) from each year, display in ascending by the Y.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Compare the average of maximum price of wines each year, bin the year into the weekday interval, list from high to low by the y-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Show mean max(price) from each year, rank from high to low by the total number.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about the average of maximum price of wines each year, bin the year into the weekday interval\n\n\n, order by the total number in desc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Compare the average of maximum price of wines each year, bin the year into the weekday interval and draw a bar chart, order by the total number in desc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Compare the average of maximum score of wines each year, bin the year into the weekday interval, and sort by the total number in asc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Compare the average of maximum score of wines each year, bin the year into the weekday interval and draw a bar chart, and rank from low to high by the Y-axis.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean max(score) of each year, and sort by the y-axis in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about the average of maximum score of wines each year, bin the year into the weekday interval, sort by the total number in asc.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Compare the average of maximum score of wines each year, bin the year into the weekday interval, and show by the Y-axis from high to low.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about the average of maximum score of wines each year, bin the year into the weekday interval, and I want to show in descending by the total number.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Compare the average of maximum score of wines each year, bin the year into the weekday interval and draw a bar chart, and list Y from high to low order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Give me a bar chart for mean max(score) of each year, and show by the Y-axis from high to low.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) DESC", "binning": "BIN Year BY WEEKDAY"}, "VQL": "Visualize BAR SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) DESC BIN Year BY WEEKDAY"}, "hardness": "Medium"}, {"nl_queries": "Visualize the general trend of maximal price over the year, I want to sort X-axis in asc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC"}, "hardness": "Easy"}, {"nl_queries": "Given a line chart about the maximum price of wines for each year, display Year from low to high order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC"}, "hardness": "Easy"}, {"nl_queries": "Show me the trend about the maximum price of wines for each year, order by the x-axis in ascending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC"}, "hardness": "Easy"}, {"nl_queries": "What is the maximum price of wines in each year?, sort by the X-axis from low to high.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC"}, "hardness": "Easy"}, {"nl_queries": "What is the maximum price of wines in each year?, sort in desc by the Year.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year DESC"}, "hardness": "Easy"}, {"nl_queries": "Given a line chart about the maximum price of wines for each year, I want to show in descending by the x-axis please.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year DESC"}, "hardness": "Easy"}, {"nl_queries": "Visualize the general trend of maximal price over the year, list X in desc order.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year DESC"}, "hardness": "Easy"}, {"nl_queries": "Show me the trend about the maximum price of wines for each year, and display by the x axis in descending.", "db_id": "wine_1", "vis_query": {"vis_part": "Visualize LINE", "data_part": {"sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year DESC", "binning": ""}, "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year DESC"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the venue for each workshop.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue", "binning": ""}, "VQL": "Visualize PIE SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue"}, "hardness": "Easy"}, {"nl_queries": "Return the number of venues of each workshop in a pie chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue", "binning": ""}, "VQL": "Visualize PIE SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each venue.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue", "binning": ""}, "VQL": "Visualize PIE SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue"}, "hardness": "Easy"}, {"nl_queries": "A bar chart shows the venue for each workshop.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue"}, "hardness": "Easy"}, {"nl_queries": "Return the number of venues of each workshop in a bar chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart that counts the number of venues of each workshop.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue"}, "hardness": "Easy"}, {"nl_queries": "Show the number of venue from each venue", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue"}, "hardness": "Easy"}, {"nl_queries": "Group by the result and count them by a bar chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "For each submission, group its acceptance result and count them. Visualize them in a bar chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show how many result from different result", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "Show the authors of their total submissions with a pie chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author", "binning": ""}, "VQL": "Visualize PIE SELECT Author , COUNT(Author) FROM submission GROUP BY Author"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart for how many authors submit to the workshop.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author", "binning": ""}, "VQL": "Visualize PIE SELECT Author , COUNT(Author) FROM submission GROUP BY Author"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the number of author from different author.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author", "binning": ""}, "VQL": "Visualize PIE SELECT Author , COUNT(Author) FROM submission GROUP BY Author"}, "hardness": "Easy"}, {"nl_queries": "Show the authors of their total submissions with a bar chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for how many authors submit to the workshop.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing the number of author across author", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author"}, "hardness": "Easy"}, {"nl_queries": "Compute the proportion of acceptance result, and return a pie chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart to show the proportion of acceptance result.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "For each submission, group its acceptance result and count them. Visualize them in a bar chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion of the total number for each result.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result", "binning": ""}, "VQL": "Visualize PIE SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result"}, "hardness": "Easy"}, {"nl_queries": "Show each author and the number of workshops they submitted to in a pie chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize PIE SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "Show each author and the number of workshops they submitted to. Show a pie chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize PIE SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "Pie. how many workshops did each author submit to? Return the author name and the number of workshops.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize PIE SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "Visualize a pie chart with how many workshops did each author submit to? Return the author name and the number of workshops.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize PIE SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "How many workshops did each author submit to? Return the author name and the number of workshops by a pie chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize PIE SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "How many workshops did each author submit to? Return the author name and the number of workshops. Plot them as pie chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize PIE SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "Show each author and the number of workshops they submitted to with a bar chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "Show each author and the number of workshops they submitted to. Show bar chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "How many workshops did each author submit to? Return the author name and the number of workshops. Plot them as bar chart.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"}, "hardness": "Medium"}, {"nl_queries": "Show the number of venue from each venue, rank by the X in asc.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of venues of each workshop in a bar chart, and rank X-axis in ascending order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the venue for each workshop, could you sort from low to high by the names?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart that counts the number of venues of each workshop, and I want to order in ascending by the X.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue ASC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of venues of each workshop in a bar chart, display by the X in desc please.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart that counts the number of venues of each workshop, order from high to low by the x-axis please.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of venue from each venue, display by the X in desc please.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the venue for each workshop, and show by the x-axis from high to low.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of venues of each workshop in a bar chart, could you rank by the total number in asc?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart that counts the number of venues of each workshop, could you rank by the total number in asc?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the venue for each workshop, and could you display Y from low to high order please?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of venue from each venue, could you list by the Y-axis in asc please?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart that counts the number of venues of each workshop, and rank by the Y-axis in descending.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart shows the venue for each workshop, sort how many venue in desc order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of venue from each venue, sort how many venue in desc order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return the number of venues of each workshop in a bar chart, and could you rank y-axis in desc order?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many result from different result, sort in asc by the X.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result ASC"}, "hardness": "Medium"}, {"nl_queries": "Group by the result and count them by a bar chart, and list by the x-axis from low to high.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result ASC"}, "hardness": "Medium"}, {"nl_queries": "For each submission, group its acceptance result and count them Visualize them in a bar chart, and show in ascending by the X please.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result ASC"}, "hardness": "Medium"}, {"nl_queries": "For each submission, group its acceptance result and count them Visualize them in a bar chart, rank from high to low by the x axis.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result DESC"}, "hardness": "Medium"}, {"nl_queries": "Group by the result and count them by a bar chart, could you list by the x-axis in descending?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many result from different result, could you rank by the names from high to low?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result DESC"}, "hardness": "Medium"}, {"nl_queries": "Group by the result and count them by a bar chart, rank from low to high by the Y.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each submission, group its acceptance result and count them Visualize them in a bar chart, and I want to sort in ascending by the y axis.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many result from different result, and rank in ascending by the Y-axis.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each submission, group its acceptance result and count them Visualize them in a bar chart, and could you order by the Y in desc?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show how many result from different result, show by the y axis in descending.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) DESC"}, "hardness": "Medium"}, {"nl_queries": "Group by the result and count them by a bar chart, show from high to low by the y axis.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the authors of their total submissions with a bar chart, and display by the x axis in asc.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the number of author across author, could you list in asc by the Author?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many authors submit to the workshop, and list bars in asc order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the number of author across author, and show from high to low by the x axis.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many authors submit to the workshop, sort Author in descending order please.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the authors of their total submissions with a bar chart, and display x axis from high to low order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY Author DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the authors of their total submissions with a bar chart, display from low to high by the y-axis.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the number of author across author, and order total number from low to high order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many authors submit to the workshop, order total number from low to high order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing the number of author across author, and order y-axis from high to low order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the authors of their total submissions with a bar chart, and order from high to low by the how many author please.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many authors submit to the workshop, and rank in desc by the Y-axis.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show each author and the number of workshops they submitted to Show bar chart, and show by the bar in asc.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC"}, "hardness": "Medium"}, {"nl_queries": "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart, and could you display by the X in asc?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops, display names from low to high order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC"}, "hardness": "Medium"}, {"nl_queries": "Show each author and the number of workshops they submitted to with a bar chart, and display by the x-axis from low to high.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops, display by the x-axis from low to high.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC"}, "hardness": "Medium"}, {"nl_queries": "How many workshops did each author submit to? Return the author name and the number of workshops Plot them as bar chart, and list X-axis in asc order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author ASC"}, "hardness": "Medium"}, {"nl_queries": "Show each author and the number of workshops they submitted to Show bar chart, and I want to order x-axis in descending order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC"}, "hardness": "Medium"}, {"nl_queries": "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart, could you order names in desc order?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC"}, "hardness": "Medium"}, {"nl_queries": "How many workshops did each author submit to? Return the author name and the number of workshops Plot them as bar chart, and display bar in desc order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops, and could you order names in desc order?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops, and could you rank by the X-axis in desc?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC"}, "hardness": "Medium"}, {"nl_queries": "Show each author and the number of workshops they submitted to with a bar chart, and could you rank by the X-axis in desc?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC"}, "hardness": "Medium"}, {"nl_queries": "Show each author and the number of workshops they submitted to with a bar chart, and display in asc by the Y-axis please.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many workshops did each author submit to? Return the author name and the number of workshops Plot them as bar chart, and I want to show by the y axis from low to high.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart, rank Y-axis from low to high order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops, sort workshop_id) in ascending order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show each author and the number of workshops they submitted to Show bar chart, show in asc by the total number.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops, and show total number in asc order.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show each author and the number of workshops they submitted to with a bar chart, could you order workshop_id) in desc order?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show each author and the number of workshops they submitted to Show bar chart, show by the Y-axis in desc.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops, and could you sort Y from high to low order?", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart, and order from high to low by the Y-axis.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops, order in descending by the y axis.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many workshops did each author submit to? Return the author name and the number of workshops Plot them as bar chart, display in descending by the Y.", "db_id": "workshop_paper", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC"}, "hardness": "Medium"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, show their total population with a bar chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "What is the total population corresponding to continents that have an average life expectancy of less than 72? Visualize them in a bar chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing sum population across continent", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "A pie chart shows the average life expectancy for each continent where the average life expectancy is shorter than 72.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize PIE SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "For continents that have an average life expectancy less than 72, shows their average life expectancy with a pie chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize PIE SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "Compute the total mean lifeexpectancy across continent as a pie chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize PIE SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, draw a bar chart to show their average life expectancy.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart showing average life expectancy of  each continent where the average life expectancy is shorter than 72.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of continent versus mean lifeexpectancy", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent"}, "hardness": "Easy"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, shows the correlation between average life expectancy and total population.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, shows the correlation between average life expectancy and total population with a scatter plot.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "Plot a scatter chart, sum(population) by mean lifeexpectancy.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, shows the proportion of their total population with a pie chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize PIE SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "A pie chart shows the proportion of the total population of continents that have an average life expectancy of less than 72.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize PIE SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "Give me a pie to show sum population from different continent.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72", "binning": ""}, "VQL": "Visualize PIE SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"}, "hardness": "Medium"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, draw a scatter chart shows their average life expectancy and the total population of each continent", "db_id": "world_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent"}, "hardness": "Medium"}, {"nl_queries": "Show sum(population) vs mean lifeexpectancy as scatter plot use a different color for each Continent", "db_id": "world_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent"}, "hardness": "Medium"}, {"nl_queries": "What is the official language used in the country the name of whose head of state is Beatrix, and count them by a pie chart", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language", "binning": ""}, "VQL": "Visualize PIE SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language"}, "hardness": "Hard"}, {"nl_queries": "What is the official language spoken in the country whose head of state is Beatrix, and count them by a pie chart", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language", "binning": ""}, "VQL": "Visualize PIE SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language"}, "hardness": "Hard"}, {"nl_queries": "What is the official language spoken in the country whose head of state is Beatrix, and count them by a bar chart", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language", "binning": ""}, "VQL": "Visualize BAR SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language"}, "hardness": "Hard"}, {"nl_queries": "What is the official language used in the country the name of whose head of state is Beatrix, and count them by a bar chart", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language", "binning": ""}, "VQL": "Visualize BAR SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language"}, "hardness": "Hard"}, {"nl_queries": "Find the government form name and total population for each government form whose average life expectancy is longer than 72. ", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm"}, "hardness": "Easy"}, {"nl_queries": "Give me a histogram for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm"}, "hardness": "Easy"}, {"nl_queries": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72. Visualize by bar chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show total number of population from different governmentform", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm"}, "hardness": "Easy"}, {"nl_queries": "Return a pie on what are the names and areas of countries with the top 5 largest area?", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"}, "hardness": "Medium"}, {"nl_queries": "A pie chart about what are the names and areas of countries with the top 5 largest area?", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"}, "hardness": "Medium"}, {"nl_queries": "What are the names and areas of countries with the top 5 largest area. ", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"}, "hardness": "Medium"}, {"nl_queries": "Return the names and surface areas of the 5 largest countries with a pie chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"}, "hardness": "Medium"}, {"nl_queries": "Return the names and surface areas of the 5 largest countries. Visualize by a pie chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "binning": ""}, "VQL": "Visualize PIE SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on what are the names and areas of countries with the top 5 largest area?", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "binning": ""}, "VQL": "Visualize BAR SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"}, "hardness": "Medium"}, {"nl_queries": "What are the names and areas of countries with the top 5 largest area. Visualize by bar chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "binning": ""}, "VQL": "Visualize BAR SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"}, "hardness": "Medium"}, {"nl_queries": "Return the names and surface areas of the 5 largest countries by a bar chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "binning": ""}, "VQL": "Visualize BAR SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"}, "hardness": "Medium"}, {"nl_queries": "Return the names and surface areas of the 5 largest countries. Visualize by bar chart.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "binning": ""}, "VQL": "Visualize BAR SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"}, "hardness": "Medium"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, show their total population with a bar chart, and list by the X-axis from low to high.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the total population corresponding to continents that have an average life expectancy of less than 72? Visualize them in a bar chart, I want to sort in ascending by the Continent.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent ASC"}, "hardness": "Hard"}, {"nl_queries": "Create a bar chart showing sum population across continent, I want to rank Continent from low to high order please.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent ASC"}, "hardness": "Hard"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, show their total population with a bar chart, rank in desc by the Continent.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the total population corresponding to continents that have an average life expectancy of less than 72? Visualize them in a bar chart, and could you order from high to low by the Continent please?", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent DESC"}, "hardness": "Hard"}, {"nl_queries": "Create a bar chart showing sum population across continent, and rank in desc by the Continent.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent DESC"}, "hardness": "Hard"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, show their total population with a bar chart, display in asc by the sum population.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) ASC"}, "hardness": "Hard"}, {"nl_queries": "Create a bar chart showing sum population across continent, and show in ascending by the Y-axis please.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) ASC"}, "hardness": "Hard"}, {"nl_queries": "What is the total population corresponding to continents that have an average life expectancy of less than 72? Visualize them in a bar chart, and show in ascending by the Y-axis please.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) ASC"}, "hardness": "Hard"}, {"nl_queries": "Create a bar chart showing sum population across continent, could you display y-axis from high to low order?", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) DESC"}, "hardness": "Hard"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, show their total population with a bar chart, list sum population in descending order please.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) DESC"}, "hardness": "Hard"}, {"nl_queries": "What is the total population corresponding to continents that have an average life expectancy of less than 72? Visualize them in a bar chart, list by the total number in descending.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) DESC"}, "hardness": "Hard"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, draw a bar chart to show their average life expectancy, sort X-axis in ascending order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing average life expectancy of each continent where the average life expectancy is shorter than 72, show by the names in asc.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of continent versus mean lifeexpectancy, order by the bars in ascending.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent ASC"}, "hardness": "Medium"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, draw a bar chart to show their average life expectancy, and display by the Continent from high to low.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of continent versus mean lifeexpectancy, and rank in descending by the x-axis.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing average life expectancy of each continent where the average life expectancy is shorter than 72, and display in descending by the X-axis.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of continent versus mean lifeexpectancy, and could you show from low to high by the total number?", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing average life expectancy of each continent where the average life expectancy is shorter than 72, could you show from low to high by the total number?", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, draw a bar chart to show their average life expectancy, and list y-axis in ascending order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) ASC"}, "hardness": "Medium"}, {"nl_queries": "For each continent where the average life expectancy is shorter than 72, draw a bar chart to show their average life expectancy, list from high to low by the total number.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart showing average life expectancy of each continent where the average life expectancy is shorter than 72, could you rank in desc by the total number?", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of continent versus mean lifeexpectancy, list from high to low by the total number.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the official language spoken in the country whose head of state is Beatrix, and count them by a bar chart, and sort x-axis in asc order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY Language ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY Language ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the official language used in the country the name of whose head of state is Beatrix, and count them by a bar chart, and could you display x axis in ascending order please?", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY Language ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY Language ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the official language used in the country the name of whose head of state is Beatrix, and count them by a bar chart, and rank in desc by the x axis.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY Language DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY Language DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the official language spoken in the country whose head of state is Beatrix, and count them by a bar chart, list by the names from high to low.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY Language DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY Language DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the official language used in the country the name of whose head of state is Beatrix, and count them by a bar chart, rank in ascending by the the number of language please.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY COUNT(Language) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY COUNT(Language) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the official language spoken in the country whose head of state is Beatrix, and count them by a bar chart, and rank total number from low to high order please.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY COUNT(Language) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY COUNT(Language) ASC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the official language used in the country the name of whose head of state is Beatrix, and count them by a bar chart, and order by the total number from high to low.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY COUNT(Language) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY COUNT(Language) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "What is the official language spoken in the country whose head of state is Beatrix, and count them by a bar chart, and rank by the total number from high to low.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY COUNT(Language) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language ORDER BY COUNT(Language) DESC"}, "hardness": "Extra Hard"}, {"nl_queries": "Find the government form name and total population for each government form whose average life expectancy is longer than 72, and sort names in ascending order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 Visualize by bar chart, sort names in ascending order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, and rank by the x-axis from low to high.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, sort names in ascending order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show total number of population from different governmentform, I want to list bars in ascending order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 Visualize by bar chart, I want to list x axis in desc order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm DESC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, and order in desc by the X-axis.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm DESC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show total number of population from different governmentform, and order in desc by the X-axis.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm DESC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, sort x axis from high to low order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm DESC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the government form name and total population for each government form whose average life expectancy is longer than 72, and list X-axis in desc order please.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm DESC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY GovernmentForm DESC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, and rank in ascending by the Y.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC"}, "hardness": "Medium"}, {"nl_queries": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 Visualize by bar chart, and display Y-axis in asc order.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the government form name and total population for each government form whose average life expectancy is longer than 72, and I want to order in ascending by the Y.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, sort by the sum population in asc.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show total number of population from different governmentform, and list in asc by the sum population.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give me a histogram for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, rank from high to low by the sum population.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, and could you show by the y axis from high to low?", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC"}, "hardness": "Medium"}, {"nl_queries": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 Visualize by bar chart, display in desc by the Y.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the government form name and total population for each government form whose average life expectancy is longer than 72, and rank in desc by the sum population please.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show total number of population from different governmentform, and list from high to low by the Y-axis.", "db_id": "world_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different teams in eliminations and the number of eliminations from each team by a pie chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Show different teams in eliminations and the number of eliminations from each team, and show me the proportion.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Show me the proportion on how many eliminations did each team have?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Pie chart about how many eliminations did each team have?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "How many eliminations did each team have. Plot them as pie chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "I want to know the proportion for each team.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "A pie chart about the proportion of the total number for each team.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Show different teams in eliminations and the number of eliminations from each team by a bar chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Show different teams in eliminations and the number of eliminations from each team. Visualize by bar chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Return a bar chart on how many eliminations did each team have?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "A bar chart about how many eliminations did each team have?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "How many eliminations did each team have. Visualize by bar chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show the total number from different team", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of the number of locations of the wrestlers.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Give the proportion of the number of locations of all wrestlers with a pie chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Compute the total the number of location across location as a pie chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location", "binning": ""}, "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "What is the number of locations of the wrestlers? Visualize by a bar chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Give the number of locations of all wrestlers with a bar chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "A bar chart for what is the number of locations of the wrestlers.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "Draw a bar chart of location versus how many location", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location"}, "hardness": "Easy"}, {"nl_queries": "A pie chart shows the proportion of the number of teams in elimination.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Draw a pie chart for what are the proportion of the teams in elimination? ", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "What is the proportion of the teams in elimination?  Display by a pie chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Compute the total how many team across team as a pie chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize PIE SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Show the number of teams in elimination in a bar chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "What is the number of their teams in elimination? Draw a bar chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Visualize a bar chart for what is the number of their teams in elimination?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Create a bar chart showing how many team across team", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team"}, "hardness": "Easy"}, {"nl_queries": "Show the reign and days held of wrestlers in a scatter chart", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Reign , Days_held FROM wrestler", "binning": ""}, "VQL": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler"}, "hardness": "Easy"}, {"nl_queries": "Show the reign and days held of wrestlers. Visualize by scatter chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Reign , Days_held FROM wrestler", "binning": ""}, "VQL": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler"}, "hardness": "Easy"}, {"nl_queries": "Draw a scatter chart for what are the reigns and days held of all wrestlers?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Reign , Days_held FROM wrestler", "binning": ""}, "VQL": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler"}, "hardness": "Easy"}, {"nl_queries": "What are the reigns and days held of all wrestlers. Visualize by scatter chart.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Reign , Days_held FROM wrestler", "binning": ""}, "VQL": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler"}, "hardness": "Easy"}, {"nl_queries": "Scatter plot to show reign on x axis and days_held on y axis.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT Reign , Days_held FROM wrestler", "binning": ""}, "VQL": "Visualize SCATTER SELECT Reign , Days_held FROM wrestler"}, "hardness": "Easy"}, {"nl_queries": "Bar graph to show the total number from different team, and list in ascending by the bar.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different teams in eliminations and the number of eliminations from each team by a bar chart, list x-axis in ascending order.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC"}, "hardness": "Medium"}, {"nl_queries": "How many eliminations did each team have Visualize by bar chart, list in asc by the names.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different teams in eliminations and the number of eliminations from each team Visualize by bar chart, and order bars from low to high order.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many eliminations did each team have?, and sort by the bar in asc.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many eliminations did each team have?, list in ascending by the bar.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many eliminations did each team have?, sort by the X from high to low.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different team, show in desc by the Team.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different teams in eliminations and the number of eliminations from each team by a bar chart, sort by the X from high to low.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different teams in eliminations and the number of eliminations from each team Visualize by bar chart, could you show in desc by the Team?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many eliminations did each team have?, and sort by the bars in desc.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC"}, "hardness": "Medium"}, {"nl_queries": "How many eliminations did each team have Visualize by bar chart, I want to rank by the X-axis in descending please.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different teams in eliminations and the number of eliminations from each team by a bar chart, order by the total number from low to high.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many eliminations did each team have Visualize by bar chart, and rank by the y-axis in ascending.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different team, and could you show in ascending by the y-axis please?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many eliminations did each team have?, and could you show in ascending by the y-axis please?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many eliminations did each team have?, and rank by the y-axis in ascending.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show different teams in eliminations and the number of eliminations from each team Visualize by bar chart, and rank from low to high by the the total number .", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a bar chart on how many eliminations did each team have?, sort y-axis in descending order.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different team, and could you list by the total number in desc?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different teams in eliminations and the number of eliminations from each team Visualize by bar chart, and order by the the total number from high to low please.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show different teams in eliminations and the number of eliminations from each team by a bar chart, and list from high to low by the Y-axis.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart about how many eliminations did each team have?, rank by the y-axis in desc.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many eliminations did each team have Visualize by bar chart, and I want to display in descending by the Y-axis.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of locations of the wrestlers? Visualize by a bar chart, I want to list by the bar from low to high.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what is the number of locations of the wrestlers, and could you order in asc by the Location?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of location versus how many location, and display by the x-axis from low to high.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "Give the number of locations of all wrestlers with a bar chart, and could you sort x axis from low to high order please?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location ASC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what is the number of locations of the wrestlers, and sort by the x-axis in descending.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of location versus how many location, sort by the x-axis from high to low.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of locations of the wrestlers? Visualize by a bar chart, and sort by the x-axis from high to low.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "Give the number of locations of all wrestlers with a bar chart, sort by the x-axis in descending.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what is the number of locations of the wrestlers, and show total number in ascending order.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of location versus how many location, could you order from low to high by the the number of location?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) ASC"}, "hardness": "Medium"}, {"nl_queries": "Give the number of locations of all wrestlers with a bar chart, show by the y axis in asc.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of locations of the wrestlers? Visualize by a bar chart, order in asc by the y axis.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) ASC"}, "hardness": "Medium"}, {"nl_queries": "Draw a bar chart of location versus how many location, I want to sort by the y-axis in descending please.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) DESC"}, "hardness": "Medium"}, {"nl_queries": "Give the number of locations of all wrestlers with a bar chart, display in descending by the y axis.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) DESC"}, "hardness": "Medium"}, {"nl_queries": "A bar chart for what is the number of locations of the wrestlers, and I want to show y-axis in desc order.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of locations of the wrestlers? Visualize by a bar chart, and I want to sort by the Y in desc.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of teams in elimination in a bar chart, I want to show in asc by the X-axis.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many team across team, and I want to rank from low to high by the X-axis please.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is the number of their teams in elimination?, and show Team from low to high order.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of their teams in elimination? Draw a bar chart, list in ascending by the x axis.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of their teams in elimination? Draw a bar chart, and list x axis in desc order.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of teams in elimination in a bar chart, could you sort by the x-axis from high to low?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many team across team, and I want to order in descending by the names.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is the number of their teams in elimination?, and rank X-axis in descending order.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is the number of their teams in elimination?, order in ascending by the y axis please.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) ASC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of their teams in elimination? Draw a bar chart, and order in ascending by the y axis please.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) ASC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many team across team, display by the y axis in ascending please.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of teams in elimination in a bar chart, could you display y axis in ascending order?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) ASC"}, "hardness": "Medium"}, {"nl_queries": "Visualize a bar chart for what is the number of their teams in elimination?, and display y-axis in descending order.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show the number of teams in elimination in a bar chart, and order in desc by the total number.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) DESC"}, "hardness": "Medium"}, {"nl_queries": "What is the number of their teams in elimination? Draw a bar chart, and I want to list by the y-axis from high to low.", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) DESC"}, "hardness": "Medium"}, {"nl_queries": "Create a bar chart showing how many team across team, could you sort in desc by the the number of team please?", "db_id": "wrestler", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the total number of tours for each ranking date. ", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date"}, "hardness": "Easy"}, {"nl_queries": "Scatter chart. how many total tours were there for each ranking date?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date"}, "hardness": "Easy"}, {"nl_queries": " how many total tours were there for each ranking date?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date"}, "hardness": "Easy"}, {"nl_queries": "How many total tours were there for each ranking date. ", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date"}, "hardness": "Easy"}, {"nl_queries": "Scatter plot to show sum(tours) on x axis and ranking_date on y axis.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize SCATTER", "data_part": {"sql_part": "SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date", "binning": ""}, "VQL": "Visualize SCATTER SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date"}, "hardness": "Easy"}, {"nl_queries": "Find the number of players for each hand type. Plot them as pie chart.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand", "binning": ""}, "VQL": "Visualize PIE SELECT hand , count(*) FROM players GROUP BY hand"}, "hardness": "Easy"}, {"nl_queries": "Visualize a pie chart with how many players are there for each hand type?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand", "binning": ""}, "VQL": "Visualize PIE SELECT hand , count(*) FROM players GROUP BY hand"}, "hardness": "Easy"}, {"nl_queries": "Give the proportion of how many players are there for each hand type?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand", "binning": ""}, "VQL": "Visualize PIE SELECT hand , count(*) FROM players GROUP BY hand"}, "hardness": "Easy"}, {"nl_queries": "How many players are there for each hand type. Show the proportion.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand", "binning": ""}, "VQL": "Visualize PIE SELECT hand , count(*) FROM players GROUP BY hand"}, "hardness": "Easy"}, {"nl_queries": "Give me a pie to show the total number from different hand.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize PIE", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand", "binning": ""}, "VQL": "Visualize PIE SELECT hand , count(*) FROM players GROUP BY hand"}, "hardness": "Easy"}, {"nl_queries": "Find the number of players for each hand type. Show bar chart.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for how many players are there for each hand type?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on how many players are there for each hand type?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand"}, "hardness": "Easy"}, {"nl_queries": "How many players are there for each hand type. Visualize by bar chart.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand"}, "hardness": "Easy"}, {"nl_queries": "Bar chart x axis hand y axis the total number ", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand"}, "hardness": "Easy"}, {"nl_queries": "Find the number of matches happened in each year. Plot them as bar chart.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for how many matches were played in each year?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Return a histogram on how many matches were played in each year?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "How many matches were played in each year. ", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Bar chart of the total number from each year", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR"}, "hardness": "Easy"}, {"nl_queries": "Show me a bar chart for how many matches were played each year?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many matches were played in each year.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Sum the number of matches that happened each year. Plot them as a bar chart.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show the total number from each year, note that the year is binned into Year interval.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for the average of how many matches were played each year?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on the average of how many matches were played in each year.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Compute the average of the number of matches that happened each year (bin in to Year interval). Plot them as a bar chart.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the count year from different year, and bin the year into YEAR interval", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many players are there for each hand type?, and sort in asc by the bar.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many players are there for each hand type?, sort by the x-axis in ascending.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis hand y axis the total number, display by the x axis from low to high.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC"}, "hardness": "Medium"}, {"nl_queries": "How many players are there for each hand type Visualize by bar chart, sort by the x-axis in ascending.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of players for each hand type Show bar chart, sort by the x-axis in ascending.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis hand y axis the total number, show by the names from high to low.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand DESC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many players are there for each hand type?, rank in desc by the names.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand DESC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of players for each hand type Show bar chart, I want to sort X-axis in desc order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand DESC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many players are there for each hand type?, show by the X-axis in desc.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand DESC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand DESC"}, "hardness": "Medium"}, {"nl_queries": "How many players are there for each hand type Visualize by bar chart, and could you sort by the bar in descending?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand DESC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many players are there for each hand type?, could you list by the total number in asc?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis hand y axis the total number, and could you list from low to high by the total number?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of players for each hand type Show bar chart, and could you list by the total number in asc?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many players are there for each hand type?, could you list by the total number in asc?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many players are there for each hand type Visualize by bar chart, and I want to list by the Y-axis in ascending please.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many players are there for each hand type Visualize by bar chart, sort Y-axis in descending order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many players are there for each hand type?, and sort Y-axis in descending order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many players are there for each hand type?, and sort Y-axis in descending order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of players for each hand type Show bar chart, and display Y in descending order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart x axis hand y axis the total number, and display by the Y-axis in desc.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the total number from each year, and I want to order by the bar in ascending.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year ASC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many matches were played in each year?, order in asc by the names please.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year ASC"}, "hardness": "Medium"}, {"nl_queries": "How many matches were played in each year, display bar in ascending order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many matches were played in each year?, and display x-axis in asc order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of matches happened in each year Plot them as bar chart, and show names in asc order please.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many matches were played in each year?, rank by the x-axis in desc.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC"}, "hardness": "Medium"}, {"nl_queries": "How many matches were played in each year, and rank by the x-axis in desc.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of matches happened in each year Plot them as bar chart, show in desc by the X.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many matches were played in each year?, and rank x axis from high to low order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the total number from each year, and display names from high to low order please.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many matches were played in each year?, order Y in ascending order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "How many matches were played in each year, and sort Y-axis in ascending order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the total number from each year, and order Y in ascending order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of matches happened in each year Plot them as bar chart, I want to list in ascending by the y axis.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many matches were played in each year?, and I want to sort in ascending by the Y-axis.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) ASC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) ASC"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many matches were played in each year?, list by the the total number in descending.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many matches were played in each year?, could you sort in desc by the y-axis?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Bar chart of the total number from each year, I want to sort Y in descending order please.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "How many matches were played in each year, could you list total number in descending order please?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Find the number of matches happened in each year Plot them as bar chart, and show the total number in descending order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) DESC", "binning": ""}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY count(*) DESC"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many matches were played in each year, order from low to high by the y axis.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches ORDER BY count(*) ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches ORDER BY count(*) ASC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number from each year, bin year in to YEAR interval and list in asc by the total number.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches ORDER BY count(*) ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches ORDER BY count(*) ASC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many matches were played each year?, and order from low to high by the y axis.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches ORDER BY count(*) ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches ORDER BY count(*) ASC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Sum the number of matches that happened each year Plot them as a bar chart, order from low to high by the y axis.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches ORDER BY count(*) ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches ORDER BY count(*) ASC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show me the total number from each year, I want to order Y-axis in desc order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches ORDER BY count(*) DESC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches ORDER BY count(*) DESC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for how many matches were played each year?, I want to show from high to low by the Y-axis.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches ORDER BY count(*) DESC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches ORDER BY count(*) DESC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on how many matches were played in each year, list in desc by the total number.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches ORDER BY count(*) DESC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches ORDER BY count(*) DESC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Sum the number of matches that happened each year Plot them as a bar chart, and list in descending by the y axis.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(*) FROM matches ORDER BY count(*) DESC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(*) FROM matches ORDER BY count(*) DESC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on the average of how many matches were played in each year, order by the the total number in ascending.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches ORDER BY count(year) ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches ORDER BY count(year) ASC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for the average of how many matches were played each year?, list by the total number from low to high.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches ORDER BY count(year) ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches ORDER BY count(year) ASC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Compute the average of the number of matches that happened each year Plot them as a bar chart, sort Y-axis in asc order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches ORDER BY count(year) ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches ORDER BY count(year) ASC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show count year from different year, bin year into YEAR interaval and then rank in asc order by the Y.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches ORDER BY count(year) ASC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches ORDER BY count(year) ASC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Bar graph to show the total number from different year, binning by year by, display from high to low by the count year.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches ORDER BY count(year) DESC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches ORDER BY count(year) DESC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Compute the average of the number of matches that happened each year Plot them as a bar chart, I want to order Y-axis in desc order please.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches ORDER BY count(year) DESC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches ORDER BY count(year) DESC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Return a histogram on the average of how many matches were played in each year, could you show by the total number in descending?", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches ORDER BY count(year) DESC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches ORDER BY count(year) DESC BIN year BY YEAR"}, "hardness": "Medium"}, {"nl_queries": "Show me a bar chart for the average of how many matches were played each year?, list y-axis in descending order.", "db_id": "wta_1", "vis_query": {"vis_part": "Visualize BAR", "data_part": {"sql_part": "SELECT year , count(year) FROM matches ORDER BY count(year) DESC", "binning": "BIN year BY YEAR"}, "VQL": "Visualize BAR SELECT year , count(year) FROM matches ORDER BY count(year) DESC BIN year BY YEAR"}, "hardness": "Medium"}]